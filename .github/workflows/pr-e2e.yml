name: pr-e2e-tests
on:
  issue_comment:
    types: [created]
jobs:
  triage:
    runs-on: ubuntu-latest
    name: Comment evaluate
    outputs:
      run-e2e: ${{ startsWith(github.event.comment.body,'/run-e2e') && steps.check-permission.outputs.has-permission }}
      pr_num: ${{ steps.parser.outputs.pr_num }}
      image_tag: "pr-${{ steps.parser.outputs.pr_num }}-${{ github.event.comment.id }}"
    steps:
      - name: Check user permission
        if: startsWith(github.event.comment.body,'/run-e2e')
        id: check-permission
        uses: scherermichael-oss/action-has-permission@master
        with:
          required-permission: write
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Update comment with the execution url
        if: ${{ startsWith(github.event.comment.body,'/run-e2e') && steps.check-permission.outputs.has-permission }}
        uses: peter-evans/create-or-update-comment@v2
        with:
          comment-id: ${{ github.event.comment.id }}
          body: |
            **Update:** You can check the progres [here](https://github.com/${{github.repository}}/actions/runs/${{github.run_id}})
          reactions: rocket

      - name: Get Pull Request number
        id: parser
        run: |
          PR_URL="${{ github.event.issue.pull_request.url }}"
          PR_NUM=${PR_URL##*/}
          echo "Checking out from PR #$PR_NUM based on URL: $PR_URL"
          echo "::set-output name=pr_num::$PR_NUM"

  build-test-images:
    needs: triage
    runs-on: ubuntu-latest
    name: Build images
    container: ghcr.io/kedacore/build-tools:main
    if: needs.triage.outputs.run-e2e == '1'
    steps:
      - uses: actions/checkout@v3

      - name: Checkout Pull Request
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        id: checkout
        run: |
          hub pr checkout ${{ needs.triage.outputs.pr_num }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          # Username used to log in to a Docker registry. If not set then no login will occur
          username: ${{ github.repository_owner }}
          # Password or personal access token used to log in to a Docker registry. If not set then no login will occur
          password: ${{ secrets.GHCR_AUTH_PAT }}
          # Server address of Docker registry. If not set then will default to Docker Hub
          registry: ghcr.io

      - name: Publish on GitHub Container Registry
        run: make publish
        env:
          E2E_IMAGE_TAG: ${{ needs.triage.outputs.image_tag }}

  run-test:
    needs: build-test-images
    runs-on: ubuntu-latest
    name: Execute e2e tests
    container: ghcr.io/kedacore/build-tools:main
    concurrency: pr-e2e-tests
    if: needs.triage.outputs.run-e2e == '1'
    steps:
      - uses: actions/checkout@v3

      - name: Checkout Pull Request
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        id: checkout
        run: |
          hub pr checkout ${{ needs.triage.outputs.pr_num }}

      - name: Run end to end tests
        continue-on-error: true
        id: test
        env:
          AWS_ACCESS_KEY: ${{ secrets.AWS_ACCESS_KEY }}
          AWS_SECRET_KEY: ${{ secrets.AWS_SECRET_KEY }}
          AZURE_APP_INSIGHTS_APP_ID: ${{ secrets.AZURE_APP_INSIGHTS_APP_ID }}
          AZURE_APP_INSIGHTS_CONNECTION_STRING: ${{ secrets.AZURE_APP_INSIGHTS_CONNECTION_STRING }}
          AZURE_APP_INSIGHTS_INSTRUMENTATION_KEY: ${{ secrets.AZURE_APP_INSIGHTS_INSTRUMENTATION_KEY }}
          AZURE_DATA_EXPLORER_DB: ${{ secrets.AZURE_DATA_EXPLORER_DB }}
          AZURE_DATA_EXPLORER_ENDPOINT: ${{ secrets.AZURE_DATA_EXPLORER_ENDPOINT }}
          AZURE_DEVOPS_BUILD_DEFINITON_ID: ${{ secrets.AZURE_DEVOPS_BUILD_DEFINITON_ID }}
          AZURE_DEVOPS_ORGANIZATION_URL: ${{ secrets.AZURE_DEVOPS_ORGANIZATION_URL }}
          AZURE_DEVOPS_PAT: ${{ secrets.AZURE_DEVOPS_PAT }}
          AZURE_DEVOPS_POOL_NAME: ${{ secrets.AZURE_DEVOPS_POOL_NAME }}
          AZURE_DEVOPS_PROJECT: ${{ secrets.AZURE_DEVOPS_PROJECT }}
          AZURE_KEYVAULT_URI:  ${{ secrets.AZURE_KEYVAULT_URI }}
          AZURE_LOG_ANALYTICS_WORKSPACE_ID: ${{ secrets.AZURE_LOG_ANALYTICS_WORKSPACE_ID }}
          AZURE_RUN_WORKLOAD_IDENTITY_TESTS: true
          AZURE_RESOURCE_GROUP: ${{ secrets.AZURE_RESOURCE_GROUP }}
          AZURE_SERVICE_BUS_CONNECTION_STRING:  ${{ secrets.AZURE_SERVICE_BUS_CONNECTION_STRING }}
          AZURE_SP_APP_ID: ${{ secrets.AZURE_SP_APP_ID }}
          AZURE_SP_OBJECT_ID: ${{ secrets.AZURE_SP_OBJECT_ID }}
          AZURE_SP_KEY: ${{ secrets.AZURE_SP_KEY }}
          AZURE_SP_TENANT: ${{ secrets.AZURE_SP_TENANT }}
          AZURE_STORAGE_CONNECTION_STRING: ${{ secrets.AZURE_STORAGE_CONNECTION_STRING }}
          AZURE_SUBSCRIPTION: ${{ secrets.AZURE_SUBSCRIPTION }}
          DATADOG_API_KEY: ${{ secrets.DATADOG_API_KEY}}
          DATADOG_APP_KEY: ${{ secrets.DATADOG_APP_KEY}}
          DATADOG_SITE: ${{ secrets.DATADOG_SITE}}
          E2E_IMAGE_TAG: ${{ needs.triage.outputs.image_tag }}
          GCP_SP_KEY: ${{ secrets.GCP_SP_KEY }}
          NEWRELIC_ACCOUNT_ID: ${{ secrets.NEWRELIC_ACCOUNT_ID}}
          NEWRELIC_API_KEY: ${{ secrets.NEWRELIC_API_KEY}}
          NEWRELIC_LICENSE: ${{ secrets.NEWRELIC_LICENSE}}
          OIDC_ISSUER_URL: ${{ secrets.OIDC_ISSUER_URLPR }}
          OPENSTACK_AUTH_URL: ${{ secrets.OPENSTACK_AUTH_URL }}
          OPENSTACK_PASSWORD: ${{ secrets.OPENSTACK_PASSWORD }}
          OPENSTACK_PROJECT_ID: ${{ secrets.OPENSTACK_PROJECT_ID }}
          OPENSTACK_USER_ID: ${{ secrets.OPENSTACK_USER_ID }}
          PREDICTKUBE_API_KEY: ${{ secrets.PREDICTKUBE_API_KEY }}
          TEST_CLUSTER_NAME: keda-pr-run
        run: |
          MESSAGE="${{ github.event.comment.body }}"
          REGEX='/run-e2e (.+)'
          if [[ "$MESSAGE" =~ $REGEX ]]
          then
            export E2E_TEST_REGEX="${BASH_REMATCH[1]}"
          fi
          echo "${{ needs.triage.outputs.pr_num }}"
          make e2e-test

      - name: Delete all e2e related namespaces
        if: ${{ always() }}
        run: make e2e-test-clean
        env:
          AZURE_RESOURCE_GROUP: ${{ secrets.AZURE_RESOURCE_GROUP }}
          AZURE_SP_APP_ID: ${{ secrets.AZURE_SP_APP_ID }}
          AZURE_SP_KEY: ${{ secrets.AZURE_SP_KEY }}
          AZURE_SP_TENANT: ${{ secrets.AZURE_SP_TENANT }}
          AZURE_SUBSCRIPTION: ${{ secrets.AZURE_SUBSCRIPTION }}
          TEST_CLUSTER_NAME: keda-pr-run

      - name: React to comment with success
        uses: dkershner6/reaction-action@v1
        if: steps.test.outcome == 'success'
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commentId: ${{ github.event.comment.id }}
          reaction: "+1"

      - name: React to comment with failure
        uses: dkershner6/reaction-action@v1
        if: steps.test.outcome != 'success'
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commentId: ${{ github.event.comment.id }}
          reaction: "-1"
