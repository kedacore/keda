name: pr-e2e-tests
on:
  issue_comment:
    types: [created]
concurrency: e2e-tests
jobs:
  check:
    runs-on: ubuntu-latest
    name: Comment evaluate
    outputs:
      run-e2e: ${{ steps.check-comment.outputs.triggered == 'true' && steps.check-permission.outputs.has-permission }}
    steps:
      - uses: khan/pull-request-comment-trigger@master
        id: check-comment
        with:
          trigger: '/run-e2e'
          prefix_only: true
        env:
          GITHUB_TOKEN: '${{ secrets.GITHUB_TOKEN }}'

      - name: Check user permission
        if: steps.check-comment.outputs.triggered == 'true'
        id: check-permission
        uses: scherermichael-oss/action-has-permission@master
        with:
          required-permission: write
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: React to comment with rocket
        uses: dkershner6/reaction-action@v1
        if: steps.check-comment.outputs.triggered == 'true' && steps.check-permission.outputs.has-permission
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commentId: ${{ github.event.comment.id }}
          reaction: "rocket"

  run-test:
    needs: check
    runs-on: ubuntu-latest
    name: Execute e2e tests
    container: ghcr.io/kedacore/build-tools:main
    concurrency: e2e-tests
    if: needs.check.outputs.run-e2e == '1'
    steps:
      - uses: actions/checkout@v2

      - name: Checkout Pull Request
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        id: checkout
        run: |
          PR_URL="${{ github.event.issue.pull_request.url }}"
          PR_NUM=${PR_URL##*/}
          echo "Checking out from PR #$PR_NUM based on URL: $PR_URL"
          hub pr checkout $PR_NUM
          echo "::set-output name=pr_num::$PR_NUM"

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Publish on GitHub Container Registry
        run: make publish
        env:
          E2E_IMAGE_TAG: "pr-${{ steps.checkout.outputs.pr_num }}"

      - name: Run end to end tests
        continue-on-error: true
        id: test
        env:
          AZURE_SUBSCRIPTION: ${{ secrets.AZURE_SUBSCRIPTION }}
          AZURE_RESOURCE_GROUP: ${{ secrets.AZURE_RESOURCE_GROUP }}
          AZURE_SP_ID: ${{ secrets.AZURE_SP_ID }}
          AZURE_SP_KEY: ${{ secrets.AZURE_SP_KEY }}
          AZURE_SP_TENANT: ${{ secrets.AZURE_SP_TENANT }}
          TEST_STORAGE_CONNECTION_STRING: ${{ secrets.TEST_STORAGE_CONNECTION_STRING }}
          TEST_LOG_ANALYTICS_WORKSPACE_ID: ${{ secrets.TEST_LOG_ANALYTICS_WORKSPACE_ID }}
          OPENSTACK_USER_ID: ${{ secrets.OPENSTACK_USER_ID }}
          OPENSTACK_PASSWORD: ${{ secrets.OPENSTACK_PASSWORD }}
          OPENSTACK_PROJECT_ID: ${{ secrets.OPENSTACK_PROJECT_ID }}
          OPENSTACK_AUTH_URL: ${{ secrets.OPENSTACK_AUTH_URL }}
          AZURE_DEVOPS_BUILD_DEFINITON_ID: ${{ secrets.AZURE_DEVOPS_BUILD_DEFINITON_ID }}
          AZURE_DEVOPS_ORGANIZATION_URL: ${{ secrets.AZURE_DEVOPS_ORGANIZATION_URL }}
          AZURE_DEVOPS_PAT: ${{ secrets.AZURE_DEVOPS_PAT }}
          AZURE_DEVOPS_POOL_NAME: ${{ secrets.AZURE_DEVOPS_POOL_NAME }}
          AZURE_DEVOPS_PROJECT: ${{ secrets.AZURE_DEVOPS_PROJECT }}
          E2E_IMAGE_TAG: "pr-${{ steps.checkout.outputs.pr_num }}"
        run: |
          MESSAGE="${{ github.event.comment.body }}"
          REGEX='/run-e2e (.+)'
          if [[ "$MESSAGE" =~ $REGEX ]]
          then
            export E2E_TEST_REGEX="${BASH_REMATCH[1]}"
          fi
          echo "${{ steps.checkout.outputs.pr_num }}"
          make e2e-test

      - name: React to comment with success
        uses: dkershner6/reaction-action@v1
        if: steps.test.outcome == 'success'
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commentId: ${{ github.event.comment.id }}
          reaction: "+1"

      - name: React to comment with failure
        uses: dkershner6/reaction-action@v1
        if: steps.test.outcome != 'success'
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commentId: ${{ github.event.comment.id }}
          reaction: "-1"
