name: nightly-e2e-test
on:
  schedule:
    - cron: "0 0 * * *"

jobs:
  validate:
    name: Test
    runs-on: ubuntu-latest
    concurrency: e2e-tests
    # build-tools is built from ../../tools/build-tools.Dockerfile
    container: ghcr.io/kedacore/build-tools:1.17.13
    steps:
      - name: Check out code
        uses: actions/checkout@v3
        with:
          fetch-depth: 1

      - name: Register workspace path
        run: git config --global --add safe.directory "$GITHUB_WORKSPACE"

      - name: Run end to end test
        env:
          AWS_ACCESS_KEY: ${{ secrets.AWS_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
          AWS_SECRET_KEY: ${{ secrets.AWS_SECRET_KEY }}
          AZURE_APP_INSIGHTS_APP_ID: ${{ secrets.AZURE_APP_INSIGHTS_APP_ID }}
          AZURE_APP_INSIGHTS_CONNECTION_STRING: ${{ secrets.AZURE_APP_INSIGHTS_CONNECTION_STRING }}
          AZURE_APP_INSIGHTS_INSTRUMENTATION_KEY: ${{ secrets.AZURE_APP_INSIGHTS_INSTRUMENTATION_KEY }}
          AZURE_DATA_EXPLORER_DB: ${{ secrets.AZURE_DATA_EXPLORER_DB }}
          AZURE_DATA_EXPLORER_ENDPOINT: ${{ secrets.AZURE_DATA_EXPLORER_ENDPOINT }}
          AZURE_DEVOPS_BUILD_DEFINITION_ID: ${{ secrets.AZURE_DEVOPS_BUILD_DEFINITION_ID }}
          AZURE_DEVOPS_ORGANIZATION_URL: ${{ secrets.AZURE_DEVOPS_ORGANIZATION_URL }}
          AZURE_DEVOPS_PAT: ${{ secrets.AZURE_DEVOPS_PAT }}
          AZURE_DEVOPS_POOL_NAME: ${{ secrets.AZURE_DEVOPS_POOL_NAME }}
          AZURE_DEVOPS_PROJECT: ${{ secrets.AZURE_DEVOPS_PROJECT }}
          AZURE_KEYVAULT_URI:  ${{ secrets.AZURE_KEYVAULT_URI }}
          AZURE_LOG_ANALYTICS_WORKSPACE_ID: ${{ secrets.AZURE_LOG_ANALYTICS_WORKSPACE_ID }}
          AZURE_RESOURCE_GROUP: ${{ secrets.AZURE_RESOURCE_GROUP }}
          AZURE_RUN_WORKLOAD_IDENTITY_TESTS: true
          AZURE_SERVICE_BUS_CONNECTION_STRING:  ${{ secrets.AZURE_SERVICE_BUS_CONNECTION_STRING }}
          AZURE_SERVICE_BUS_ALTERNATIVE_CONNECTION_STRING:  ${{ secrets.AZURE_SERVICE_BUS_ALTERNATIVE_CONNECTION_STRING }}
          AZURE_SP_APP_ID: ${{ secrets.AZURE_SP_APP_ID }}
          AZURE_SP_OBJECT_ID: ${{ secrets.AZURE_SP_OBJECT_ID }}
          AZURE_SP_KEY: ${{ secrets.AZURE_SP_KEY }}
          AZURE_SP_ALTERNATIVE_APP_ID: ${{ secrets.AZURE_SP_ALTERNATIVE_APP_ID }}
          AZURE_SP_ALTERNATIVE_OBJECT_ID: ${{ secrets.AZURE_SP_ALTERNATIVE_OBJECT_ID }}
          AZURE_SP_ALTERNATIVE_KEY: ${{ secrets.AZURE_SP_ALTERNATIVE_KEY }}
          AZURE_SP_TENANT: ${{ secrets.AZURE_SP_TENANT }}
          AZURE_STORAGE_CONNECTION_STRING: ${{ secrets.AZURE_STORAGE_CONNECTION_STRING }}
          AZURE_SUBSCRIPTION: ${{ secrets.AZURE_SUBSCRIPTION }}
          DATADOG_API_KEY: ${{ secrets.DATADOG_API_KEY}}
          DATADOG_APP_KEY: ${{ secrets.DATADOG_APP_KEY}}
          DATADOG_SITE: ${{ secrets.DATADOG_SITE}}
          GCP_SP_KEY: ${{ secrets.GCP_SP_KEY }}
          NEWRELIC_ACCOUNT_ID: ${{ secrets.NEWRELIC_ACCOUNT_ID}}
          NEWRELIC_API_KEY: ${{ secrets.NEWRELIC_API_KEY}}
          NEWRELIC_LICENSE: ${{ secrets.NEWRELIC_LICENSE}}
          OIDC_ISSUER_URL: ${{ secrets.OIDC_ISSUER_URLNIGHTLY }}
          OPENSTACK_AUTH_URL: ${{ secrets.OPENSTACK_AUTH_URL }}
          OPENSTACK_PASSWORD: ${{ secrets.OPENSTACK_PASSWORD }}
          OPENSTACK_PROJECT_ID: ${{ secrets.OPENSTACK_PROJECT_ID }}
          OPENSTACK_USER_ID: ${{ secrets.OPENSTACK_USER_ID }}
          PREDICTKUBE_API_KEY: ${{ secrets.PREDICTKUBE_API_KEY }}
        run: make e2e-test

      - name: Delete all e2e related namespaces
        if: ${{ always() }}
        run: make e2e-test-clean
        env:
          AZURE_RESOURCE_GROUP: ${{ secrets.AZURE_RESOURCE_GROUP }}
          AZURE_SP_APP_ID: ${{ secrets.AZURE_SP_APP_ID }}
          AZURE_SP_KEY: ${{ secrets.AZURE_SP_KEY }}
          AZURE_SP_TENANT: ${{ secrets.AZURE_SP_TENANT }}
          AZURE_SUBSCRIPTION: ${{ secrets.AZURE_SUBSCRIPTION }}

  validate-arm64:
    name: validate-arm64
    runs-on: ARM64
    concurrency: arm-smoke-tests
    steps:
      - name: Setup Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.17

      - name: Install prerequisites
        run: |
          apt update
          apt install curl make ca-certificates gcc libc-dev -y
        env:
          DEBIAN_FRONTEND: noninteractive

      - name: Check out code
        uses: actions/checkout@v3
        with:
          fetch-depth: 1

      - name: Create k8s v1.23 Kind Cluster
        uses: helm/kind-action@main
        with:
          node_image: kindest/node:v1.23.0@sha256:49824ab1727c04e56a21a5d8372a402fcd32ea51ac96a2706a12af38934f81ac
          cluster_name: smoke-tests-cluster

      - name: Run smoke test
        run: make arm-smoke-test
