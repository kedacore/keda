/*
MIT License

Copyright (c) Microsoft Corporation. All rights reserved.

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "github.com/kedacore/keda/pkg/apis/keda/v1alpha1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// ScaledObjectLister helps list ScaledObjects.
type ScaledObjectLister interface {
	// List lists all ScaledObjects in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.ScaledObject, err error)
	// ScaledObjects returns an object that can list and get ScaledObjects.
	ScaledObjects(namespace string) ScaledObjectNamespaceLister
	ScaledObjectListerExpansion
}

// scaledObjectLister implements the ScaledObjectLister interface.
type scaledObjectLister struct {
	indexer cache.Indexer
}

// NewScaledObjectLister returns a new ScaledObjectLister.
func NewScaledObjectLister(indexer cache.Indexer) ScaledObjectLister {
	return &scaledObjectLister{indexer: indexer}
}

// List lists all ScaledObjects in the indexer.
func (s *scaledObjectLister) List(selector labels.Selector) (ret []*v1alpha1.ScaledObject, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.ScaledObject))
	})
	return ret, err
}

// ScaledObjects returns an object that can list and get ScaledObjects.
func (s *scaledObjectLister) ScaledObjects(namespace string) ScaledObjectNamespaceLister {
	return scaledObjectNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// ScaledObjectNamespaceLister helps list and get ScaledObjects.
type ScaledObjectNamespaceLister interface {
	// List lists all ScaledObjects in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.ScaledObject, err error)
	// Get retrieves the ScaledObject from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.ScaledObject, error)
	ScaledObjectNamespaceListerExpansion
}

// scaledObjectNamespaceLister implements the ScaledObjectNamespaceLister
// interface.
type scaledObjectNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all ScaledObjects in the indexer for a given namespace.
func (s scaledObjectNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.ScaledObject, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.ScaledObject))
	})
	return ret, err
}

// Get retrieves the ScaledObject from the indexer for a given namespace and name.
func (s scaledObjectNamespaceLister) Get(name string) (*v1alpha1.ScaledObject, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("scaledobject"), name)
	}
	return obj.(*v1alpha1.ScaledObject), nil
}
