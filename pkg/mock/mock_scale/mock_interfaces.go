// Code generated by MockGen. DO NOT EDIT.
// Source: k8s.io/client-go/scale (interfaces: ScalesGetter,ScaleInterface)

// Package mock_scale is a generated GoMock package.
package mock_scale

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	v1 "k8s.io/api/autoscaling/v1"
	v10 "k8s.io/apimachinery/pkg/apis/meta/v1"
	schema "k8s.io/apimachinery/pkg/runtime/schema"
	types "k8s.io/apimachinery/pkg/types"
	scale "k8s.io/client-go/scale"
)

// MockScalesGetter is a mock of ScalesGetter interface.
type MockScalesGetter struct {
	ctrl     *gomock.Controller
	recorder *MockScalesGetterMockRecorder
}

// MockScalesGetterMockRecorder is the mock recorder for MockScalesGetter.
type MockScalesGetterMockRecorder struct {
	mock *MockScalesGetter
}

// NewMockScalesGetter creates a new mock instance.
func NewMockScalesGetter(ctrl *gomock.Controller) *MockScalesGetter {
	mock := &MockScalesGetter{ctrl: ctrl}
	mock.recorder = &MockScalesGetterMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockScalesGetter) EXPECT() *MockScalesGetterMockRecorder {
	return m.recorder
}

// Scales mocks base method.
func (m *MockScalesGetter) Scales(arg0 string) scale.ScaleInterface {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Scales", arg0)
	ret0, _ := ret[0].(scale.ScaleInterface)
	return ret0
}

// Scales indicates an expected call of Scales.
func (mr *MockScalesGetterMockRecorder) Scales(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Scales", reflect.TypeOf((*MockScalesGetter)(nil).Scales), arg0)
}

// MockScaleInterface is a mock of ScaleInterface interface.
type MockScaleInterface struct {
	ctrl     *gomock.Controller
	recorder *MockScaleInterfaceMockRecorder
}

// MockScaleInterfaceMockRecorder is the mock recorder for MockScaleInterface.
type MockScaleInterfaceMockRecorder struct {
	mock *MockScaleInterface
}

// NewMockScaleInterface creates a new mock instance.
func NewMockScaleInterface(ctrl *gomock.Controller) *MockScaleInterface {
	mock := &MockScaleInterface{ctrl: ctrl}
	mock.recorder = &MockScaleInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockScaleInterface) EXPECT() *MockScaleInterfaceMockRecorder {
	return m.recorder
}

// Get mocks base method.
func (m *MockScaleInterface) Get(arg0 context.Context, arg1 schema.GroupResource, arg2 string, arg3 v10.GetOptions) (*v1.Scale, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get", arg0, arg1, arg2, arg3)
	ret0, _ := ret[0].(*v1.Scale)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Get indicates an expected call of Get.
func (mr *MockScaleInterfaceMockRecorder) Get(arg0, arg1, arg2, arg3 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockScaleInterface)(nil).Get), arg0, arg1, arg2, arg3)
}

// Patch mocks base method.
func (m *MockScaleInterface) Patch(arg0 context.Context, arg1 schema.GroupVersionResource, arg2 string, arg3 types.PatchType, arg4 []byte, arg5 v10.PatchOptions) (*v1.Scale, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Patch", arg0, arg1, arg2, arg3, arg4, arg5)
	ret0, _ := ret[0].(*v1.Scale)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Patch indicates an expected call of Patch.
func (mr *MockScaleInterfaceMockRecorder) Patch(arg0, arg1, arg2, arg3, arg4, arg5 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Patch", reflect.TypeOf((*MockScaleInterface)(nil).Patch), arg0, arg1, arg2, arg3, arg4, arg5)
}

// Update mocks base method.
func (m *MockScaleInterface) Update(arg0 context.Context, arg1 schema.GroupResource, arg2 *v1.Scale, arg3 v10.UpdateOptions) (*v1.Scale, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Update", arg0, arg1, arg2, arg3)
	ret0, _ := ret[0].(*v1.Scale)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Update indicates an expected call of Update.
func (mr *MockScaleInterfaceMockRecorder) Update(arg0, arg1, arg2, arg3 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Update", reflect.TypeOf((*MockScaleInterface)(nil).Update), arg0, arg1, arg2, arg3)
}
