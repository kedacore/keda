// Code generated by MockGen. DO NOT EDIT.
// Source: pkg/scaling/executor/scale_executor.go

// Package mock_executor is a generated GoMock package.
package mock_executor

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	v1alpha1 "github.com/kedacore/keda/v2/apis/keda/v1alpha1"
)

// MockScaleExecutor is a mock of ScaleExecutor interface.
type MockScaleExecutor struct {
	ctrl     *gomock.Controller
	recorder *MockScaleExecutorMockRecorder
}

// MockScaleExecutorMockRecorder is the mock recorder for MockScaleExecutor.
type MockScaleExecutorMockRecorder struct {
	mock *MockScaleExecutor
}

// NewMockScaleExecutor creates a new mock instance.
func NewMockScaleExecutor(ctrl *gomock.Controller) *MockScaleExecutor {
	mock := &MockScaleExecutor{ctrl: ctrl}
	mock.recorder = &MockScaleExecutorMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockScaleExecutor) EXPECT() *MockScaleExecutorMockRecorder {
	return m.recorder
}

// RequestJobScale mocks base method.
func (m *MockScaleExecutor) RequestJobScale(ctx context.Context, scaledJob *v1alpha1.ScaledJob, isActive bool, scaleTo, maxScale int64) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "RequestJobScale", ctx, scaledJob, isActive, scaleTo, maxScale)
}

// RequestJobScale indicates an expected call of RequestJobScale.
func (mr *MockScaleExecutorMockRecorder) RequestJobScale(ctx, scaledJob, isActive, scaleTo, maxScale interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RequestJobScale", reflect.TypeOf((*MockScaleExecutor)(nil).RequestJobScale), ctx, scaledJob, isActive, scaleTo, maxScale)
}

// RequestScale mocks base method.
func (m *MockScaleExecutor) RequestScale(ctx context.Context, scaledObject *v1alpha1.ScaledObject, isActive, isError bool) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "RequestScale", ctx, scaledObject, isActive, isError)
}

// RequestScale indicates an expected call of RequestScale.
func (mr *MockScaleExecutorMockRecorder) RequestScale(ctx, scaledObject, isActive, isError interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RequestScale", reflect.TypeOf((*MockScaleExecutor)(nil).RequestScale), ctx, scaledObject, isActive, isError)
}
