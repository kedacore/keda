// Code generated by protoc-gen-go. DO NOT EDIT.
// plugins:
// 	protoc-gen-go
// 	protoc
// source: temporal/api/enums/v1/event_type.proto

package enums

import (
	reflect "reflect"
	"strconv"
	sync "sync"
	unsafe "unsafe"

	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Whenever this list of events is changed do change the function shouldBufferEvent in mutableStateBuilder.go to make sure to do the correct event ordering
type EventType int32

const (
	// Place holder and should never appear in a Workflow execution history
	EVENT_TYPE_UNSPECIFIED EventType = 0
	// Workflow execution has been triggered/started
	// It contains Workflow execution inputs, as well as Workflow timeout configurations
	EVENT_TYPE_WORKFLOW_EXECUTION_STARTED EventType = 1
	// Workflow execution has successfully completed and contains Workflow execution results
	EVENT_TYPE_WORKFLOW_EXECUTION_COMPLETED EventType = 2
	// Workflow execution has unsuccessfully completed and contains the Workflow execution error
	EVENT_TYPE_WORKFLOW_EXECUTION_FAILED EventType = 3
	// Workflow execution has timed out by the Temporal Server
	// Usually due to the Workflow having not been completed within timeout settings
	EVENT_TYPE_WORKFLOW_EXECUTION_TIMED_OUT EventType = 4
	// Workflow Task has been scheduled and the SDK client should now be able to process any new history events
	EVENT_TYPE_WORKFLOW_TASK_SCHEDULED EventType = 5
	// Workflow Task has started and the SDK client has picked up the Workflow Task and is processing new history events
	EVENT_TYPE_WORKFLOW_TASK_STARTED EventType = 6
	// Workflow Task has completed
	// The SDK client picked up the Workflow Task and processed new history events
	// SDK client may or may not ask the Temporal Server to do additional work, such as:
	// EVENT_TYPE_ACTIVITY_TASK_SCHEDULED
	// EVENT_TYPE_TIMER_STARTED
	// EVENT_TYPE_UPSERT_WORKFLOW_SEARCH_ATTRIBUTES
	// EVENT_TYPE_MARKER_RECORDED
	// EVENT_TYPE_START_CHILD_WORKFLOW_EXECUTION_INITIATED
	// EVENT_TYPE_REQUEST_CANCEL_EXTERNAL_WORKFLOW_EXECUTION_INITIATED
	// EVENT_TYPE_SIGNAL_EXTERNAL_WORKFLOW_EXECUTION_INITIATED
	// EVENT_TYPE_WORKFLOW_EXECUTION_COMPLETED
	// EVENT_TYPE_WORKFLOW_EXECUTION_FAILED
	// EVENT_TYPE_WORKFLOW_EXECUTION_CANCELED
	// EVENT_TYPE_WORKFLOW_EXECUTION_CONTINUED_AS_NEW
	EVENT_TYPE_WORKFLOW_TASK_COMPLETED EventType = 7
	// Workflow Task encountered a timeout
	// Either an SDK client with a local cache was not available at the time, or it took too long for the SDK client to process the task
	EVENT_TYPE_WORKFLOW_TASK_TIMED_OUT EventType = 8
	// Workflow Task encountered a failure
	// Usually this means that the Workflow was non-deterministic
	// However, the Workflow reset functionality also uses this event
	EVENT_TYPE_WORKFLOW_TASK_FAILED EventType = 9
	// Activity Task was scheduled
	// The SDK client should pick up this activity task and execute
	// This event type contains activity inputs, as well as activity timeout configurations
	EVENT_TYPE_ACTIVITY_TASK_SCHEDULED EventType = 10
	// Activity Task has started executing
	// The SDK client has picked up the Activity Task and is processing the Activity invocation
	EVENT_TYPE_ACTIVITY_TASK_STARTED EventType = 11
	// Activity Task has finished successfully
	// The SDK client has picked up and successfully completed the Activity Task
	// This event type contains Activity execution results
	EVENT_TYPE_ACTIVITY_TASK_COMPLETED EventType = 12
	// Activity Task has finished unsuccessfully
	// The SDK picked up the Activity Task but unsuccessfully completed it
	// This event type contains Activity execution errors
	EVENT_TYPE_ACTIVITY_TASK_FAILED EventType = 13
	// Activity has timed out according to the Temporal Server
	// Activity did not complete within the timeout settings
	EVENT_TYPE_ACTIVITY_TASK_TIMED_OUT EventType = 14
	// A request to cancel the Activity has occurred
	// The SDK client will be able to confirm cancellation of an Activity during an Activity heartbeat
	EVENT_TYPE_ACTIVITY_TASK_CANCEL_REQUESTED EventType = 15
	// Activity has been cancelled
	EVENT_TYPE_ACTIVITY_TASK_CANCELED EventType = 16
	// A timer has started
	EVENT_TYPE_TIMER_STARTED EventType = 17
	// A timer has fired
	EVENT_TYPE_TIMER_FIRED EventType = 18
	// A time has been cancelled
	EVENT_TYPE_TIMER_CANCELED EventType = 19
	// A request has been made to cancel the Workflow execution
	EVENT_TYPE_WORKFLOW_EXECUTION_CANCEL_REQUESTED EventType = 20
	// SDK client has confirmed the cancellation request and the Workflow execution has been cancelled
	EVENT_TYPE_WORKFLOW_EXECUTION_CANCELED EventType = 21
	// Workflow has requested that the Temporal Server try to cancel another Workflow
	EVENT_TYPE_REQUEST_CANCEL_EXTERNAL_WORKFLOW_EXECUTION_INITIATED EventType = 22
	// Temporal Server could not cancel the targeted Workflow
	// This is usually because the target Workflow could not be found
	EVENT_TYPE_REQUEST_CANCEL_EXTERNAL_WORKFLOW_EXECUTION_FAILED EventType = 23
	// Temporal Server has successfully requested the cancellation of the target Workflow
	EVENT_TYPE_EXTERNAL_WORKFLOW_EXECUTION_CANCEL_REQUESTED EventType = 24
	// A marker has been recorded.
	// This event type is transparent to the Temporal Server
	// The Server will only store it and will not try to understand it.
	EVENT_TYPE_MARKER_RECORDED EventType = 25
	// Workflow has received a Signal event
	// The event type contains the Signal name, as well as a Signal payload
	EVENT_TYPE_WORKFLOW_EXECUTION_SIGNALED EventType = 26
	// Workflow execution has been forcefully terminated
	// This is usually because the terminate Workflow API was called
	EVENT_TYPE_WORKFLOW_EXECUTION_TERMINATED EventType = 27
	// Workflow has successfully completed and a new Workflow has been started within the same transaction
	// Contains last Workflow execution results as well as new Workflow execution inputs
	EVENT_TYPE_WORKFLOW_EXECUTION_CONTINUED_AS_NEW EventType = 28
	// Temporal Server will try to start a child Workflow
	EVENT_TYPE_START_CHILD_WORKFLOW_EXECUTION_INITIATED EventType = 29
	// Child Workflow execution cannot be started/triggered
	// Usually due to a child Workflow ID collision
	EVENT_TYPE_START_CHILD_WORKFLOW_EXECUTION_FAILED EventType = 30
	// Child Workflow execution has successfully started/triggered
	EVENT_TYPE_CHILD_WORKFLOW_EXECUTION_STARTED EventType = 31
	// Child Workflow execution has successfully completed
	EVENT_TYPE_CHILD_WORKFLOW_EXECUTION_COMPLETED EventType = 32
	// Child Workflow execution has unsuccessfully completed
	EVENT_TYPE_CHILD_WORKFLOW_EXECUTION_FAILED EventType = 33
	// Child Workflow execution has been cancelled
	EVENT_TYPE_CHILD_WORKFLOW_EXECUTION_CANCELED EventType = 34
	// Child Workflow execution has timed out by the Temporal Server
	EVENT_TYPE_CHILD_WORKFLOW_EXECUTION_TIMED_OUT EventType = 35
	// Child Workflow execution has been terminated
	EVENT_TYPE_CHILD_WORKFLOW_EXECUTION_TERMINATED EventType = 36
	// Temporal Server will try to Signal the targeted Workflow
	// Contains the Signal name, as well as a Signal payload
	EVENT_TYPE_SIGNAL_EXTERNAL_WORKFLOW_EXECUTION_INITIATED EventType = 37
	// Temporal Server cannot Signal the targeted Workflow
	// Usually because the Workflow could not be found
	EVENT_TYPE_SIGNAL_EXTERNAL_WORKFLOW_EXECUTION_FAILED EventType = 38
	// Temporal Server has successfully Signaled the targeted Workflow
	EVENT_TYPE_EXTERNAL_WORKFLOW_EXECUTION_SIGNALED EventType = 39
	// Workflow search attributes should be updated and synchronized with the visibility store
	EVENT_TYPE_UPSERT_WORKFLOW_SEARCH_ATTRIBUTES EventType = 40
	// An update was admitted. Note that not all admitted updates result in this
	// event. See UpdateAdmittedEventOrigin for situations in which this event
	// is created.
	EVENT_TYPE_WORKFLOW_EXECUTION_UPDATE_ADMITTED EventType = 47
	// An update was accepted (i.e. passed validation, perhaps because no validator was defined)
	EVENT_TYPE_WORKFLOW_EXECUTION_UPDATE_ACCEPTED EventType = 41
	// This event is never written to history.
	EVENT_TYPE_WORKFLOW_EXECUTION_UPDATE_REJECTED EventType = 42
	// An update completed
	EVENT_TYPE_WORKFLOW_EXECUTION_UPDATE_COMPLETED EventType = 43
	// Some property or properties of the workflow as a whole have changed by non-workflow code.
	// The distinction of external vs. command-based modification is important so the SDK can
	// maintain determinism when using the command-based approach.
	EVENT_TYPE_WORKFLOW_PROPERTIES_MODIFIED_EXTERNALLY EventType = 44
	// Some property or properties of an already-scheduled activity have changed by non-workflow code.
	// The distinction of external vs. command-based modification is important so the SDK can
	// maintain determinism when using the command-based approach.
	EVENT_TYPE_ACTIVITY_PROPERTIES_MODIFIED_EXTERNALLY EventType = 45
	// Workflow properties modified by user workflow code
	EVENT_TYPE_WORKFLOW_PROPERTIES_MODIFIED EventType = 46
	// A Nexus operation was scheduled using a ScheduleNexusOperation command.
	EVENT_TYPE_NEXUS_OPERATION_SCHEDULED EventType = 48
	// An asynchronous Nexus operation was started by a Nexus handler.
	EVENT_TYPE_NEXUS_OPERATION_STARTED EventType = 49
	// A Nexus operation completed successfully.
	EVENT_TYPE_NEXUS_OPERATION_COMPLETED EventType = 50
	// A Nexus operation failed.
	EVENT_TYPE_NEXUS_OPERATION_FAILED EventType = 51
	// A Nexus operation completed as canceled.
	EVENT_TYPE_NEXUS_OPERATION_CANCELED EventType = 52
	// A Nexus operation timed out.
	EVENT_TYPE_NEXUS_OPERATION_TIMED_OUT EventType = 53
	// A Nexus operation was requested to be canceled using a RequestCancelNexusOperation command.
	EVENT_TYPE_NEXUS_OPERATION_CANCEL_REQUESTED EventType = 54
	// Workflow execution options updated by user.
	EVENT_TYPE_WORKFLOW_EXECUTION_OPTIONS_UPDATED EventType = 55
	// A cancellation request for a Nexus operation was successfully delivered to the Nexus handler.
	EVENT_TYPE_NEXUS_OPERATION_CANCEL_REQUEST_COMPLETED EventType = 56
	// A cancellation request for a Nexus operation resulted in an error.
	EVENT_TYPE_NEXUS_OPERATION_CANCEL_REQUEST_FAILED EventType = 57
)

// Enum value maps for EventType.
var (
	EventType_name = map[int32]string{
		0:  "EVENT_TYPE_UNSPECIFIED",
		1:  "EVENT_TYPE_WORKFLOW_EXECUTION_STARTED",
		2:  "EVENT_TYPE_WORKFLOW_EXECUTION_COMPLETED",
		3:  "EVENT_TYPE_WORKFLOW_EXECUTION_FAILED",
		4:  "EVENT_TYPE_WORKFLOW_EXECUTION_TIMED_OUT",
		5:  "EVENT_TYPE_WORKFLOW_TASK_SCHEDULED",
		6:  "EVENT_TYPE_WORKFLOW_TASK_STARTED",
		7:  "EVENT_TYPE_WORKFLOW_TASK_COMPLETED",
		8:  "EVENT_TYPE_WORKFLOW_TASK_TIMED_OUT",
		9:  "EVENT_TYPE_WORKFLOW_TASK_FAILED",
		10: "EVENT_TYPE_ACTIVITY_TASK_SCHEDULED",
		11: "EVENT_TYPE_ACTIVITY_TASK_STARTED",
		12: "EVENT_TYPE_ACTIVITY_TASK_COMPLETED",
		13: "EVENT_TYPE_ACTIVITY_TASK_FAILED",
		14: "EVENT_TYPE_ACTIVITY_TASK_TIMED_OUT",
		15: "EVENT_TYPE_ACTIVITY_TASK_CANCEL_REQUESTED",
		16: "EVENT_TYPE_ACTIVITY_TASK_CANCELED",
		17: "EVENT_TYPE_TIMER_STARTED",
		18: "EVENT_TYPE_TIMER_FIRED",
		19: "EVENT_TYPE_TIMER_CANCELED",
		20: "EVENT_TYPE_WORKFLOW_EXECUTION_CANCEL_REQUESTED",
		21: "EVENT_TYPE_WORKFLOW_EXECUTION_CANCELED",
		22: "EVENT_TYPE_REQUEST_CANCEL_EXTERNAL_WORKFLOW_EXECUTION_INITIATED",
		23: "EVENT_TYPE_REQUEST_CANCEL_EXTERNAL_WORKFLOW_EXECUTION_FAILED",
		24: "EVENT_TYPE_EXTERNAL_WORKFLOW_EXECUTION_CANCEL_REQUESTED",
		25: "EVENT_TYPE_MARKER_RECORDED",
		26: "EVENT_TYPE_WORKFLOW_EXECUTION_SIGNALED",
		27: "EVENT_TYPE_WORKFLOW_EXECUTION_TERMINATED",
		28: "EVENT_TYPE_WORKFLOW_EXECUTION_CONTINUED_AS_NEW",
		29: "EVENT_TYPE_START_CHILD_WORKFLOW_EXECUTION_INITIATED",
		30: "EVENT_TYPE_START_CHILD_WORKFLOW_EXECUTION_FAILED",
		31: "EVENT_TYPE_CHILD_WORKFLOW_EXECUTION_STARTED",
		32: "EVENT_TYPE_CHILD_WORKFLOW_EXECUTION_COMPLETED",
		33: "EVENT_TYPE_CHILD_WORKFLOW_EXECUTION_FAILED",
		34: "EVENT_TYPE_CHILD_WORKFLOW_EXECUTION_CANCELED",
		35: "EVENT_TYPE_CHILD_WORKFLOW_EXECUTION_TIMED_OUT",
		36: "EVENT_TYPE_CHILD_WORKFLOW_EXECUTION_TERMINATED",
		37: "EVENT_TYPE_SIGNAL_EXTERNAL_WORKFLOW_EXECUTION_INITIATED",
		38: "EVENT_TYPE_SIGNAL_EXTERNAL_WORKFLOW_EXECUTION_FAILED",
		39: "EVENT_TYPE_EXTERNAL_WORKFLOW_EXECUTION_SIGNALED",
		40: "EVENT_TYPE_UPSERT_WORKFLOW_SEARCH_ATTRIBUTES",
		47: "EVENT_TYPE_WORKFLOW_EXECUTION_UPDATE_ADMITTED",
		41: "EVENT_TYPE_WORKFLOW_EXECUTION_UPDATE_ACCEPTED",
		42: "EVENT_TYPE_WORKFLOW_EXECUTION_UPDATE_REJECTED",
		43: "EVENT_TYPE_WORKFLOW_EXECUTION_UPDATE_COMPLETED",
		44: "EVENT_TYPE_WORKFLOW_PROPERTIES_MODIFIED_EXTERNALLY",
		45: "EVENT_TYPE_ACTIVITY_PROPERTIES_MODIFIED_EXTERNALLY",
		46: "EVENT_TYPE_WORKFLOW_PROPERTIES_MODIFIED",
		48: "EVENT_TYPE_NEXUS_OPERATION_SCHEDULED",
		49: "EVENT_TYPE_NEXUS_OPERATION_STARTED",
		50: "EVENT_TYPE_NEXUS_OPERATION_COMPLETED",
		51: "EVENT_TYPE_NEXUS_OPERATION_FAILED",
		52: "EVENT_TYPE_NEXUS_OPERATION_CANCELED",
		53: "EVENT_TYPE_NEXUS_OPERATION_TIMED_OUT",
		54: "EVENT_TYPE_NEXUS_OPERATION_CANCEL_REQUESTED",
		55: "EVENT_TYPE_WORKFLOW_EXECUTION_OPTIONS_UPDATED",
		56: "EVENT_TYPE_NEXUS_OPERATION_CANCEL_REQUEST_COMPLETED",
		57: "EVENT_TYPE_NEXUS_OPERATION_CANCEL_REQUEST_FAILED",
	}
	EventType_value = map[string]int32{
		"EVENT_TYPE_UNSPECIFIED":                                          0,
		"EVENT_TYPE_WORKFLOW_EXECUTION_STARTED":                           1,
		"EVENT_TYPE_WORKFLOW_EXECUTION_COMPLETED":                         2,
		"EVENT_TYPE_WORKFLOW_EXECUTION_FAILED":                            3,
		"EVENT_TYPE_WORKFLOW_EXECUTION_TIMED_OUT":                         4,
		"EVENT_TYPE_WORKFLOW_TASK_SCHEDULED":                              5,
		"EVENT_TYPE_WORKFLOW_TASK_STARTED":                                6,
		"EVENT_TYPE_WORKFLOW_TASK_COMPLETED":                              7,
		"EVENT_TYPE_WORKFLOW_TASK_TIMED_OUT":                              8,
		"EVENT_TYPE_WORKFLOW_TASK_FAILED":                                 9,
		"EVENT_TYPE_ACTIVITY_TASK_SCHEDULED":                              10,
		"EVENT_TYPE_ACTIVITY_TASK_STARTED":                                11,
		"EVENT_TYPE_ACTIVITY_TASK_COMPLETED":                              12,
		"EVENT_TYPE_ACTIVITY_TASK_FAILED":                                 13,
		"EVENT_TYPE_ACTIVITY_TASK_TIMED_OUT":                              14,
		"EVENT_TYPE_ACTIVITY_TASK_CANCEL_REQUESTED":                       15,
		"EVENT_TYPE_ACTIVITY_TASK_CANCELED":                               16,
		"EVENT_TYPE_TIMER_STARTED":                                        17,
		"EVENT_TYPE_TIMER_FIRED":                                          18,
		"EVENT_TYPE_TIMER_CANCELED":                                       19,
		"EVENT_TYPE_WORKFLOW_EXECUTION_CANCEL_REQUESTED":                  20,
		"EVENT_TYPE_WORKFLOW_EXECUTION_CANCELED":                          21,
		"EVENT_TYPE_REQUEST_CANCEL_EXTERNAL_WORKFLOW_EXECUTION_INITIATED": 22,
		"EVENT_TYPE_REQUEST_CANCEL_EXTERNAL_WORKFLOW_EXECUTION_FAILED":    23,
		"EVENT_TYPE_EXTERNAL_WORKFLOW_EXECUTION_CANCEL_REQUESTED":         24,
		"EVENT_TYPE_MARKER_RECORDED":                                      25,
		"EVENT_TYPE_WORKFLOW_EXECUTION_SIGNALED":                          26,
		"EVENT_TYPE_WORKFLOW_EXECUTION_TERMINATED":                        27,
		"EVENT_TYPE_WORKFLOW_EXECUTION_CONTINUED_AS_NEW":                  28,
		"EVENT_TYPE_START_CHILD_WORKFLOW_EXECUTION_INITIATED":             29,
		"EVENT_TYPE_START_CHILD_WORKFLOW_EXECUTION_FAILED":                30,
		"EVENT_TYPE_CHILD_WORKFLOW_EXECUTION_STARTED":                     31,
		"EVENT_TYPE_CHILD_WORKFLOW_EXECUTION_COMPLETED":                   32,
		"EVENT_TYPE_CHILD_WORKFLOW_EXECUTION_FAILED":                      33,
		"EVENT_TYPE_CHILD_WORKFLOW_EXECUTION_CANCELED":                    34,
		"EVENT_TYPE_CHILD_WORKFLOW_EXECUTION_TIMED_OUT":                   35,
		"EVENT_TYPE_CHILD_WORKFLOW_EXECUTION_TERMINATED":                  36,
		"EVENT_TYPE_SIGNAL_EXTERNAL_WORKFLOW_EXECUTION_INITIATED":         37,
		"EVENT_TYPE_SIGNAL_EXTERNAL_WORKFLOW_EXECUTION_FAILED":            38,
		"EVENT_TYPE_EXTERNAL_WORKFLOW_EXECUTION_SIGNALED":                 39,
		"EVENT_TYPE_UPSERT_WORKFLOW_SEARCH_ATTRIBUTES":                    40,
		"EVENT_TYPE_WORKFLOW_EXECUTION_UPDATE_ADMITTED":                   47,
		"EVENT_TYPE_WORKFLOW_EXECUTION_UPDATE_ACCEPTED":                   41,
		"EVENT_TYPE_WORKFLOW_EXECUTION_UPDATE_REJECTED":                   42,
		"EVENT_TYPE_WORKFLOW_EXECUTION_UPDATE_COMPLETED":                  43,
		"EVENT_TYPE_WORKFLOW_PROPERTIES_MODIFIED_EXTERNALLY":              44,
		"EVENT_TYPE_ACTIVITY_PROPERTIES_MODIFIED_EXTERNALLY":              45,
		"EVENT_TYPE_WORKFLOW_PROPERTIES_MODIFIED":                         46,
		"EVENT_TYPE_NEXUS_OPERATION_SCHEDULED":                            48,
		"EVENT_TYPE_NEXUS_OPERATION_STARTED":                              49,
		"EVENT_TYPE_NEXUS_OPERATION_COMPLETED":                            50,
		"EVENT_TYPE_NEXUS_OPERATION_FAILED":                               51,
		"EVENT_TYPE_NEXUS_OPERATION_CANCELED":                             52,
		"EVENT_TYPE_NEXUS_OPERATION_TIMED_OUT":                            53,
		"EVENT_TYPE_NEXUS_OPERATION_CANCEL_REQUESTED":                     54,
		"EVENT_TYPE_WORKFLOW_EXECUTION_OPTIONS_UPDATED":                   55,
		"EVENT_TYPE_NEXUS_OPERATION_CANCEL_REQUEST_COMPLETED":             56,
		"EVENT_TYPE_NEXUS_OPERATION_CANCEL_REQUEST_FAILED":                57,
	}
)

func (x EventType) Enum() *EventType {
	p := new(EventType)
	*p = x
	return p
}

func (x EventType) String() string {
	switch x {
	case EVENT_TYPE_UNSPECIFIED:
		return "Unspecified"
	case EVENT_TYPE_WORKFLOW_EXECUTION_STARTED:
		return "WorkflowExecutionStarted"
	case EVENT_TYPE_WORKFLOW_EXECUTION_COMPLETED:
		return "WorkflowExecutionCompleted"
	case EVENT_TYPE_WORKFLOW_EXECUTION_FAILED:
		return "WorkflowExecutionFailed"
	case EVENT_TYPE_WORKFLOW_EXECUTION_TIMED_OUT:
		return "WorkflowExecutionTimedOut"
	case EVENT_TYPE_WORKFLOW_TASK_SCHEDULED:
		return "WorkflowTaskScheduled"
	case EVENT_TYPE_WORKFLOW_TASK_STARTED:

		// Deprecated: Use EventType.Descriptor instead.
		return "WorkflowTaskStarted"
	case EVENT_TYPE_WORKFLOW_TASK_COMPLETED:
		return "WorkflowTaskCompleted"
	case EVENT_TYPE_WORKFLOW_TASK_TIMED_OUT:
		return "WorkflowTaskTimedOut"
	case EVENT_TYPE_WORKFLOW_TASK_FAILED:
		return "WorkflowTaskFailed"
	case EVENT_TYPE_ACTIVITY_TASK_SCHEDULED:
		return "ActivityTaskScheduled"
	case EVENT_TYPE_ACTIVITY_TASK_STARTED:
		return "ActivityTaskStarted"
	case EVENT_TYPE_ACTIVITY_TASK_COMPLETED:
		return "ActivityTaskCompleted"
	case EVENT_TYPE_ACTIVITY_TASK_FAILED:
		return "ActivityTaskFailed"
	case EVENT_TYPE_ACTIVITY_TASK_TIMED_OUT:
		return "ActivityTaskTimedOut"
	case EVENT_TYPE_ACTIVITY_TASK_CANCEL_REQUESTED:
		return "ActivityTaskCancelRequested"
	case EVENT_TYPE_ACTIVITY_TASK_CANCELED:
		return "ActivityTaskCanceled"
	case EVENT_TYPE_TIMER_STARTED:
		return "TimerStarted"
	case EVENT_TYPE_TIMER_FIRED:
		return "TimerFired"
	case EVENT_TYPE_TIMER_CANCELED:
		return "TimerCanceled"
	case EVENT_TYPE_WORKFLOW_EXECUTION_CANCEL_REQUESTED:
		return "WorkflowExecutionCancelRequested"
	case EVENT_TYPE_WORKFLOW_EXECUTION_CANCELED:
		return "WorkflowExecutionCanceled"
	case EVENT_TYPE_REQUEST_CANCEL_EXTERNAL_WORKFLOW_EXECUTION_INITIATED:
		return "RequestCancelExternalWorkflowExecutionInitiated"
	case EVENT_TYPE_REQUEST_CANCEL_EXTERNAL_WORKFLOW_EXECUTION_FAILED:
		return "RequestCancelExternalWorkflowExecutionFailed"
	case EVENT_TYPE_EXTERNAL_WORKFLOW_EXECUTION_CANCEL_REQUESTED:
		return "ExternalWorkflowExecutionCancelRequested"
	case EVENT_TYPE_MARKER_RECORDED:
		return "MarkerRecorded"
	case EVENT_TYPE_WORKFLOW_EXECUTION_SIGNALED:
		return "WorkflowExecutionSignaled"
	case EVENT_TYPE_WORKFLOW_EXECUTION_TERMINATED:
		return "WorkflowExecutionTerminated"
	case EVENT_TYPE_WORKFLOW_EXECUTION_CONTINUED_AS_NEW:
		return "WorkflowExecutionContinuedAsNew"
	case EVENT_TYPE_START_CHILD_WORKFLOW_EXECUTION_INITIATED:
		return "StartChildWorkflowExecutionInitiated"
	case EVENT_TYPE_START_CHILD_WORKFLOW_EXECUTION_FAILED:
		return "StartChildWorkflowExecutionFailed"
	case EVENT_TYPE_CHILD_WORKFLOW_EXECUTION_STARTED:
		return "ChildWorkflowExecutionStarted"
	case EVENT_TYPE_CHILD_WORKFLOW_EXECUTION_COMPLETED:
		return "ChildWorkflowExecutionCompleted"
	case EVENT_TYPE_CHILD_WORKFLOW_EXECUTION_FAILED:
		return "ChildWorkflowExecutionFailed"
	case EVENT_TYPE_CHILD_WORKFLOW_EXECUTION_CANCELED:
		return "ChildWorkflowExecutionCanceled"
	case EVENT_TYPE_CHILD_WORKFLOW_EXECUTION_TIMED_OUT:
		return "ChildWorkflowExecutionTimedOut"
	case EVENT_TYPE_CHILD_WORKFLOW_EXECUTION_TERMINATED:
		return "ChildWorkflowExecutionTerminated"
	case EVENT_TYPE_SIGNAL_EXTERNAL_WORKFLOW_EXECUTION_INITIATED:
		return "SignalExternalWorkflowExecutionInitiated"
	case EVENT_TYPE_SIGNAL_EXTERNAL_WORKFLOW_EXECUTION_FAILED:
		return "SignalExternalWorkflowExecutionFailed"
	case EVENT_TYPE_EXTERNAL_WORKFLOW_EXECUTION_SIGNALED:
		return "ExternalWorkflowExecutionSignaled"
	case EVENT_TYPE_UPSERT_WORKFLOW_SEARCH_ATTRIBUTES:
		return "UpsertWorkflowSearchAttributes"
	case EVENT_TYPE_WORKFLOW_EXECUTION_UPDATE_ADMITTED:
		return "WorkflowExecutionUpdateAdmitted"
	case EVENT_TYPE_WORKFLOW_EXECUTION_UPDATE_ACCEPTED:
		return "WorkflowExecutionUpdateAccepted"
	case EVENT_TYPE_WORKFLOW_EXECUTION_UPDATE_REJECTED:
		return "WorkflowExecutionUpdateRejected"
	case EVENT_TYPE_WORKFLOW_EXECUTION_UPDATE_COMPLETED:
		return "WorkflowExecutionUpdateCompleted"
	case EVENT_TYPE_WORKFLOW_PROPERTIES_MODIFIED_EXTERNALLY:
		return "WorkflowPropertiesModifiedExternally"
	case EVENT_TYPE_ACTIVITY_PROPERTIES_MODIFIED_EXTERNALLY:
		return "ActivityPropertiesModifiedExternally"
	case EVENT_TYPE_WORKFLOW_PROPERTIES_MODIFIED:
		return "WorkflowPropertiesModified"
	case EVENT_TYPE_NEXUS_OPERATION_SCHEDULED:
		return "NexusOperationScheduled"
	case EVENT_TYPE_NEXUS_OPERATION_STARTED:
		return "NexusOperationStarted"
	case EVENT_TYPE_NEXUS_OPERATION_COMPLETED:
		return "NexusOperationCompleted"
	case EVENT_TYPE_NEXUS_OPERATION_FAILED:
		return "NexusOperationFailed"
	case EVENT_TYPE_NEXUS_OPERATION_CANCELED:
		return "NexusOperationCanceled"
	case EVENT_TYPE_NEXUS_OPERATION_TIMED_OUT:
		return "NexusOperationTimedOut"
	case EVENT_TYPE_NEXUS_OPERATION_CANCEL_REQUESTED:
		return "NexusOperationCancelRequested"
	case EVENT_TYPE_WORKFLOW_EXECUTION_OPTIONS_UPDATED:
		return "WorkflowExecutionOptionsUpdated"
	case EVENT_TYPE_NEXUS_OPERATION_CANCEL_REQUEST_COMPLETED:
		return "NexusOperationCancelRequestCompleted"
	case EVENT_TYPE_NEXUS_OPERATION_CANCEL_REQUEST_FAILED:
		return "NexusOperationCancelRequestFailed"
	default:
		return strconv.Itoa(int(x))
	}

}

func (EventType) Descriptor() protoreflect.EnumDescriptor {
	return file_temporal_api_enums_v1_event_type_proto_enumTypes[0].Descriptor()
}

func (EventType) Type() protoreflect.EnumType {
	return &file_temporal_api_enums_v1_event_type_proto_enumTypes[0]
}

func (x EventType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

func (EventType) EnumDescriptor() ([]byte, []int) {
	return file_temporal_api_enums_v1_event_type_proto_rawDescGZIP(), []int{0}
}

var File_temporal_api_enums_v1_event_type_proto protoreflect.FileDescriptor

const file_temporal_api_enums_v1_event_type_proto_rawDesc = "" +
	"\n" +
	"&temporal/api/enums/v1/event_type.proto\x12\x15temporal.api.enums.v1*\x8a\x15\n" +
	"\tEventType\x12\x1a\n" +
	"\x16EVENT_TYPE_UNSPECIFIED\x10\x00\x12)\n" +
	"%EVENT_TYPE_WORKFLOW_EXECUTION_STARTED\x10\x01\x12+\n" +
	"'EVENT_TYPE_WORKFLOW_EXECUTION_COMPLETED\x10\x02\x12(\n" +
	"$EVENT_TYPE_WORKFLOW_EXECUTION_FAILED\x10\x03\x12+\n" +
	"'EVENT_TYPE_WORKFLOW_EXECUTION_TIMED_OUT\x10\x04\x12&\n" +
	"\"EVENT_TYPE_WORKFLOW_TASK_SCHEDULED\x10\x05\x12$\n" +
	" EVENT_TYPE_WORKFLOW_TASK_STARTED\x10\x06\x12&\n" +
	"\"EVENT_TYPE_WORKFLOW_TASK_COMPLETED\x10\a\x12&\n" +
	"\"EVENT_TYPE_WORKFLOW_TASK_TIMED_OUT\x10\b\x12#\n" +
	"\x1fEVENT_TYPE_WORKFLOW_TASK_FAILED\x10\t\x12&\n" +
	"\"EVENT_TYPE_ACTIVITY_TASK_SCHEDULED\x10\n" +
	"\x12$\n" +
	" EVENT_TYPE_ACTIVITY_TASK_STARTED\x10\v\x12&\n" +
	"\"EVENT_TYPE_ACTIVITY_TASK_COMPLETED\x10\f\x12#\n" +
	"\x1fEVENT_TYPE_ACTIVITY_TASK_FAILED\x10\r\x12&\n" +
	"\"EVENT_TYPE_ACTIVITY_TASK_TIMED_OUT\x10\x0e\x12-\n" +
	")EVENT_TYPE_ACTIVITY_TASK_CANCEL_REQUESTED\x10\x0f\x12%\n" +
	"!EVENT_TYPE_ACTIVITY_TASK_CANCELED\x10\x10\x12\x1c\n" +
	"\x18EVENT_TYPE_TIMER_STARTED\x10\x11\x12\x1a\n" +
	"\x16EVENT_TYPE_TIMER_FIRED\x10\x12\x12\x1d\n" +
	"\x19EVENT_TYPE_TIMER_CANCELED\x10\x13\x122\n" +
	".EVENT_TYPE_WORKFLOW_EXECUTION_CANCEL_REQUESTED\x10\x14\x12*\n" +
	"&EVENT_TYPE_WORKFLOW_EXECUTION_CANCELED\x10\x15\x12C\n" +
	"?EVENT_TYPE_REQUEST_CANCEL_EXTERNAL_WORKFLOW_EXECUTION_INITIATED\x10\x16\x12@\n" +
	"<EVENT_TYPE_REQUEST_CANCEL_EXTERNAL_WORKFLOW_EXECUTION_FAILED\x10\x17\x12;\n" +
	"7EVENT_TYPE_EXTERNAL_WORKFLOW_EXECUTION_CANCEL_REQUESTED\x10\x18\x12\x1e\n" +
	"\x1aEVENT_TYPE_MARKER_RECORDED\x10\x19\x12*\n" +
	"&EVENT_TYPE_WORKFLOW_EXECUTION_SIGNALED\x10\x1a\x12,\n" +
	"(EVENT_TYPE_WORKFLOW_EXECUTION_TERMINATED\x10\x1b\x122\n" +
	".EVENT_TYPE_WORKFLOW_EXECUTION_CONTINUED_AS_NEW\x10\x1c\x127\n" +
	"3EVENT_TYPE_START_CHILD_WORKFLOW_EXECUTION_INITIATED\x10\x1d\x124\n" +
	"0EVENT_TYPE_START_CHILD_WORKFLOW_EXECUTION_FAILED\x10\x1e\x12/\n" +
	"+EVENT_TYPE_CHILD_WORKFLOW_EXECUTION_STARTED\x10\x1f\x121\n" +
	"-EVENT_TYPE_CHILD_WORKFLOW_EXECUTION_COMPLETED\x10 \x12.\n" +
	"*EVENT_TYPE_CHILD_WORKFLOW_EXECUTION_FAILED\x10!\x120\n" +
	",EVENT_TYPE_CHILD_WORKFLOW_EXECUTION_CANCELED\x10\"\x121\n" +
	"-EVENT_TYPE_CHILD_WORKFLOW_EXECUTION_TIMED_OUT\x10#\x122\n" +
	".EVENT_TYPE_CHILD_WORKFLOW_EXECUTION_TERMINATED\x10$\x12;\n" +
	"7EVENT_TYPE_SIGNAL_EXTERNAL_WORKFLOW_EXECUTION_INITIATED\x10%\x128\n" +
	"4EVENT_TYPE_SIGNAL_EXTERNAL_WORKFLOW_EXECUTION_FAILED\x10&\x123\n" +
	"/EVENT_TYPE_EXTERNAL_WORKFLOW_EXECUTION_SIGNALED\x10'\x120\n" +
	",EVENT_TYPE_UPSERT_WORKFLOW_SEARCH_ATTRIBUTES\x10(\x121\n" +
	"-EVENT_TYPE_WORKFLOW_EXECUTION_UPDATE_ADMITTED\x10/\x121\n" +
	"-EVENT_TYPE_WORKFLOW_EXECUTION_UPDATE_ACCEPTED\x10)\x121\n" +
	"-EVENT_TYPE_WORKFLOW_EXECUTION_UPDATE_REJECTED\x10*\x122\n" +
	".EVENT_TYPE_WORKFLOW_EXECUTION_UPDATE_COMPLETED\x10+\x126\n" +
	"2EVENT_TYPE_WORKFLOW_PROPERTIES_MODIFIED_EXTERNALLY\x10,\x126\n" +
	"2EVENT_TYPE_ACTIVITY_PROPERTIES_MODIFIED_EXTERNALLY\x10-\x12+\n" +
	"'EVENT_TYPE_WORKFLOW_PROPERTIES_MODIFIED\x10.\x12(\n" +
	"$EVENT_TYPE_NEXUS_OPERATION_SCHEDULED\x100\x12&\n" +
	"\"EVENT_TYPE_NEXUS_OPERATION_STARTED\x101\x12(\n" +
	"$EVENT_TYPE_NEXUS_OPERATION_COMPLETED\x102\x12%\n" +
	"!EVENT_TYPE_NEXUS_OPERATION_FAILED\x103\x12'\n" +
	"#EVENT_TYPE_NEXUS_OPERATION_CANCELED\x104\x12(\n" +
	"$EVENT_TYPE_NEXUS_OPERATION_TIMED_OUT\x105\x12/\n" +
	"+EVENT_TYPE_NEXUS_OPERATION_CANCEL_REQUESTED\x106\x121\n" +
	"-EVENT_TYPE_WORKFLOW_EXECUTION_OPTIONS_UPDATED\x107\x127\n" +
	"3EVENT_TYPE_NEXUS_OPERATION_CANCEL_REQUEST_COMPLETED\x108\x124\n" +
	"0EVENT_TYPE_NEXUS_OPERATION_CANCEL_REQUEST_FAILED\x109B\x86\x01\n" +
	"\x18io.temporal.api.enums.v1B\x0eEventTypeProtoP\x01Z!go.temporal.io/api/enums/v1;enums\xaa\x02\x17Temporalio.Api.Enums.V1\xea\x02\x1aTemporalio::Api::Enums::V1b\x06proto3"

var (
	file_temporal_api_enums_v1_event_type_proto_rawDescOnce sync.Once
	file_temporal_api_enums_v1_event_type_proto_rawDescData []byte
)

func file_temporal_api_enums_v1_event_type_proto_rawDescGZIP() []byte {
	file_temporal_api_enums_v1_event_type_proto_rawDescOnce.Do(func() {
		file_temporal_api_enums_v1_event_type_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_temporal_api_enums_v1_event_type_proto_rawDesc), len(file_temporal_api_enums_v1_event_type_proto_rawDesc)))
	})
	return file_temporal_api_enums_v1_event_type_proto_rawDescData
}

var file_temporal_api_enums_v1_event_type_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_temporal_api_enums_v1_event_type_proto_goTypes = []any{
	(EventType)(0), // 0: temporal.api.enums.v1.EventType
}
var file_temporal_api_enums_v1_event_type_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_temporal_api_enums_v1_event_type_proto_init() }
func file_temporal_api_enums_v1_event_type_proto_init() {
	if File_temporal_api_enums_v1_event_type_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_temporal_api_enums_v1_event_type_proto_rawDesc), len(file_temporal_api_enums_v1_event_type_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   0,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_temporal_api_enums_v1_event_type_proto_goTypes,
		DependencyIndexes: file_temporal_api_enums_v1_event_type_proto_depIdxs,
		EnumInfos:         file_temporal_api_enums_v1_event_type_proto_enumTypes,
	}.Build()
	File_temporal_api_enums_v1_event_type_proto = out.File
	file_temporal_api_enums_v1_event_type_proto_goTypes = nil
	file_temporal_api_enums_v1_event_type_proto_depIdxs = nil
}
