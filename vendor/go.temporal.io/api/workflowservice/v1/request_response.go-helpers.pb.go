// The MIT License
//
// Copyright (c) 2022 Temporal Technologies Inc.  All rights reserved.
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
// THE SOFTWARE.

// Code generated by protoc-gen-go-helpers. DO NOT EDIT.
package workflowservice

import (
	"google.golang.org/protobuf/proto"
)

// Marshal an object of type RegisterNamespaceRequest to the protobuf v3 wire format
func (val *RegisterNamespaceRequest) Marshal() ([]byte, error) {
	return proto.Marshal(val)
}

// Unmarshal an object of type RegisterNamespaceRequest from the protobuf v3 wire format
func (val *RegisterNamespaceRequest) Unmarshal(buf []byte) error {
	return proto.Unmarshal(buf, val)
}

// Size returns the size of the object, in bytes, once serialized
func (val *RegisterNamespaceRequest) Size() int {
	return proto.Size(val)
}

// Equal returns whether two RegisterNamespaceRequest values are equivalent by recursively
// comparing the message's fields.
// For more information see the documentation for
// https://pkg.go.dev/google.golang.org/protobuf/proto#Equal
func (this *RegisterNamespaceRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	var that1 *RegisterNamespaceRequest
	switch t := that.(type) {
	case *RegisterNamespaceRequest:
		that1 = t
	case RegisterNamespaceRequest:
		that1 = &t
	default:
		return false
	}

	return proto.Equal(this, that1)
}

// Marshal an object of type RegisterNamespaceResponse to the protobuf v3 wire format
func (val *RegisterNamespaceResponse) Marshal() ([]byte, error) {
	return proto.Marshal(val)
}

// Unmarshal an object of type RegisterNamespaceResponse from the protobuf v3 wire format
func (val *RegisterNamespaceResponse) Unmarshal(buf []byte) error {
	return proto.Unmarshal(buf, val)
}

// Size returns the size of the object, in bytes, once serialized
func (val *RegisterNamespaceResponse) Size() int {
	return proto.Size(val)
}

// Equal returns whether two RegisterNamespaceResponse values are equivalent by recursively
// comparing the message's fields.
// For more information see the documentation for
// https://pkg.go.dev/google.golang.org/protobuf/proto#Equal
func (this *RegisterNamespaceResponse) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	var that1 *RegisterNamespaceResponse
	switch t := that.(type) {
	case *RegisterNamespaceResponse:
		that1 = t
	case RegisterNamespaceResponse:
		that1 = &t
	default:
		return false
	}

	return proto.Equal(this, that1)
}

// Marshal an object of type ListNamespacesRequest to the protobuf v3 wire format
func (val *ListNamespacesRequest) Marshal() ([]byte, error) {
	return proto.Marshal(val)
}

// Unmarshal an object of type ListNamespacesRequest from the protobuf v3 wire format
func (val *ListNamespacesRequest) Unmarshal(buf []byte) error {
	return proto.Unmarshal(buf, val)
}

// Size returns the size of the object, in bytes, once serialized
func (val *ListNamespacesRequest) Size() int {
	return proto.Size(val)
}

// Equal returns whether two ListNamespacesRequest values are equivalent by recursively
// comparing the message's fields.
// For more information see the documentation for
// https://pkg.go.dev/google.golang.org/protobuf/proto#Equal
func (this *ListNamespacesRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	var that1 *ListNamespacesRequest
	switch t := that.(type) {
	case *ListNamespacesRequest:
		that1 = t
	case ListNamespacesRequest:
		that1 = &t
	default:
		return false
	}

	return proto.Equal(this, that1)
}

// Marshal an object of type ListNamespacesResponse to the protobuf v3 wire format
func (val *ListNamespacesResponse) Marshal() ([]byte, error) {
	return proto.Marshal(val)
}

// Unmarshal an object of type ListNamespacesResponse from the protobuf v3 wire format
func (val *ListNamespacesResponse) Unmarshal(buf []byte) error {
	return proto.Unmarshal(buf, val)
}

// Size returns the size of the object, in bytes, once serialized
func (val *ListNamespacesResponse) Size() int {
	return proto.Size(val)
}

// Equal returns whether two ListNamespacesResponse values are equivalent by recursively
// comparing the message's fields.
// For more information see the documentation for
// https://pkg.go.dev/google.golang.org/protobuf/proto#Equal
func (this *ListNamespacesResponse) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	var that1 *ListNamespacesResponse
	switch t := that.(type) {
	case *ListNamespacesResponse:
		that1 = t
	case ListNamespacesResponse:
		that1 = &t
	default:
		return false
	}

	return proto.Equal(this, that1)
}

// Marshal an object of type DescribeNamespaceRequest to the protobuf v3 wire format
func (val *DescribeNamespaceRequest) Marshal() ([]byte, error) {
	return proto.Marshal(val)
}

// Unmarshal an object of type DescribeNamespaceRequest from the protobuf v3 wire format
func (val *DescribeNamespaceRequest) Unmarshal(buf []byte) error {
	return proto.Unmarshal(buf, val)
}

// Size returns the size of the object, in bytes, once serialized
func (val *DescribeNamespaceRequest) Size() int {
	return proto.Size(val)
}

// Equal returns whether two DescribeNamespaceRequest values are equivalent by recursively
// comparing the message's fields.
// For more information see the documentation for
// https://pkg.go.dev/google.golang.org/protobuf/proto#Equal
func (this *DescribeNamespaceRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	var that1 *DescribeNamespaceRequest
	switch t := that.(type) {
	case *DescribeNamespaceRequest:
		that1 = t
	case DescribeNamespaceRequest:
		that1 = &t
	default:
		return false
	}

	return proto.Equal(this, that1)
}

// Marshal an object of type DescribeNamespaceResponse to the protobuf v3 wire format
func (val *DescribeNamespaceResponse) Marshal() ([]byte, error) {
	return proto.Marshal(val)
}

// Unmarshal an object of type DescribeNamespaceResponse from the protobuf v3 wire format
func (val *DescribeNamespaceResponse) Unmarshal(buf []byte) error {
	return proto.Unmarshal(buf, val)
}

// Size returns the size of the object, in bytes, once serialized
func (val *DescribeNamespaceResponse) Size() int {
	return proto.Size(val)
}

// Equal returns whether two DescribeNamespaceResponse values are equivalent by recursively
// comparing the message's fields.
// For more information see the documentation for
// https://pkg.go.dev/google.golang.org/protobuf/proto#Equal
func (this *DescribeNamespaceResponse) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	var that1 *DescribeNamespaceResponse
	switch t := that.(type) {
	case *DescribeNamespaceResponse:
		that1 = t
	case DescribeNamespaceResponse:
		that1 = &t
	default:
		return false
	}

	return proto.Equal(this, that1)
}

// Marshal an object of type UpdateNamespaceRequest to the protobuf v3 wire format
func (val *UpdateNamespaceRequest) Marshal() ([]byte, error) {
	return proto.Marshal(val)
}

// Unmarshal an object of type UpdateNamespaceRequest from the protobuf v3 wire format
func (val *UpdateNamespaceRequest) Unmarshal(buf []byte) error {
	return proto.Unmarshal(buf, val)
}

// Size returns the size of the object, in bytes, once serialized
func (val *UpdateNamespaceRequest) Size() int {
	return proto.Size(val)
}

// Equal returns whether two UpdateNamespaceRequest values are equivalent by recursively
// comparing the message's fields.
// For more information see the documentation for
// https://pkg.go.dev/google.golang.org/protobuf/proto#Equal
func (this *UpdateNamespaceRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	var that1 *UpdateNamespaceRequest
	switch t := that.(type) {
	case *UpdateNamespaceRequest:
		that1 = t
	case UpdateNamespaceRequest:
		that1 = &t
	default:
		return false
	}

	return proto.Equal(this, that1)
}

// Marshal an object of type UpdateNamespaceResponse to the protobuf v3 wire format
func (val *UpdateNamespaceResponse) Marshal() ([]byte, error) {
	return proto.Marshal(val)
}

// Unmarshal an object of type UpdateNamespaceResponse from the protobuf v3 wire format
func (val *UpdateNamespaceResponse) Unmarshal(buf []byte) error {
	return proto.Unmarshal(buf, val)
}

// Size returns the size of the object, in bytes, once serialized
func (val *UpdateNamespaceResponse) Size() int {
	return proto.Size(val)
}

// Equal returns whether two UpdateNamespaceResponse values are equivalent by recursively
// comparing the message's fields.
// For more information see the documentation for
// https://pkg.go.dev/google.golang.org/protobuf/proto#Equal
func (this *UpdateNamespaceResponse) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	var that1 *UpdateNamespaceResponse
	switch t := that.(type) {
	case *UpdateNamespaceResponse:
		that1 = t
	case UpdateNamespaceResponse:
		that1 = &t
	default:
		return false
	}

	return proto.Equal(this, that1)
}

// Marshal an object of type DeprecateNamespaceRequest to the protobuf v3 wire format
func (val *DeprecateNamespaceRequest) Marshal() ([]byte, error) {
	return proto.Marshal(val)
}

// Unmarshal an object of type DeprecateNamespaceRequest from the protobuf v3 wire format
func (val *DeprecateNamespaceRequest) Unmarshal(buf []byte) error {
	return proto.Unmarshal(buf, val)
}

// Size returns the size of the object, in bytes, once serialized
func (val *DeprecateNamespaceRequest) Size() int {
	return proto.Size(val)
}

// Equal returns whether two DeprecateNamespaceRequest values are equivalent by recursively
// comparing the message's fields.
// For more information see the documentation for
// https://pkg.go.dev/google.golang.org/protobuf/proto#Equal
func (this *DeprecateNamespaceRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	var that1 *DeprecateNamespaceRequest
	switch t := that.(type) {
	case *DeprecateNamespaceRequest:
		that1 = t
	case DeprecateNamespaceRequest:
		that1 = &t
	default:
		return false
	}

	return proto.Equal(this, that1)
}

// Marshal an object of type DeprecateNamespaceResponse to the protobuf v3 wire format
func (val *DeprecateNamespaceResponse) Marshal() ([]byte, error) {
	return proto.Marshal(val)
}

// Unmarshal an object of type DeprecateNamespaceResponse from the protobuf v3 wire format
func (val *DeprecateNamespaceResponse) Unmarshal(buf []byte) error {
	return proto.Unmarshal(buf, val)
}

// Size returns the size of the object, in bytes, once serialized
func (val *DeprecateNamespaceResponse) Size() int {
	return proto.Size(val)
}

// Equal returns whether two DeprecateNamespaceResponse values are equivalent by recursively
// comparing the message's fields.
// For more information see the documentation for
// https://pkg.go.dev/google.golang.org/protobuf/proto#Equal
func (this *DeprecateNamespaceResponse) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	var that1 *DeprecateNamespaceResponse
	switch t := that.(type) {
	case *DeprecateNamespaceResponse:
		that1 = t
	case DeprecateNamespaceResponse:
		that1 = &t
	default:
		return false
	}

	return proto.Equal(this, that1)
}

// Marshal an object of type StartWorkflowExecutionRequest to the protobuf v3 wire format
func (val *StartWorkflowExecutionRequest) Marshal() ([]byte, error) {
	return proto.Marshal(val)
}

// Unmarshal an object of type StartWorkflowExecutionRequest from the protobuf v3 wire format
func (val *StartWorkflowExecutionRequest) Unmarshal(buf []byte) error {
	return proto.Unmarshal(buf, val)
}

// Size returns the size of the object, in bytes, once serialized
func (val *StartWorkflowExecutionRequest) Size() int {
	return proto.Size(val)
}

// Equal returns whether two StartWorkflowExecutionRequest values are equivalent by recursively
// comparing the message's fields.
// For more information see the documentation for
// https://pkg.go.dev/google.golang.org/protobuf/proto#Equal
func (this *StartWorkflowExecutionRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	var that1 *StartWorkflowExecutionRequest
	switch t := that.(type) {
	case *StartWorkflowExecutionRequest:
		that1 = t
	case StartWorkflowExecutionRequest:
		that1 = &t
	default:
		return false
	}

	return proto.Equal(this, that1)
}

// Marshal an object of type StartWorkflowExecutionResponse to the protobuf v3 wire format
func (val *StartWorkflowExecutionResponse) Marshal() ([]byte, error) {
	return proto.Marshal(val)
}

// Unmarshal an object of type StartWorkflowExecutionResponse from the protobuf v3 wire format
func (val *StartWorkflowExecutionResponse) Unmarshal(buf []byte) error {
	return proto.Unmarshal(buf, val)
}

// Size returns the size of the object, in bytes, once serialized
func (val *StartWorkflowExecutionResponse) Size() int {
	return proto.Size(val)
}

// Equal returns whether two StartWorkflowExecutionResponse values are equivalent by recursively
// comparing the message's fields.
// For more information see the documentation for
// https://pkg.go.dev/google.golang.org/protobuf/proto#Equal
func (this *StartWorkflowExecutionResponse) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	var that1 *StartWorkflowExecutionResponse
	switch t := that.(type) {
	case *StartWorkflowExecutionResponse:
		that1 = t
	case StartWorkflowExecutionResponse:
		that1 = &t
	default:
		return false
	}

	return proto.Equal(this, that1)
}

// Marshal an object of type GetWorkflowExecutionHistoryRequest to the protobuf v3 wire format
func (val *GetWorkflowExecutionHistoryRequest) Marshal() ([]byte, error) {
	return proto.Marshal(val)
}

// Unmarshal an object of type GetWorkflowExecutionHistoryRequest from the protobuf v3 wire format
func (val *GetWorkflowExecutionHistoryRequest) Unmarshal(buf []byte) error {
	return proto.Unmarshal(buf, val)
}

// Size returns the size of the object, in bytes, once serialized
func (val *GetWorkflowExecutionHistoryRequest) Size() int {
	return proto.Size(val)
}

// Equal returns whether two GetWorkflowExecutionHistoryRequest values are equivalent by recursively
// comparing the message's fields.
// For more information see the documentation for
// https://pkg.go.dev/google.golang.org/protobuf/proto#Equal
func (this *GetWorkflowExecutionHistoryRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	var that1 *GetWorkflowExecutionHistoryRequest
	switch t := that.(type) {
	case *GetWorkflowExecutionHistoryRequest:
		that1 = t
	case GetWorkflowExecutionHistoryRequest:
		that1 = &t
	default:
		return false
	}

	return proto.Equal(this, that1)
}

// Marshal an object of type GetWorkflowExecutionHistoryResponse to the protobuf v3 wire format
func (val *GetWorkflowExecutionHistoryResponse) Marshal() ([]byte, error) {
	return proto.Marshal(val)
}

// Unmarshal an object of type GetWorkflowExecutionHistoryResponse from the protobuf v3 wire format
func (val *GetWorkflowExecutionHistoryResponse) Unmarshal(buf []byte) error {
	return proto.Unmarshal(buf, val)
}

// Size returns the size of the object, in bytes, once serialized
func (val *GetWorkflowExecutionHistoryResponse) Size() int {
	return proto.Size(val)
}

// Equal returns whether two GetWorkflowExecutionHistoryResponse values are equivalent by recursively
// comparing the message's fields.
// For more information see the documentation for
// https://pkg.go.dev/google.golang.org/protobuf/proto#Equal
func (this *GetWorkflowExecutionHistoryResponse) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	var that1 *GetWorkflowExecutionHistoryResponse
	switch t := that.(type) {
	case *GetWorkflowExecutionHistoryResponse:
		that1 = t
	case GetWorkflowExecutionHistoryResponse:
		that1 = &t
	default:
		return false
	}

	return proto.Equal(this, that1)
}

// Marshal an object of type GetWorkflowExecutionHistoryReverseRequest to the protobuf v3 wire format
func (val *GetWorkflowExecutionHistoryReverseRequest) Marshal() ([]byte, error) {
	return proto.Marshal(val)
}

// Unmarshal an object of type GetWorkflowExecutionHistoryReverseRequest from the protobuf v3 wire format
func (val *GetWorkflowExecutionHistoryReverseRequest) Unmarshal(buf []byte) error {
	return proto.Unmarshal(buf, val)
}

// Size returns the size of the object, in bytes, once serialized
func (val *GetWorkflowExecutionHistoryReverseRequest) Size() int {
	return proto.Size(val)
}

// Equal returns whether two GetWorkflowExecutionHistoryReverseRequest values are equivalent by recursively
// comparing the message's fields.
// For more information see the documentation for
// https://pkg.go.dev/google.golang.org/protobuf/proto#Equal
func (this *GetWorkflowExecutionHistoryReverseRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	var that1 *GetWorkflowExecutionHistoryReverseRequest
	switch t := that.(type) {
	case *GetWorkflowExecutionHistoryReverseRequest:
		that1 = t
	case GetWorkflowExecutionHistoryReverseRequest:
		that1 = &t
	default:
		return false
	}

	return proto.Equal(this, that1)
}

// Marshal an object of type GetWorkflowExecutionHistoryReverseResponse to the protobuf v3 wire format
func (val *GetWorkflowExecutionHistoryReverseResponse) Marshal() ([]byte, error) {
	return proto.Marshal(val)
}

// Unmarshal an object of type GetWorkflowExecutionHistoryReverseResponse from the protobuf v3 wire format
func (val *GetWorkflowExecutionHistoryReverseResponse) Unmarshal(buf []byte) error {
	return proto.Unmarshal(buf, val)
}

// Size returns the size of the object, in bytes, once serialized
func (val *GetWorkflowExecutionHistoryReverseResponse) Size() int {
	return proto.Size(val)
}

// Equal returns whether two GetWorkflowExecutionHistoryReverseResponse values are equivalent by recursively
// comparing the message's fields.
// For more information see the documentation for
// https://pkg.go.dev/google.golang.org/protobuf/proto#Equal
func (this *GetWorkflowExecutionHistoryReverseResponse) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	var that1 *GetWorkflowExecutionHistoryReverseResponse
	switch t := that.(type) {
	case *GetWorkflowExecutionHistoryReverseResponse:
		that1 = t
	case GetWorkflowExecutionHistoryReverseResponse:
		that1 = &t
	default:
		return false
	}

	return proto.Equal(this, that1)
}

// Marshal an object of type PollWorkflowTaskQueueRequest to the protobuf v3 wire format
func (val *PollWorkflowTaskQueueRequest) Marshal() ([]byte, error) {
	return proto.Marshal(val)
}

// Unmarshal an object of type PollWorkflowTaskQueueRequest from the protobuf v3 wire format
func (val *PollWorkflowTaskQueueRequest) Unmarshal(buf []byte) error {
	return proto.Unmarshal(buf, val)
}

// Size returns the size of the object, in bytes, once serialized
func (val *PollWorkflowTaskQueueRequest) Size() int {
	return proto.Size(val)
}

// Equal returns whether two PollWorkflowTaskQueueRequest values are equivalent by recursively
// comparing the message's fields.
// For more information see the documentation for
// https://pkg.go.dev/google.golang.org/protobuf/proto#Equal
func (this *PollWorkflowTaskQueueRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	var that1 *PollWorkflowTaskQueueRequest
	switch t := that.(type) {
	case *PollWorkflowTaskQueueRequest:
		that1 = t
	case PollWorkflowTaskQueueRequest:
		that1 = &t
	default:
		return false
	}

	return proto.Equal(this, that1)
}

// Marshal an object of type PollWorkflowTaskQueueResponse to the protobuf v3 wire format
func (val *PollWorkflowTaskQueueResponse) Marshal() ([]byte, error) {
	return proto.Marshal(val)
}

// Unmarshal an object of type PollWorkflowTaskQueueResponse from the protobuf v3 wire format
func (val *PollWorkflowTaskQueueResponse) Unmarshal(buf []byte) error {
	return proto.Unmarshal(buf, val)
}

// Size returns the size of the object, in bytes, once serialized
func (val *PollWorkflowTaskQueueResponse) Size() int {
	return proto.Size(val)
}

// Equal returns whether two PollWorkflowTaskQueueResponse values are equivalent by recursively
// comparing the message's fields.
// For more information see the documentation for
// https://pkg.go.dev/google.golang.org/protobuf/proto#Equal
func (this *PollWorkflowTaskQueueResponse) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	var that1 *PollWorkflowTaskQueueResponse
	switch t := that.(type) {
	case *PollWorkflowTaskQueueResponse:
		that1 = t
	case PollWorkflowTaskQueueResponse:
		that1 = &t
	default:
		return false
	}

	return proto.Equal(this, that1)
}

// Marshal an object of type RespondWorkflowTaskCompletedRequest to the protobuf v3 wire format
func (val *RespondWorkflowTaskCompletedRequest) Marshal() ([]byte, error) {
	return proto.Marshal(val)
}

// Unmarshal an object of type RespondWorkflowTaskCompletedRequest from the protobuf v3 wire format
func (val *RespondWorkflowTaskCompletedRequest) Unmarshal(buf []byte) error {
	return proto.Unmarshal(buf, val)
}

// Size returns the size of the object, in bytes, once serialized
func (val *RespondWorkflowTaskCompletedRequest) Size() int {
	return proto.Size(val)
}

// Equal returns whether two RespondWorkflowTaskCompletedRequest values are equivalent by recursively
// comparing the message's fields.
// For more information see the documentation for
// https://pkg.go.dev/google.golang.org/protobuf/proto#Equal
func (this *RespondWorkflowTaskCompletedRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	var that1 *RespondWorkflowTaskCompletedRequest
	switch t := that.(type) {
	case *RespondWorkflowTaskCompletedRequest:
		that1 = t
	case RespondWorkflowTaskCompletedRequest:
		that1 = &t
	default:
		return false
	}

	return proto.Equal(this, that1)
}

// Marshal an object of type RespondWorkflowTaskCompletedResponse to the protobuf v3 wire format
func (val *RespondWorkflowTaskCompletedResponse) Marshal() ([]byte, error) {
	return proto.Marshal(val)
}

// Unmarshal an object of type RespondWorkflowTaskCompletedResponse from the protobuf v3 wire format
func (val *RespondWorkflowTaskCompletedResponse) Unmarshal(buf []byte) error {
	return proto.Unmarshal(buf, val)
}

// Size returns the size of the object, in bytes, once serialized
func (val *RespondWorkflowTaskCompletedResponse) Size() int {
	return proto.Size(val)
}

// Equal returns whether two RespondWorkflowTaskCompletedResponse values are equivalent by recursively
// comparing the message's fields.
// For more information see the documentation for
// https://pkg.go.dev/google.golang.org/protobuf/proto#Equal
func (this *RespondWorkflowTaskCompletedResponse) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	var that1 *RespondWorkflowTaskCompletedResponse
	switch t := that.(type) {
	case *RespondWorkflowTaskCompletedResponse:
		that1 = t
	case RespondWorkflowTaskCompletedResponse:
		that1 = &t
	default:
		return false
	}

	return proto.Equal(this, that1)
}

// Marshal an object of type RespondWorkflowTaskFailedRequest to the protobuf v3 wire format
func (val *RespondWorkflowTaskFailedRequest) Marshal() ([]byte, error) {
	return proto.Marshal(val)
}

// Unmarshal an object of type RespondWorkflowTaskFailedRequest from the protobuf v3 wire format
func (val *RespondWorkflowTaskFailedRequest) Unmarshal(buf []byte) error {
	return proto.Unmarshal(buf, val)
}

// Size returns the size of the object, in bytes, once serialized
func (val *RespondWorkflowTaskFailedRequest) Size() int {
	return proto.Size(val)
}

// Equal returns whether two RespondWorkflowTaskFailedRequest values are equivalent by recursively
// comparing the message's fields.
// For more information see the documentation for
// https://pkg.go.dev/google.golang.org/protobuf/proto#Equal
func (this *RespondWorkflowTaskFailedRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	var that1 *RespondWorkflowTaskFailedRequest
	switch t := that.(type) {
	case *RespondWorkflowTaskFailedRequest:
		that1 = t
	case RespondWorkflowTaskFailedRequest:
		that1 = &t
	default:
		return false
	}

	return proto.Equal(this, that1)
}

// Marshal an object of type RespondWorkflowTaskFailedResponse to the protobuf v3 wire format
func (val *RespondWorkflowTaskFailedResponse) Marshal() ([]byte, error) {
	return proto.Marshal(val)
}

// Unmarshal an object of type RespondWorkflowTaskFailedResponse from the protobuf v3 wire format
func (val *RespondWorkflowTaskFailedResponse) Unmarshal(buf []byte) error {
	return proto.Unmarshal(buf, val)
}

// Size returns the size of the object, in bytes, once serialized
func (val *RespondWorkflowTaskFailedResponse) Size() int {
	return proto.Size(val)
}

// Equal returns whether two RespondWorkflowTaskFailedResponse values are equivalent by recursively
// comparing the message's fields.
// For more information see the documentation for
// https://pkg.go.dev/google.golang.org/protobuf/proto#Equal
func (this *RespondWorkflowTaskFailedResponse) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	var that1 *RespondWorkflowTaskFailedResponse
	switch t := that.(type) {
	case *RespondWorkflowTaskFailedResponse:
		that1 = t
	case RespondWorkflowTaskFailedResponse:
		that1 = &t
	default:
		return false
	}

	return proto.Equal(this, that1)
}

// Marshal an object of type PollActivityTaskQueueRequest to the protobuf v3 wire format
func (val *PollActivityTaskQueueRequest) Marshal() ([]byte, error) {
	return proto.Marshal(val)
}

// Unmarshal an object of type PollActivityTaskQueueRequest from the protobuf v3 wire format
func (val *PollActivityTaskQueueRequest) Unmarshal(buf []byte) error {
	return proto.Unmarshal(buf, val)
}

// Size returns the size of the object, in bytes, once serialized
func (val *PollActivityTaskQueueRequest) Size() int {
	return proto.Size(val)
}

// Equal returns whether two PollActivityTaskQueueRequest values are equivalent by recursively
// comparing the message's fields.
// For more information see the documentation for
// https://pkg.go.dev/google.golang.org/protobuf/proto#Equal
func (this *PollActivityTaskQueueRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	var that1 *PollActivityTaskQueueRequest
	switch t := that.(type) {
	case *PollActivityTaskQueueRequest:
		that1 = t
	case PollActivityTaskQueueRequest:
		that1 = &t
	default:
		return false
	}

	return proto.Equal(this, that1)
}

// Marshal an object of type PollActivityTaskQueueResponse to the protobuf v3 wire format
func (val *PollActivityTaskQueueResponse) Marshal() ([]byte, error) {
	return proto.Marshal(val)
}

// Unmarshal an object of type PollActivityTaskQueueResponse from the protobuf v3 wire format
func (val *PollActivityTaskQueueResponse) Unmarshal(buf []byte) error {
	return proto.Unmarshal(buf, val)
}

// Size returns the size of the object, in bytes, once serialized
func (val *PollActivityTaskQueueResponse) Size() int {
	return proto.Size(val)
}

// Equal returns whether two PollActivityTaskQueueResponse values are equivalent by recursively
// comparing the message's fields.
// For more information see the documentation for
// https://pkg.go.dev/google.golang.org/protobuf/proto#Equal
func (this *PollActivityTaskQueueResponse) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	var that1 *PollActivityTaskQueueResponse
	switch t := that.(type) {
	case *PollActivityTaskQueueResponse:
		that1 = t
	case PollActivityTaskQueueResponse:
		that1 = &t
	default:
		return false
	}

	return proto.Equal(this, that1)
}

// Marshal an object of type RecordActivityTaskHeartbeatRequest to the protobuf v3 wire format
func (val *RecordActivityTaskHeartbeatRequest) Marshal() ([]byte, error) {
	return proto.Marshal(val)
}

// Unmarshal an object of type RecordActivityTaskHeartbeatRequest from the protobuf v3 wire format
func (val *RecordActivityTaskHeartbeatRequest) Unmarshal(buf []byte) error {
	return proto.Unmarshal(buf, val)
}

// Size returns the size of the object, in bytes, once serialized
func (val *RecordActivityTaskHeartbeatRequest) Size() int {
	return proto.Size(val)
}

// Equal returns whether two RecordActivityTaskHeartbeatRequest values are equivalent by recursively
// comparing the message's fields.
// For more information see the documentation for
// https://pkg.go.dev/google.golang.org/protobuf/proto#Equal
func (this *RecordActivityTaskHeartbeatRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	var that1 *RecordActivityTaskHeartbeatRequest
	switch t := that.(type) {
	case *RecordActivityTaskHeartbeatRequest:
		that1 = t
	case RecordActivityTaskHeartbeatRequest:
		that1 = &t
	default:
		return false
	}

	return proto.Equal(this, that1)
}

// Marshal an object of type RecordActivityTaskHeartbeatResponse to the protobuf v3 wire format
func (val *RecordActivityTaskHeartbeatResponse) Marshal() ([]byte, error) {
	return proto.Marshal(val)
}

// Unmarshal an object of type RecordActivityTaskHeartbeatResponse from the protobuf v3 wire format
func (val *RecordActivityTaskHeartbeatResponse) Unmarshal(buf []byte) error {
	return proto.Unmarshal(buf, val)
}

// Size returns the size of the object, in bytes, once serialized
func (val *RecordActivityTaskHeartbeatResponse) Size() int {
	return proto.Size(val)
}

// Equal returns whether two RecordActivityTaskHeartbeatResponse values are equivalent by recursively
// comparing the message's fields.
// For more information see the documentation for
// https://pkg.go.dev/google.golang.org/protobuf/proto#Equal
func (this *RecordActivityTaskHeartbeatResponse) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	var that1 *RecordActivityTaskHeartbeatResponse
	switch t := that.(type) {
	case *RecordActivityTaskHeartbeatResponse:
		that1 = t
	case RecordActivityTaskHeartbeatResponse:
		that1 = &t
	default:
		return false
	}

	return proto.Equal(this, that1)
}

// Marshal an object of type RecordActivityTaskHeartbeatByIdRequest to the protobuf v3 wire format
func (val *RecordActivityTaskHeartbeatByIdRequest) Marshal() ([]byte, error) {
	return proto.Marshal(val)
}

// Unmarshal an object of type RecordActivityTaskHeartbeatByIdRequest from the protobuf v3 wire format
func (val *RecordActivityTaskHeartbeatByIdRequest) Unmarshal(buf []byte) error {
	return proto.Unmarshal(buf, val)
}

// Size returns the size of the object, in bytes, once serialized
func (val *RecordActivityTaskHeartbeatByIdRequest) Size() int {
	return proto.Size(val)
}

// Equal returns whether two RecordActivityTaskHeartbeatByIdRequest values are equivalent by recursively
// comparing the message's fields.
// For more information see the documentation for
// https://pkg.go.dev/google.golang.org/protobuf/proto#Equal
func (this *RecordActivityTaskHeartbeatByIdRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	var that1 *RecordActivityTaskHeartbeatByIdRequest
	switch t := that.(type) {
	case *RecordActivityTaskHeartbeatByIdRequest:
		that1 = t
	case RecordActivityTaskHeartbeatByIdRequest:
		that1 = &t
	default:
		return false
	}

	return proto.Equal(this, that1)
}

// Marshal an object of type RecordActivityTaskHeartbeatByIdResponse to the protobuf v3 wire format
func (val *RecordActivityTaskHeartbeatByIdResponse) Marshal() ([]byte, error) {
	return proto.Marshal(val)
}

// Unmarshal an object of type RecordActivityTaskHeartbeatByIdResponse from the protobuf v3 wire format
func (val *RecordActivityTaskHeartbeatByIdResponse) Unmarshal(buf []byte) error {
	return proto.Unmarshal(buf, val)
}

// Size returns the size of the object, in bytes, once serialized
func (val *RecordActivityTaskHeartbeatByIdResponse) Size() int {
	return proto.Size(val)
}

// Equal returns whether two RecordActivityTaskHeartbeatByIdResponse values are equivalent by recursively
// comparing the message's fields.
// For more information see the documentation for
// https://pkg.go.dev/google.golang.org/protobuf/proto#Equal
func (this *RecordActivityTaskHeartbeatByIdResponse) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	var that1 *RecordActivityTaskHeartbeatByIdResponse
	switch t := that.(type) {
	case *RecordActivityTaskHeartbeatByIdResponse:
		that1 = t
	case RecordActivityTaskHeartbeatByIdResponse:
		that1 = &t
	default:
		return false
	}

	return proto.Equal(this, that1)
}

// Marshal an object of type RespondActivityTaskCompletedRequest to the protobuf v3 wire format
func (val *RespondActivityTaskCompletedRequest) Marshal() ([]byte, error) {
	return proto.Marshal(val)
}

// Unmarshal an object of type RespondActivityTaskCompletedRequest from the protobuf v3 wire format
func (val *RespondActivityTaskCompletedRequest) Unmarshal(buf []byte) error {
	return proto.Unmarshal(buf, val)
}

// Size returns the size of the object, in bytes, once serialized
func (val *RespondActivityTaskCompletedRequest) Size() int {
	return proto.Size(val)
}

// Equal returns whether two RespondActivityTaskCompletedRequest values are equivalent by recursively
// comparing the message's fields.
// For more information see the documentation for
// https://pkg.go.dev/google.golang.org/protobuf/proto#Equal
func (this *RespondActivityTaskCompletedRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	var that1 *RespondActivityTaskCompletedRequest
	switch t := that.(type) {
	case *RespondActivityTaskCompletedRequest:
		that1 = t
	case RespondActivityTaskCompletedRequest:
		that1 = &t
	default:
		return false
	}

	return proto.Equal(this, that1)
}

// Marshal an object of type RespondActivityTaskCompletedResponse to the protobuf v3 wire format
func (val *RespondActivityTaskCompletedResponse) Marshal() ([]byte, error) {
	return proto.Marshal(val)
}

// Unmarshal an object of type RespondActivityTaskCompletedResponse from the protobuf v3 wire format
func (val *RespondActivityTaskCompletedResponse) Unmarshal(buf []byte) error {
	return proto.Unmarshal(buf, val)
}

// Size returns the size of the object, in bytes, once serialized
func (val *RespondActivityTaskCompletedResponse) Size() int {
	return proto.Size(val)
}

// Equal returns whether two RespondActivityTaskCompletedResponse values are equivalent by recursively
// comparing the message's fields.
// For more information see the documentation for
// https://pkg.go.dev/google.golang.org/protobuf/proto#Equal
func (this *RespondActivityTaskCompletedResponse) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	var that1 *RespondActivityTaskCompletedResponse
	switch t := that.(type) {
	case *RespondActivityTaskCompletedResponse:
		that1 = t
	case RespondActivityTaskCompletedResponse:
		that1 = &t
	default:
		return false
	}

	return proto.Equal(this, that1)
}

// Marshal an object of type RespondActivityTaskCompletedByIdRequest to the protobuf v3 wire format
func (val *RespondActivityTaskCompletedByIdRequest) Marshal() ([]byte, error) {
	return proto.Marshal(val)
}

// Unmarshal an object of type RespondActivityTaskCompletedByIdRequest from the protobuf v3 wire format
func (val *RespondActivityTaskCompletedByIdRequest) Unmarshal(buf []byte) error {
	return proto.Unmarshal(buf, val)
}

// Size returns the size of the object, in bytes, once serialized
func (val *RespondActivityTaskCompletedByIdRequest) Size() int {
	return proto.Size(val)
}

// Equal returns whether two RespondActivityTaskCompletedByIdRequest values are equivalent by recursively
// comparing the message's fields.
// For more information see the documentation for
// https://pkg.go.dev/google.golang.org/protobuf/proto#Equal
func (this *RespondActivityTaskCompletedByIdRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	var that1 *RespondActivityTaskCompletedByIdRequest
	switch t := that.(type) {
	case *RespondActivityTaskCompletedByIdRequest:
		that1 = t
	case RespondActivityTaskCompletedByIdRequest:
		that1 = &t
	default:
		return false
	}

	return proto.Equal(this, that1)
}

// Marshal an object of type RespondActivityTaskCompletedByIdResponse to the protobuf v3 wire format
func (val *RespondActivityTaskCompletedByIdResponse) Marshal() ([]byte, error) {
	return proto.Marshal(val)
}

// Unmarshal an object of type RespondActivityTaskCompletedByIdResponse from the protobuf v3 wire format
func (val *RespondActivityTaskCompletedByIdResponse) Unmarshal(buf []byte) error {
	return proto.Unmarshal(buf, val)
}

// Size returns the size of the object, in bytes, once serialized
func (val *RespondActivityTaskCompletedByIdResponse) Size() int {
	return proto.Size(val)
}

// Equal returns whether two RespondActivityTaskCompletedByIdResponse values are equivalent by recursively
// comparing the message's fields.
// For more information see the documentation for
// https://pkg.go.dev/google.golang.org/protobuf/proto#Equal
func (this *RespondActivityTaskCompletedByIdResponse) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	var that1 *RespondActivityTaskCompletedByIdResponse
	switch t := that.(type) {
	case *RespondActivityTaskCompletedByIdResponse:
		that1 = t
	case RespondActivityTaskCompletedByIdResponse:
		that1 = &t
	default:
		return false
	}

	return proto.Equal(this, that1)
}

// Marshal an object of type RespondActivityTaskFailedRequest to the protobuf v3 wire format
func (val *RespondActivityTaskFailedRequest) Marshal() ([]byte, error) {
	return proto.Marshal(val)
}

// Unmarshal an object of type RespondActivityTaskFailedRequest from the protobuf v3 wire format
func (val *RespondActivityTaskFailedRequest) Unmarshal(buf []byte) error {
	return proto.Unmarshal(buf, val)
}

// Size returns the size of the object, in bytes, once serialized
func (val *RespondActivityTaskFailedRequest) Size() int {
	return proto.Size(val)
}

// Equal returns whether two RespondActivityTaskFailedRequest values are equivalent by recursively
// comparing the message's fields.
// For more information see the documentation for
// https://pkg.go.dev/google.golang.org/protobuf/proto#Equal
func (this *RespondActivityTaskFailedRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	var that1 *RespondActivityTaskFailedRequest
	switch t := that.(type) {
	case *RespondActivityTaskFailedRequest:
		that1 = t
	case RespondActivityTaskFailedRequest:
		that1 = &t
	default:
		return false
	}

	return proto.Equal(this, that1)
}

// Marshal an object of type RespondActivityTaskFailedResponse to the protobuf v3 wire format
func (val *RespondActivityTaskFailedResponse) Marshal() ([]byte, error) {
	return proto.Marshal(val)
}

// Unmarshal an object of type RespondActivityTaskFailedResponse from the protobuf v3 wire format
func (val *RespondActivityTaskFailedResponse) Unmarshal(buf []byte) error {
	return proto.Unmarshal(buf, val)
}

// Size returns the size of the object, in bytes, once serialized
func (val *RespondActivityTaskFailedResponse) Size() int {
	return proto.Size(val)
}

// Equal returns whether two RespondActivityTaskFailedResponse values are equivalent by recursively
// comparing the message's fields.
// For more information see the documentation for
// https://pkg.go.dev/google.golang.org/protobuf/proto#Equal
func (this *RespondActivityTaskFailedResponse) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	var that1 *RespondActivityTaskFailedResponse
	switch t := that.(type) {
	case *RespondActivityTaskFailedResponse:
		that1 = t
	case RespondActivityTaskFailedResponse:
		that1 = &t
	default:
		return false
	}

	return proto.Equal(this, that1)
}

// Marshal an object of type RespondActivityTaskFailedByIdRequest to the protobuf v3 wire format
func (val *RespondActivityTaskFailedByIdRequest) Marshal() ([]byte, error) {
	return proto.Marshal(val)
}

// Unmarshal an object of type RespondActivityTaskFailedByIdRequest from the protobuf v3 wire format
func (val *RespondActivityTaskFailedByIdRequest) Unmarshal(buf []byte) error {
	return proto.Unmarshal(buf, val)
}

// Size returns the size of the object, in bytes, once serialized
func (val *RespondActivityTaskFailedByIdRequest) Size() int {
	return proto.Size(val)
}

// Equal returns whether two RespondActivityTaskFailedByIdRequest values are equivalent by recursively
// comparing the message's fields.
// For more information see the documentation for
// https://pkg.go.dev/google.golang.org/protobuf/proto#Equal
func (this *RespondActivityTaskFailedByIdRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	var that1 *RespondActivityTaskFailedByIdRequest
	switch t := that.(type) {
	case *RespondActivityTaskFailedByIdRequest:
		that1 = t
	case RespondActivityTaskFailedByIdRequest:
		that1 = &t
	default:
		return false
	}

	return proto.Equal(this, that1)
}

// Marshal an object of type RespondActivityTaskFailedByIdResponse to the protobuf v3 wire format
func (val *RespondActivityTaskFailedByIdResponse) Marshal() ([]byte, error) {
	return proto.Marshal(val)
}

// Unmarshal an object of type RespondActivityTaskFailedByIdResponse from the protobuf v3 wire format
func (val *RespondActivityTaskFailedByIdResponse) Unmarshal(buf []byte) error {
	return proto.Unmarshal(buf, val)
}

// Size returns the size of the object, in bytes, once serialized
func (val *RespondActivityTaskFailedByIdResponse) Size() int {
	return proto.Size(val)
}

// Equal returns whether two RespondActivityTaskFailedByIdResponse values are equivalent by recursively
// comparing the message's fields.
// For more information see the documentation for
// https://pkg.go.dev/google.golang.org/protobuf/proto#Equal
func (this *RespondActivityTaskFailedByIdResponse) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	var that1 *RespondActivityTaskFailedByIdResponse
	switch t := that.(type) {
	case *RespondActivityTaskFailedByIdResponse:
		that1 = t
	case RespondActivityTaskFailedByIdResponse:
		that1 = &t
	default:
		return false
	}

	return proto.Equal(this, that1)
}

// Marshal an object of type RespondActivityTaskCanceledRequest to the protobuf v3 wire format
func (val *RespondActivityTaskCanceledRequest) Marshal() ([]byte, error) {
	return proto.Marshal(val)
}

// Unmarshal an object of type RespondActivityTaskCanceledRequest from the protobuf v3 wire format
func (val *RespondActivityTaskCanceledRequest) Unmarshal(buf []byte) error {
	return proto.Unmarshal(buf, val)
}

// Size returns the size of the object, in bytes, once serialized
func (val *RespondActivityTaskCanceledRequest) Size() int {
	return proto.Size(val)
}

// Equal returns whether two RespondActivityTaskCanceledRequest values are equivalent by recursively
// comparing the message's fields.
// For more information see the documentation for
// https://pkg.go.dev/google.golang.org/protobuf/proto#Equal
func (this *RespondActivityTaskCanceledRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	var that1 *RespondActivityTaskCanceledRequest
	switch t := that.(type) {
	case *RespondActivityTaskCanceledRequest:
		that1 = t
	case RespondActivityTaskCanceledRequest:
		that1 = &t
	default:
		return false
	}

	return proto.Equal(this, that1)
}

// Marshal an object of type RespondActivityTaskCanceledResponse to the protobuf v3 wire format
func (val *RespondActivityTaskCanceledResponse) Marshal() ([]byte, error) {
	return proto.Marshal(val)
}

// Unmarshal an object of type RespondActivityTaskCanceledResponse from the protobuf v3 wire format
func (val *RespondActivityTaskCanceledResponse) Unmarshal(buf []byte) error {
	return proto.Unmarshal(buf, val)
}

// Size returns the size of the object, in bytes, once serialized
func (val *RespondActivityTaskCanceledResponse) Size() int {
	return proto.Size(val)
}

// Equal returns whether two RespondActivityTaskCanceledResponse values are equivalent by recursively
// comparing the message's fields.
// For more information see the documentation for
// https://pkg.go.dev/google.golang.org/protobuf/proto#Equal
func (this *RespondActivityTaskCanceledResponse) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	var that1 *RespondActivityTaskCanceledResponse
	switch t := that.(type) {
	case *RespondActivityTaskCanceledResponse:
		that1 = t
	case RespondActivityTaskCanceledResponse:
		that1 = &t
	default:
		return false
	}

	return proto.Equal(this, that1)
}

// Marshal an object of type RespondActivityTaskCanceledByIdRequest to the protobuf v3 wire format
func (val *RespondActivityTaskCanceledByIdRequest) Marshal() ([]byte, error) {
	return proto.Marshal(val)
}

// Unmarshal an object of type RespondActivityTaskCanceledByIdRequest from the protobuf v3 wire format
func (val *RespondActivityTaskCanceledByIdRequest) Unmarshal(buf []byte) error {
	return proto.Unmarshal(buf, val)
}

// Size returns the size of the object, in bytes, once serialized
func (val *RespondActivityTaskCanceledByIdRequest) Size() int {
	return proto.Size(val)
}

// Equal returns whether two RespondActivityTaskCanceledByIdRequest values are equivalent by recursively
// comparing the message's fields.
// For more information see the documentation for
// https://pkg.go.dev/google.golang.org/protobuf/proto#Equal
func (this *RespondActivityTaskCanceledByIdRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	var that1 *RespondActivityTaskCanceledByIdRequest
	switch t := that.(type) {
	case *RespondActivityTaskCanceledByIdRequest:
		that1 = t
	case RespondActivityTaskCanceledByIdRequest:
		that1 = &t
	default:
		return false
	}

	return proto.Equal(this, that1)
}

// Marshal an object of type RespondActivityTaskCanceledByIdResponse to the protobuf v3 wire format
func (val *RespondActivityTaskCanceledByIdResponse) Marshal() ([]byte, error) {
	return proto.Marshal(val)
}

// Unmarshal an object of type RespondActivityTaskCanceledByIdResponse from the protobuf v3 wire format
func (val *RespondActivityTaskCanceledByIdResponse) Unmarshal(buf []byte) error {
	return proto.Unmarshal(buf, val)
}

// Size returns the size of the object, in bytes, once serialized
func (val *RespondActivityTaskCanceledByIdResponse) Size() int {
	return proto.Size(val)
}

// Equal returns whether two RespondActivityTaskCanceledByIdResponse values are equivalent by recursively
// comparing the message's fields.
// For more information see the documentation for
// https://pkg.go.dev/google.golang.org/protobuf/proto#Equal
func (this *RespondActivityTaskCanceledByIdResponse) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	var that1 *RespondActivityTaskCanceledByIdResponse
	switch t := that.(type) {
	case *RespondActivityTaskCanceledByIdResponse:
		that1 = t
	case RespondActivityTaskCanceledByIdResponse:
		that1 = &t
	default:
		return false
	}

	return proto.Equal(this, that1)
}

// Marshal an object of type RequestCancelWorkflowExecutionRequest to the protobuf v3 wire format
func (val *RequestCancelWorkflowExecutionRequest) Marshal() ([]byte, error) {
	return proto.Marshal(val)
}

// Unmarshal an object of type RequestCancelWorkflowExecutionRequest from the protobuf v3 wire format
func (val *RequestCancelWorkflowExecutionRequest) Unmarshal(buf []byte) error {
	return proto.Unmarshal(buf, val)
}

// Size returns the size of the object, in bytes, once serialized
func (val *RequestCancelWorkflowExecutionRequest) Size() int {
	return proto.Size(val)
}

// Equal returns whether two RequestCancelWorkflowExecutionRequest values are equivalent by recursively
// comparing the message's fields.
// For more information see the documentation for
// https://pkg.go.dev/google.golang.org/protobuf/proto#Equal
func (this *RequestCancelWorkflowExecutionRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	var that1 *RequestCancelWorkflowExecutionRequest
	switch t := that.(type) {
	case *RequestCancelWorkflowExecutionRequest:
		that1 = t
	case RequestCancelWorkflowExecutionRequest:
		that1 = &t
	default:
		return false
	}

	return proto.Equal(this, that1)
}

// Marshal an object of type RequestCancelWorkflowExecutionResponse to the protobuf v3 wire format
func (val *RequestCancelWorkflowExecutionResponse) Marshal() ([]byte, error) {
	return proto.Marshal(val)
}

// Unmarshal an object of type RequestCancelWorkflowExecutionResponse from the protobuf v3 wire format
func (val *RequestCancelWorkflowExecutionResponse) Unmarshal(buf []byte) error {
	return proto.Unmarshal(buf, val)
}

// Size returns the size of the object, in bytes, once serialized
func (val *RequestCancelWorkflowExecutionResponse) Size() int {
	return proto.Size(val)
}

// Equal returns whether two RequestCancelWorkflowExecutionResponse values are equivalent by recursively
// comparing the message's fields.
// For more information see the documentation for
// https://pkg.go.dev/google.golang.org/protobuf/proto#Equal
func (this *RequestCancelWorkflowExecutionResponse) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	var that1 *RequestCancelWorkflowExecutionResponse
	switch t := that.(type) {
	case *RequestCancelWorkflowExecutionResponse:
		that1 = t
	case RequestCancelWorkflowExecutionResponse:
		that1 = &t
	default:
		return false
	}

	return proto.Equal(this, that1)
}

// Marshal an object of type SignalWorkflowExecutionRequest to the protobuf v3 wire format
func (val *SignalWorkflowExecutionRequest) Marshal() ([]byte, error) {
	return proto.Marshal(val)
}

// Unmarshal an object of type SignalWorkflowExecutionRequest from the protobuf v3 wire format
func (val *SignalWorkflowExecutionRequest) Unmarshal(buf []byte) error {
	return proto.Unmarshal(buf, val)
}

// Size returns the size of the object, in bytes, once serialized
func (val *SignalWorkflowExecutionRequest) Size() int {
	return proto.Size(val)
}

// Equal returns whether two SignalWorkflowExecutionRequest values are equivalent by recursively
// comparing the message's fields.
// For more information see the documentation for
// https://pkg.go.dev/google.golang.org/protobuf/proto#Equal
func (this *SignalWorkflowExecutionRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	var that1 *SignalWorkflowExecutionRequest
	switch t := that.(type) {
	case *SignalWorkflowExecutionRequest:
		that1 = t
	case SignalWorkflowExecutionRequest:
		that1 = &t
	default:
		return false
	}

	return proto.Equal(this, that1)
}

// Marshal an object of type SignalWorkflowExecutionResponse to the protobuf v3 wire format
func (val *SignalWorkflowExecutionResponse) Marshal() ([]byte, error) {
	return proto.Marshal(val)
}

// Unmarshal an object of type SignalWorkflowExecutionResponse from the protobuf v3 wire format
func (val *SignalWorkflowExecutionResponse) Unmarshal(buf []byte) error {
	return proto.Unmarshal(buf, val)
}

// Size returns the size of the object, in bytes, once serialized
func (val *SignalWorkflowExecutionResponse) Size() int {
	return proto.Size(val)
}

// Equal returns whether two SignalWorkflowExecutionResponse values are equivalent by recursively
// comparing the message's fields.
// For more information see the documentation for
// https://pkg.go.dev/google.golang.org/protobuf/proto#Equal
func (this *SignalWorkflowExecutionResponse) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	var that1 *SignalWorkflowExecutionResponse
	switch t := that.(type) {
	case *SignalWorkflowExecutionResponse:
		that1 = t
	case SignalWorkflowExecutionResponse:
		that1 = &t
	default:
		return false
	}

	return proto.Equal(this, that1)
}

// Marshal an object of type SignalWithStartWorkflowExecutionRequest to the protobuf v3 wire format
func (val *SignalWithStartWorkflowExecutionRequest) Marshal() ([]byte, error) {
	return proto.Marshal(val)
}

// Unmarshal an object of type SignalWithStartWorkflowExecutionRequest from the protobuf v3 wire format
func (val *SignalWithStartWorkflowExecutionRequest) Unmarshal(buf []byte) error {
	return proto.Unmarshal(buf, val)
}

// Size returns the size of the object, in bytes, once serialized
func (val *SignalWithStartWorkflowExecutionRequest) Size() int {
	return proto.Size(val)
}

// Equal returns whether two SignalWithStartWorkflowExecutionRequest values are equivalent by recursively
// comparing the message's fields.
// For more information see the documentation for
// https://pkg.go.dev/google.golang.org/protobuf/proto#Equal
func (this *SignalWithStartWorkflowExecutionRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	var that1 *SignalWithStartWorkflowExecutionRequest
	switch t := that.(type) {
	case *SignalWithStartWorkflowExecutionRequest:
		that1 = t
	case SignalWithStartWorkflowExecutionRequest:
		that1 = &t
	default:
		return false
	}

	return proto.Equal(this, that1)
}

// Marshal an object of type SignalWithStartWorkflowExecutionResponse to the protobuf v3 wire format
func (val *SignalWithStartWorkflowExecutionResponse) Marshal() ([]byte, error) {
	return proto.Marshal(val)
}

// Unmarshal an object of type SignalWithStartWorkflowExecutionResponse from the protobuf v3 wire format
func (val *SignalWithStartWorkflowExecutionResponse) Unmarshal(buf []byte) error {
	return proto.Unmarshal(buf, val)
}

// Size returns the size of the object, in bytes, once serialized
func (val *SignalWithStartWorkflowExecutionResponse) Size() int {
	return proto.Size(val)
}

// Equal returns whether two SignalWithStartWorkflowExecutionResponse values are equivalent by recursively
// comparing the message's fields.
// For more information see the documentation for
// https://pkg.go.dev/google.golang.org/protobuf/proto#Equal
func (this *SignalWithStartWorkflowExecutionResponse) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	var that1 *SignalWithStartWorkflowExecutionResponse
	switch t := that.(type) {
	case *SignalWithStartWorkflowExecutionResponse:
		that1 = t
	case SignalWithStartWorkflowExecutionResponse:
		that1 = &t
	default:
		return false
	}

	return proto.Equal(this, that1)
}

// Marshal an object of type ResetWorkflowExecutionRequest to the protobuf v3 wire format
func (val *ResetWorkflowExecutionRequest) Marshal() ([]byte, error) {
	return proto.Marshal(val)
}

// Unmarshal an object of type ResetWorkflowExecutionRequest from the protobuf v3 wire format
func (val *ResetWorkflowExecutionRequest) Unmarshal(buf []byte) error {
	return proto.Unmarshal(buf, val)
}

// Size returns the size of the object, in bytes, once serialized
func (val *ResetWorkflowExecutionRequest) Size() int {
	return proto.Size(val)
}

// Equal returns whether two ResetWorkflowExecutionRequest values are equivalent by recursively
// comparing the message's fields.
// For more information see the documentation for
// https://pkg.go.dev/google.golang.org/protobuf/proto#Equal
func (this *ResetWorkflowExecutionRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	var that1 *ResetWorkflowExecutionRequest
	switch t := that.(type) {
	case *ResetWorkflowExecutionRequest:
		that1 = t
	case ResetWorkflowExecutionRequest:
		that1 = &t
	default:
		return false
	}

	return proto.Equal(this, that1)
}

// Marshal an object of type ResetWorkflowExecutionResponse to the protobuf v3 wire format
func (val *ResetWorkflowExecutionResponse) Marshal() ([]byte, error) {
	return proto.Marshal(val)
}

// Unmarshal an object of type ResetWorkflowExecutionResponse from the protobuf v3 wire format
func (val *ResetWorkflowExecutionResponse) Unmarshal(buf []byte) error {
	return proto.Unmarshal(buf, val)
}

// Size returns the size of the object, in bytes, once serialized
func (val *ResetWorkflowExecutionResponse) Size() int {
	return proto.Size(val)
}

// Equal returns whether two ResetWorkflowExecutionResponse values are equivalent by recursively
// comparing the message's fields.
// For more information see the documentation for
// https://pkg.go.dev/google.golang.org/protobuf/proto#Equal
func (this *ResetWorkflowExecutionResponse) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	var that1 *ResetWorkflowExecutionResponse
	switch t := that.(type) {
	case *ResetWorkflowExecutionResponse:
		that1 = t
	case ResetWorkflowExecutionResponse:
		that1 = &t
	default:
		return false
	}

	return proto.Equal(this, that1)
}

// Marshal an object of type TerminateWorkflowExecutionRequest to the protobuf v3 wire format
func (val *TerminateWorkflowExecutionRequest) Marshal() ([]byte, error) {
	return proto.Marshal(val)
}

// Unmarshal an object of type TerminateWorkflowExecutionRequest from the protobuf v3 wire format
func (val *TerminateWorkflowExecutionRequest) Unmarshal(buf []byte) error {
	return proto.Unmarshal(buf, val)
}

// Size returns the size of the object, in bytes, once serialized
func (val *TerminateWorkflowExecutionRequest) Size() int {
	return proto.Size(val)
}

// Equal returns whether two TerminateWorkflowExecutionRequest values are equivalent by recursively
// comparing the message's fields.
// For more information see the documentation for
// https://pkg.go.dev/google.golang.org/protobuf/proto#Equal
func (this *TerminateWorkflowExecutionRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	var that1 *TerminateWorkflowExecutionRequest
	switch t := that.(type) {
	case *TerminateWorkflowExecutionRequest:
		that1 = t
	case TerminateWorkflowExecutionRequest:
		that1 = &t
	default:
		return false
	}

	return proto.Equal(this, that1)
}

// Marshal an object of type TerminateWorkflowExecutionResponse to the protobuf v3 wire format
func (val *TerminateWorkflowExecutionResponse) Marshal() ([]byte, error) {
	return proto.Marshal(val)
}

// Unmarshal an object of type TerminateWorkflowExecutionResponse from the protobuf v3 wire format
func (val *TerminateWorkflowExecutionResponse) Unmarshal(buf []byte) error {
	return proto.Unmarshal(buf, val)
}

// Size returns the size of the object, in bytes, once serialized
func (val *TerminateWorkflowExecutionResponse) Size() int {
	return proto.Size(val)
}

// Equal returns whether two TerminateWorkflowExecutionResponse values are equivalent by recursively
// comparing the message's fields.
// For more information see the documentation for
// https://pkg.go.dev/google.golang.org/protobuf/proto#Equal
func (this *TerminateWorkflowExecutionResponse) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	var that1 *TerminateWorkflowExecutionResponse
	switch t := that.(type) {
	case *TerminateWorkflowExecutionResponse:
		that1 = t
	case TerminateWorkflowExecutionResponse:
		that1 = &t
	default:
		return false
	}

	return proto.Equal(this, that1)
}

// Marshal an object of type DeleteWorkflowExecutionRequest to the protobuf v3 wire format
func (val *DeleteWorkflowExecutionRequest) Marshal() ([]byte, error) {
	return proto.Marshal(val)
}

// Unmarshal an object of type DeleteWorkflowExecutionRequest from the protobuf v3 wire format
func (val *DeleteWorkflowExecutionRequest) Unmarshal(buf []byte) error {
	return proto.Unmarshal(buf, val)
}

// Size returns the size of the object, in bytes, once serialized
func (val *DeleteWorkflowExecutionRequest) Size() int {
	return proto.Size(val)
}

// Equal returns whether two DeleteWorkflowExecutionRequest values are equivalent by recursively
// comparing the message's fields.
// For more information see the documentation for
// https://pkg.go.dev/google.golang.org/protobuf/proto#Equal
func (this *DeleteWorkflowExecutionRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	var that1 *DeleteWorkflowExecutionRequest
	switch t := that.(type) {
	case *DeleteWorkflowExecutionRequest:
		that1 = t
	case DeleteWorkflowExecutionRequest:
		that1 = &t
	default:
		return false
	}

	return proto.Equal(this, that1)
}

// Marshal an object of type DeleteWorkflowExecutionResponse to the protobuf v3 wire format
func (val *DeleteWorkflowExecutionResponse) Marshal() ([]byte, error) {
	return proto.Marshal(val)
}

// Unmarshal an object of type DeleteWorkflowExecutionResponse from the protobuf v3 wire format
func (val *DeleteWorkflowExecutionResponse) Unmarshal(buf []byte) error {
	return proto.Unmarshal(buf, val)
}

// Size returns the size of the object, in bytes, once serialized
func (val *DeleteWorkflowExecutionResponse) Size() int {
	return proto.Size(val)
}

// Equal returns whether two DeleteWorkflowExecutionResponse values are equivalent by recursively
// comparing the message's fields.
// For more information see the documentation for
// https://pkg.go.dev/google.golang.org/protobuf/proto#Equal
func (this *DeleteWorkflowExecutionResponse) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	var that1 *DeleteWorkflowExecutionResponse
	switch t := that.(type) {
	case *DeleteWorkflowExecutionResponse:
		that1 = t
	case DeleteWorkflowExecutionResponse:
		that1 = &t
	default:
		return false
	}

	return proto.Equal(this, that1)
}

// Marshal an object of type ListOpenWorkflowExecutionsRequest to the protobuf v3 wire format
func (val *ListOpenWorkflowExecutionsRequest) Marshal() ([]byte, error) {
	return proto.Marshal(val)
}

// Unmarshal an object of type ListOpenWorkflowExecutionsRequest from the protobuf v3 wire format
func (val *ListOpenWorkflowExecutionsRequest) Unmarshal(buf []byte) error {
	return proto.Unmarshal(buf, val)
}

// Size returns the size of the object, in bytes, once serialized
func (val *ListOpenWorkflowExecutionsRequest) Size() int {
	return proto.Size(val)
}

// Equal returns whether two ListOpenWorkflowExecutionsRequest values are equivalent by recursively
// comparing the message's fields.
// For more information see the documentation for
// https://pkg.go.dev/google.golang.org/protobuf/proto#Equal
func (this *ListOpenWorkflowExecutionsRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	var that1 *ListOpenWorkflowExecutionsRequest
	switch t := that.(type) {
	case *ListOpenWorkflowExecutionsRequest:
		that1 = t
	case ListOpenWorkflowExecutionsRequest:
		that1 = &t
	default:
		return false
	}

	return proto.Equal(this, that1)
}

// Marshal an object of type ListOpenWorkflowExecutionsResponse to the protobuf v3 wire format
func (val *ListOpenWorkflowExecutionsResponse) Marshal() ([]byte, error) {
	return proto.Marshal(val)
}

// Unmarshal an object of type ListOpenWorkflowExecutionsResponse from the protobuf v3 wire format
func (val *ListOpenWorkflowExecutionsResponse) Unmarshal(buf []byte) error {
	return proto.Unmarshal(buf, val)
}

// Size returns the size of the object, in bytes, once serialized
func (val *ListOpenWorkflowExecutionsResponse) Size() int {
	return proto.Size(val)
}

// Equal returns whether two ListOpenWorkflowExecutionsResponse values are equivalent by recursively
// comparing the message's fields.
// For more information see the documentation for
// https://pkg.go.dev/google.golang.org/protobuf/proto#Equal
func (this *ListOpenWorkflowExecutionsResponse) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	var that1 *ListOpenWorkflowExecutionsResponse
	switch t := that.(type) {
	case *ListOpenWorkflowExecutionsResponse:
		that1 = t
	case ListOpenWorkflowExecutionsResponse:
		that1 = &t
	default:
		return false
	}

	return proto.Equal(this, that1)
}

// Marshal an object of type ListClosedWorkflowExecutionsRequest to the protobuf v3 wire format
func (val *ListClosedWorkflowExecutionsRequest) Marshal() ([]byte, error) {
	return proto.Marshal(val)
}

// Unmarshal an object of type ListClosedWorkflowExecutionsRequest from the protobuf v3 wire format
func (val *ListClosedWorkflowExecutionsRequest) Unmarshal(buf []byte) error {
	return proto.Unmarshal(buf, val)
}

// Size returns the size of the object, in bytes, once serialized
func (val *ListClosedWorkflowExecutionsRequest) Size() int {
	return proto.Size(val)
}

// Equal returns whether two ListClosedWorkflowExecutionsRequest values are equivalent by recursively
// comparing the message's fields.
// For more information see the documentation for
// https://pkg.go.dev/google.golang.org/protobuf/proto#Equal
func (this *ListClosedWorkflowExecutionsRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	var that1 *ListClosedWorkflowExecutionsRequest
	switch t := that.(type) {
	case *ListClosedWorkflowExecutionsRequest:
		that1 = t
	case ListClosedWorkflowExecutionsRequest:
		that1 = &t
	default:
		return false
	}

	return proto.Equal(this, that1)
}

// Marshal an object of type ListClosedWorkflowExecutionsResponse to the protobuf v3 wire format
func (val *ListClosedWorkflowExecutionsResponse) Marshal() ([]byte, error) {
	return proto.Marshal(val)
}

// Unmarshal an object of type ListClosedWorkflowExecutionsResponse from the protobuf v3 wire format
func (val *ListClosedWorkflowExecutionsResponse) Unmarshal(buf []byte) error {
	return proto.Unmarshal(buf, val)
}

// Size returns the size of the object, in bytes, once serialized
func (val *ListClosedWorkflowExecutionsResponse) Size() int {
	return proto.Size(val)
}

// Equal returns whether two ListClosedWorkflowExecutionsResponse values are equivalent by recursively
// comparing the message's fields.
// For more information see the documentation for
// https://pkg.go.dev/google.golang.org/protobuf/proto#Equal
func (this *ListClosedWorkflowExecutionsResponse) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	var that1 *ListClosedWorkflowExecutionsResponse
	switch t := that.(type) {
	case *ListClosedWorkflowExecutionsResponse:
		that1 = t
	case ListClosedWorkflowExecutionsResponse:
		that1 = &t
	default:
		return false
	}

	return proto.Equal(this, that1)
}

// Marshal an object of type ListWorkflowExecutionsRequest to the protobuf v3 wire format
func (val *ListWorkflowExecutionsRequest) Marshal() ([]byte, error) {
	return proto.Marshal(val)
}

// Unmarshal an object of type ListWorkflowExecutionsRequest from the protobuf v3 wire format
func (val *ListWorkflowExecutionsRequest) Unmarshal(buf []byte) error {
	return proto.Unmarshal(buf, val)
}

// Size returns the size of the object, in bytes, once serialized
func (val *ListWorkflowExecutionsRequest) Size() int {
	return proto.Size(val)
}

// Equal returns whether two ListWorkflowExecutionsRequest values are equivalent by recursively
// comparing the message's fields.
// For more information see the documentation for
// https://pkg.go.dev/google.golang.org/protobuf/proto#Equal
func (this *ListWorkflowExecutionsRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	var that1 *ListWorkflowExecutionsRequest
	switch t := that.(type) {
	case *ListWorkflowExecutionsRequest:
		that1 = t
	case ListWorkflowExecutionsRequest:
		that1 = &t
	default:
		return false
	}

	return proto.Equal(this, that1)
}

// Marshal an object of type ListWorkflowExecutionsResponse to the protobuf v3 wire format
func (val *ListWorkflowExecutionsResponse) Marshal() ([]byte, error) {
	return proto.Marshal(val)
}

// Unmarshal an object of type ListWorkflowExecutionsResponse from the protobuf v3 wire format
func (val *ListWorkflowExecutionsResponse) Unmarshal(buf []byte) error {
	return proto.Unmarshal(buf, val)
}

// Size returns the size of the object, in bytes, once serialized
func (val *ListWorkflowExecutionsResponse) Size() int {
	return proto.Size(val)
}

// Equal returns whether two ListWorkflowExecutionsResponse values are equivalent by recursively
// comparing the message's fields.
// For more information see the documentation for
// https://pkg.go.dev/google.golang.org/protobuf/proto#Equal
func (this *ListWorkflowExecutionsResponse) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	var that1 *ListWorkflowExecutionsResponse
	switch t := that.(type) {
	case *ListWorkflowExecutionsResponse:
		that1 = t
	case ListWorkflowExecutionsResponse:
		that1 = &t
	default:
		return false
	}

	return proto.Equal(this, that1)
}

// Marshal an object of type ListArchivedWorkflowExecutionsRequest to the protobuf v3 wire format
func (val *ListArchivedWorkflowExecutionsRequest) Marshal() ([]byte, error) {
	return proto.Marshal(val)
}

// Unmarshal an object of type ListArchivedWorkflowExecutionsRequest from the protobuf v3 wire format
func (val *ListArchivedWorkflowExecutionsRequest) Unmarshal(buf []byte) error {
	return proto.Unmarshal(buf, val)
}

// Size returns the size of the object, in bytes, once serialized
func (val *ListArchivedWorkflowExecutionsRequest) Size() int {
	return proto.Size(val)
}

// Equal returns whether two ListArchivedWorkflowExecutionsRequest values are equivalent by recursively
// comparing the message's fields.
// For more information see the documentation for
// https://pkg.go.dev/google.golang.org/protobuf/proto#Equal
func (this *ListArchivedWorkflowExecutionsRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	var that1 *ListArchivedWorkflowExecutionsRequest
	switch t := that.(type) {
	case *ListArchivedWorkflowExecutionsRequest:
		that1 = t
	case ListArchivedWorkflowExecutionsRequest:
		that1 = &t
	default:
		return false
	}

	return proto.Equal(this, that1)
}

// Marshal an object of type ListArchivedWorkflowExecutionsResponse to the protobuf v3 wire format
func (val *ListArchivedWorkflowExecutionsResponse) Marshal() ([]byte, error) {
	return proto.Marshal(val)
}

// Unmarshal an object of type ListArchivedWorkflowExecutionsResponse from the protobuf v3 wire format
func (val *ListArchivedWorkflowExecutionsResponse) Unmarshal(buf []byte) error {
	return proto.Unmarshal(buf, val)
}

// Size returns the size of the object, in bytes, once serialized
func (val *ListArchivedWorkflowExecutionsResponse) Size() int {
	return proto.Size(val)
}

// Equal returns whether two ListArchivedWorkflowExecutionsResponse values are equivalent by recursively
// comparing the message's fields.
// For more information see the documentation for
// https://pkg.go.dev/google.golang.org/protobuf/proto#Equal
func (this *ListArchivedWorkflowExecutionsResponse) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	var that1 *ListArchivedWorkflowExecutionsResponse
	switch t := that.(type) {
	case *ListArchivedWorkflowExecutionsResponse:
		that1 = t
	case ListArchivedWorkflowExecutionsResponse:
		that1 = &t
	default:
		return false
	}

	return proto.Equal(this, that1)
}

// Marshal an object of type ScanWorkflowExecutionsRequest to the protobuf v3 wire format
func (val *ScanWorkflowExecutionsRequest) Marshal() ([]byte, error) {
	return proto.Marshal(val)
}

// Unmarshal an object of type ScanWorkflowExecutionsRequest from the protobuf v3 wire format
func (val *ScanWorkflowExecutionsRequest) Unmarshal(buf []byte) error {
	return proto.Unmarshal(buf, val)
}

// Size returns the size of the object, in bytes, once serialized
func (val *ScanWorkflowExecutionsRequest) Size() int {
	return proto.Size(val)
}

// Equal returns whether two ScanWorkflowExecutionsRequest values are equivalent by recursively
// comparing the message's fields.
// For more information see the documentation for
// https://pkg.go.dev/google.golang.org/protobuf/proto#Equal
func (this *ScanWorkflowExecutionsRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	var that1 *ScanWorkflowExecutionsRequest
	switch t := that.(type) {
	case *ScanWorkflowExecutionsRequest:
		that1 = t
	case ScanWorkflowExecutionsRequest:
		that1 = &t
	default:
		return false
	}

	return proto.Equal(this, that1)
}

// Marshal an object of type ScanWorkflowExecutionsResponse to the protobuf v3 wire format
func (val *ScanWorkflowExecutionsResponse) Marshal() ([]byte, error) {
	return proto.Marshal(val)
}

// Unmarshal an object of type ScanWorkflowExecutionsResponse from the protobuf v3 wire format
func (val *ScanWorkflowExecutionsResponse) Unmarshal(buf []byte) error {
	return proto.Unmarshal(buf, val)
}

// Size returns the size of the object, in bytes, once serialized
func (val *ScanWorkflowExecutionsResponse) Size() int {
	return proto.Size(val)
}

// Equal returns whether two ScanWorkflowExecutionsResponse values are equivalent by recursively
// comparing the message's fields.
// For more information see the documentation for
// https://pkg.go.dev/google.golang.org/protobuf/proto#Equal
func (this *ScanWorkflowExecutionsResponse) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	var that1 *ScanWorkflowExecutionsResponse
	switch t := that.(type) {
	case *ScanWorkflowExecutionsResponse:
		that1 = t
	case ScanWorkflowExecutionsResponse:
		that1 = &t
	default:
		return false
	}

	return proto.Equal(this, that1)
}

// Marshal an object of type CountWorkflowExecutionsRequest to the protobuf v3 wire format
func (val *CountWorkflowExecutionsRequest) Marshal() ([]byte, error) {
	return proto.Marshal(val)
}

// Unmarshal an object of type CountWorkflowExecutionsRequest from the protobuf v3 wire format
func (val *CountWorkflowExecutionsRequest) Unmarshal(buf []byte) error {
	return proto.Unmarshal(buf, val)
}

// Size returns the size of the object, in bytes, once serialized
func (val *CountWorkflowExecutionsRequest) Size() int {
	return proto.Size(val)
}

// Equal returns whether two CountWorkflowExecutionsRequest values are equivalent by recursively
// comparing the message's fields.
// For more information see the documentation for
// https://pkg.go.dev/google.golang.org/protobuf/proto#Equal
func (this *CountWorkflowExecutionsRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	var that1 *CountWorkflowExecutionsRequest
	switch t := that.(type) {
	case *CountWorkflowExecutionsRequest:
		that1 = t
	case CountWorkflowExecutionsRequest:
		that1 = &t
	default:
		return false
	}

	return proto.Equal(this, that1)
}

// Marshal an object of type CountWorkflowExecutionsResponse to the protobuf v3 wire format
func (val *CountWorkflowExecutionsResponse) Marshal() ([]byte, error) {
	return proto.Marshal(val)
}

// Unmarshal an object of type CountWorkflowExecutionsResponse from the protobuf v3 wire format
func (val *CountWorkflowExecutionsResponse) Unmarshal(buf []byte) error {
	return proto.Unmarshal(buf, val)
}

// Size returns the size of the object, in bytes, once serialized
func (val *CountWorkflowExecutionsResponse) Size() int {
	return proto.Size(val)
}

// Equal returns whether two CountWorkflowExecutionsResponse values are equivalent by recursively
// comparing the message's fields.
// For more information see the documentation for
// https://pkg.go.dev/google.golang.org/protobuf/proto#Equal
func (this *CountWorkflowExecutionsResponse) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	var that1 *CountWorkflowExecutionsResponse
	switch t := that.(type) {
	case *CountWorkflowExecutionsResponse:
		that1 = t
	case CountWorkflowExecutionsResponse:
		that1 = &t
	default:
		return false
	}

	return proto.Equal(this, that1)
}

// Marshal an object of type GetSearchAttributesRequest to the protobuf v3 wire format
func (val *GetSearchAttributesRequest) Marshal() ([]byte, error) {
	return proto.Marshal(val)
}

// Unmarshal an object of type GetSearchAttributesRequest from the protobuf v3 wire format
func (val *GetSearchAttributesRequest) Unmarshal(buf []byte) error {
	return proto.Unmarshal(buf, val)
}

// Size returns the size of the object, in bytes, once serialized
func (val *GetSearchAttributesRequest) Size() int {
	return proto.Size(val)
}

// Equal returns whether two GetSearchAttributesRequest values are equivalent by recursively
// comparing the message's fields.
// For more information see the documentation for
// https://pkg.go.dev/google.golang.org/protobuf/proto#Equal
func (this *GetSearchAttributesRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	var that1 *GetSearchAttributesRequest
	switch t := that.(type) {
	case *GetSearchAttributesRequest:
		that1 = t
	case GetSearchAttributesRequest:
		that1 = &t
	default:
		return false
	}

	return proto.Equal(this, that1)
}

// Marshal an object of type GetSearchAttributesResponse to the protobuf v3 wire format
func (val *GetSearchAttributesResponse) Marshal() ([]byte, error) {
	return proto.Marshal(val)
}

// Unmarshal an object of type GetSearchAttributesResponse from the protobuf v3 wire format
func (val *GetSearchAttributesResponse) Unmarshal(buf []byte) error {
	return proto.Unmarshal(buf, val)
}

// Size returns the size of the object, in bytes, once serialized
func (val *GetSearchAttributesResponse) Size() int {
	return proto.Size(val)
}

// Equal returns whether two GetSearchAttributesResponse values are equivalent by recursively
// comparing the message's fields.
// For more information see the documentation for
// https://pkg.go.dev/google.golang.org/protobuf/proto#Equal
func (this *GetSearchAttributesResponse) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	var that1 *GetSearchAttributesResponse
	switch t := that.(type) {
	case *GetSearchAttributesResponse:
		that1 = t
	case GetSearchAttributesResponse:
		that1 = &t
	default:
		return false
	}

	return proto.Equal(this, that1)
}

// Marshal an object of type RespondQueryTaskCompletedRequest to the protobuf v3 wire format
func (val *RespondQueryTaskCompletedRequest) Marshal() ([]byte, error) {
	return proto.Marshal(val)
}

// Unmarshal an object of type RespondQueryTaskCompletedRequest from the protobuf v3 wire format
func (val *RespondQueryTaskCompletedRequest) Unmarshal(buf []byte) error {
	return proto.Unmarshal(buf, val)
}

// Size returns the size of the object, in bytes, once serialized
func (val *RespondQueryTaskCompletedRequest) Size() int {
	return proto.Size(val)
}

// Equal returns whether two RespondQueryTaskCompletedRequest values are equivalent by recursively
// comparing the message's fields.
// For more information see the documentation for
// https://pkg.go.dev/google.golang.org/protobuf/proto#Equal
func (this *RespondQueryTaskCompletedRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	var that1 *RespondQueryTaskCompletedRequest
	switch t := that.(type) {
	case *RespondQueryTaskCompletedRequest:
		that1 = t
	case RespondQueryTaskCompletedRequest:
		that1 = &t
	default:
		return false
	}

	return proto.Equal(this, that1)
}

// Marshal an object of type RespondQueryTaskCompletedResponse to the protobuf v3 wire format
func (val *RespondQueryTaskCompletedResponse) Marshal() ([]byte, error) {
	return proto.Marshal(val)
}

// Unmarshal an object of type RespondQueryTaskCompletedResponse from the protobuf v3 wire format
func (val *RespondQueryTaskCompletedResponse) Unmarshal(buf []byte) error {
	return proto.Unmarshal(buf, val)
}

// Size returns the size of the object, in bytes, once serialized
func (val *RespondQueryTaskCompletedResponse) Size() int {
	return proto.Size(val)
}

// Equal returns whether two RespondQueryTaskCompletedResponse values are equivalent by recursively
// comparing the message's fields.
// For more information see the documentation for
// https://pkg.go.dev/google.golang.org/protobuf/proto#Equal
func (this *RespondQueryTaskCompletedResponse) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	var that1 *RespondQueryTaskCompletedResponse
	switch t := that.(type) {
	case *RespondQueryTaskCompletedResponse:
		that1 = t
	case RespondQueryTaskCompletedResponse:
		that1 = &t
	default:
		return false
	}

	return proto.Equal(this, that1)
}

// Marshal an object of type ResetStickyTaskQueueRequest to the protobuf v3 wire format
func (val *ResetStickyTaskQueueRequest) Marshal() ([]byte, error) {
	return proto.Marshal(val)
}

// Unmarshal an object of type ResetStickyTaskQueueRequest from the protobuf v3 wire format
func (val *ResetStickyTaskQueueRequest) Unmarshal(buf []byte) error {
	return proto.Unmarshal(buf, val)
}

// Size returns the size of the object, in bytes, once serialized
func (val *ResetStickyTaskQueueRequest) Size() int {
	return proto.Size(val)
}

// Equal returns whether two ResetStickyTaskQueueRequest values are equivalent by recursively
// comparing the message's fields.
// For more information see the documentation for
// https://pkg.go.dev/google.golang.org/protobuf/proto#Equal
func (this *ResetStickyTaskQueueRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	var that1 *ResetStickyTaskQueueRequest
	switch t := that.(type) {
	case *ResetStickyTaskQueueRequest:
		that1 = t
	case ResetStickyTaskQueueRequest:
		that1 = &t
	default:
		return false
	}

	return proto.Equal(this, that1)
}

// Marshal an object of type ResetStickyTaskQueueResponse to the protobuf v3 wire format
func (val *ResetStickyTaskQueueResponse) Marshal() ([]byte, error) {
	return proto.Marshal(val)
}

// Unmarshal an object of type ResetStickyTaskQueueResponse from the protobuf v3 wire format
func (val *ResetStickyTaskQueueResponse) Unmarshal(buf []byte) error {
	return proto.Unmarshal(buf, val)
}

// Size returns the size of the object, in bytes, once serialized
func (val *ResetStickyTaskQueueResponse) Size() int {
	return proto.Size(val)
}

// Equal returns whether two ResetStickyTaskQueueResponse values are equivalent by recursively
// comparing the message's fields.
// For more information see the documentation for
// https://pkg.go.dev/google.golang.org/protobuf/proto#Equal
func (this *ResetStickyTaskQueueResponse) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	var that1 *ResetStickyTaskQueueResponse
	switch t := that.(type) {
	case *ResetStickyTaskQueueResponse:
		that1 = t
	case ResetStickyTaskQueueResponse:
		that1 = &t
	default:
		return false
	}

	return proto.Equal(this, that1)
}

// Marshal an object of type ShutdownWorkerRequest to the protobuf v3 wire format
func (val *ShutdownWorkerRequest) Marshal() ([]byte, error) {
	return proto.Marshal(val)
}

// Unmarshal an object of type ShutdownWorkerRequest from the protobuf v3 wire format
func (val *ShutdownWorkerRequest) Unmarshal(buf []byte) error {
	return proto.Unmarshal(buf, val)
}

// Size returns the size of the object, in bytes, once serialized
func (val *ShutdownWorkerRequest) Size() int {
	return proto.Size(val)
}

// Equal returns whether two ShutdownWorkerRequest values are equivalent by recursively
// comparing the message's fields.
// For more information see the documentation for
// https://pkg.go.dev/google.golang.org/protobuf/proto#Equal
func (this *ShutdownWorkerRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	var that1 *ShutdownWorkerRequest
	switch t := that.(type) {
	case *ShutdownWorkerRequest:
		that1 = t
	case ShutdownWorkerRequest:
		that1 = &t
	default:
		return false
	}

	return proto.Equal(this, that1)
}

// Marshal an object of type ShutdownWorkerResponse to the protobuf v3 wire format
func (val *ShutdownWorkerResponse) Marshal() ([]byte, error) {
	return proto.Marshal(val)
}

// Unmarshal an object of type ShutdownWorkerResponse from the protobuf v3 wire format
func (val *ShutdownWorkerResponse) Unmarshal(buf []byte) error {
	return proto.Unmarshal(buf, val)
}

// Size returns the size of the object, in bytes, once serialized
func (val *ShutdownWorkerResponse) Size() int {
	return proto.Size(val)
}

// Equal returns whether two ShutdownWorkerResponse values are equivalent by recursively
// comparing the message's fields.
// For more information see the documentation for
// https://pkg.go.dev/google.golang.org/protobuf/proto#Equal
func (this *ShutdownWorkerResponse) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	var that1 *ShutdownWorkerResponse
	switch t := that.(type) {
	case *ShutdownWorkerResponse:
		that1 = t
	case ShutdownWorkerResponse:
		that1 = &t
	default:
		return false
	}

	return proto.Equal(this, that1)
}

// Marshal an object of type QueryWorkflowRequest to the protobuf v3 wire format
func (val *QueryWorkflowRequest) Marshal() ([]byte, error) {
	return proto.Marshal(val)
}

// Unmarshal an object of type QueryWorkflowRequest from the protobuf v3 wire format
func (val *QueryWorkflowRequest) Unmarshal(buf []byte) error {
	return proto.Unmarshal(buf, val)
}

// Size returns the size of the object, in bytes, once serialized
func (val *QueryWorkflowRequest) Size() int {
	return proto.Size(val)
}

// Equal returns whether two QueryWorkflowRequest values are equivalent by recursively
// comparing the message's fields.
// For more information see the documentation for
// https://pkg.go.dev/google.golang.org/protobuf/proto#Equal
func (this *QueryWorkflowRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	var that1 *QueryWorkflowRequest
	switch t := that.(type) {
	case *QueryWorkflowRequest:
		that1 = t
	case QueryWorkflowRequest:
		that1 = &t
	default:
		return false
	}

	return proto.Equal(this, that1)
}

// Marshal an object of type QueryWorkflowResponse to the protobuf v3 wire format
func (val *QueryWorkflowResponse) Marshal() ([]byte, error) {
	return proto.Marshal(val)
}

// Unmarshal an object of type QueryWorkflowResponse from the protobuf v3 wire format
func (val *QueryWorkflowResponse) Unmarshal(buf []byte) error {
	return proto.Unmarshal(buf, val)
}

// Size returns the size of the object, in bytes, once serialized
func (val *QueryWorkflowResponse) Size() int {
	return proto.Size(val)
}

// Equal returns whether two QueryWorkflowResponse values are equivalent by recursively
// comparing the message's fields.
// For more information see the documentation for
// https://pkg.go.dev/google.golang.org/protobuf/proto#Equal
func (this *QueryWorkflowResponse) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	var that1 *QueryWorkflowResponse
	switch t := that.(type) {
	case *QueryWorkflowResponse:
		that1 = t
	case QueryWorkflowResponse:
		that1 = &t
	default:
		return false
	}

	return proto.Equal(this, that1)
}

// Marshal an object of type DescribeWorkflowExecutionRequest to the protobuf v3 wire format
func (val *DescribeWorkflowExecutionRequest) Marshal() ([]byte, error) {
	return proto.Marshal(val)
}

// Unmarshal an object of type DescribeWorkflowExecutionRequest from the protobuf v3 wire format
func (val *DescribeWorkflowExecutionRequest) Unmarshal(buf []byte) error {
	return proto.Unmarshal(buf, val)
}

// Size returns the size of the object, in bytes, once serialized
func (val *DescribeWorkflowExecutionRequest) Size() int {
	return proto.Size(val)
}

// Equal returns whether two DescribeWorkflowExecutionRequest values are equivalent by recursively
// comparing the message's fields.
// For more information see the documentation for
// https://pkg.go.dev/google.golang.org/protobuf/proto#Equal
func (this *DescribeWorkflowExecutionRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	var that1 *DescribeWorkflowExecutionRequest
	switch t := that.(type) {
	case *DescribeWorkflowExecutionRequest:
		that1 = t
	case DescribeWorkflowExecutionRequest:
		that1 = &t
	default:
		return false
	}

	return proto.Equal(this, that1)
}

// Marshal an object of type DescribeWorkflowExecutionResponse to the protobuf v3 wire format
func (val *DescribeWorkflowExecutionResponse) Marshal() ([]byte, error) {
	return proto.Marshal(val)
}

// Unmarshal an object of type DescribeWorkflowExecutionResponse from the protobuf v3 wire format
func (val *DescribeWorkflowExecutionResponse) Unmarshal(buf []byte) error {
	return proto.Unmarshal(buf, val)
}

// Size returns the size of the object, in bytes, once serialized
func (val *DescribeWorkflowExecutionResponse) Size() int {
	return proto.Size(val)
}

// Equal returns whether two DescribeWorkflowExecutionResponse values are equivalent by recursively
// comparing the message's fields.
// For more information see the documentation for
// https://pkg.go.dev/google.golang.org/protobuf/proto#Equal
func (this *DescribeWorkflowExecutionResponse) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	var that1 *DescribeWorkflowExecutionResponse
	switch t := that.(type) {
	case *DescribeWorkflowExecutionResponse:
		that1 = t
	case DescribeWorkflowExecutionResponse:
		that1 = &t
	default:
		return false
	}

	return proto.Equal(this, that1)
}

// Marshal an object of type DescribeTaskQueueRequest to the protobuf v3 wire format
func (val *DescribeTaskQueueRequest) Marshal() ([]byte, error) {
	return proto.Marshal(val)
}

// Unmarshal an object of type DescribeTaskQueueRequest from the protobuf v3 wire format
func (val *DescribeTaskQueueRequest) Unmarshal(buf []byte) error {
	return proto.Unmarshal(buf, val)
}

// Size returns the size of the object, in bytes, once serialized
func (val *DescribeTaskQueueRequest) Size() int {
	return proto.Size(val)
}

// Equal returns whether two DescribeTaskQueueRequest values are equivalent by recursively
// comparing the message's fields.
// For more information see the documentation for
// https://pkg.go.dev/google.golang.org/protobuf/proto#Equal
func (this *DescribeTaskQueueRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	var that1 *DescribeTaskQueueRequest
	switch t := that.(type) {
	case *DescribeTaskQueueRequest:
		that1 = t
	case DescribeTaskQueueRequest:
		that1 = &t
	default:
		return false
	}

	return proto.Equal(this, that1)
}

// Marshal an object of type DescribeTaskQueueResponse to the protobuf v3 wire format
func (val *DescribeTaskQueueResponse) Marshal() ([]byte, error) {
	return proto.Marshal(val)
}

// Unmarshal an object of type DescribeTaskQueueResponse from the protobuf v3 wire format
func (val *DescribeTaskQueueResponse) Unmarshal(buf []byte) error {
	return proto.Unmarshal(buf, val)
}

// Size returns the size of the object, in bytes, once serialized
func (val *DescribeTaskQueueResponse) Size() int {
	return proto.Size(val)
}

// Equal returns whether two DescribeTaskQueueResponse values are equivalent by recursively
// comparing the message's fields.
// For more information see the documentation for
// https://pkg.go.dev/google.golang.org/protobuf/proto#Equal
func (this *DescribeTaskQueueResponse) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	var that1 *DescribeTaskQueueResponse
	switch t := that.(type) {
	case *DescribeTaskQueueResponse:
		that1 = t
	case DescribeTaskQueueResponse:
		that1 = &t
	default:
		return false
	}

	return proto.Equal(this, that1)
}

// Marshal an object of type GetClusterInfoRequest to the protobuf v3 wire format
func (val *GetClusterInfoRequest) Marshal() ([]byte, error) {
	return proto.Marshal(val)
}

// Unmarshal an object of type GetClusterInfoRequest from the protobuf v3 wire format
func (val *GetClusterInfoRequest) Unmarshal(buf []byte) error {
	return proto.Unmarshal(buf, val)
}

// Size returns the size of the object, in bytes, once serialized
func (val *GetClusterInfoRequest) Size() int {
	return proto.Size(val)
}

// Equal returns whether two GetClusterInfoRequest values are equivalent by recursively
// comparing the message's fields.
// For more information see the documentation for
// https://pkg.go.dev/google.golang.org/protobuf/proto#Equal
func (this *GetClusterInfoRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	var that1 *GetClusterInfoRequest
	switch t := that.(type) {
	case *GetClusterInfoRequest:
		that1 = t
	case GetClusterInfoRequest:
		that1 = &t
	default:
		return false
	}

	return proto.Equal(this, that1)
}

// Marshal an object of type GetClusterInfoResponse to the protobuf v3 wire format
func (val *GetClusterInfoResponse) Marshal() ([]byte, error) {
	return proto.Marshal(val)
}

// Unmarshal an object of type GetClusterInfoResponse from the protobuf v3 wire format
func (val *GetClusterInfoResponse) Unmarshal(buf []byte) error {
	return proto.Unmarshal(buf, val)
}

// Size returns the size of the object, in bytes, once serialized
func (val *GetClusterInfoResponse) Size() int {
	return proto.Size(val)
}

// Equal returns whether two GetClusterInfoResponse values are equivalent by recursively
// comparing the message's fields.
// For more information see the documentation for
// https://pkg.go.dev/google.golang.org/protobuf/proto#Equal
func (this *GetClusterInfoResponse) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	var that1 *GetClusterInfoResponse
	switch t := that.(type) {
	case *GetClusterInfoResponse:
		that1 = t
	case GetClusterInfoResponse:
		that1 = &t
	default:
		return false
	}

	return proto.Equal(this, that1)
}

// Marshal an object of type GetSystemInfoRequest to the protobuf v3 wire format
func (val *GetSystemInfoRequest) Marshal() ([]byte, error) {
	return proto.Marshal(val)
}

// Unmarshal an object of type GetSystemInfoRequest from the protobuf v3 wire format
func (val *GetSystemInfoRequest) Unmarshal(buf []byte) error {
	return proto.Unmarshal(buf, val)
}

// Size returns the size of the object, in bytes, once serialized
func (val *GetSystemInfoRequest) Size() int {
	return proto.Size(val)
}

// Equal returns whether two GetSystemInfoRequest values are equivalent by recursively
// comparing the message's fields.
// For more information see the documentation for
// https://pkg.go.dev/google.golang.org/protobuf/proto#Equal
func (this *GetSystemInfoRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	var that1 *GetSystemInfoRequest
	switch t := that.(type) {
	case *GetSystemInfoRequest:
		that1 = t
	case GetSystemInfoRequest:
		that1 = &t
	default:
		return false
	}

	return proto.Equal(this, that1)
}

// Marshal an object of type GetSystemInfoResponse to the protobuf v3 wire format
func (val *GetSystemInfoResponse) Marshal() ([]byte, error) {
	return proto.Marshal(val)
}

// Unmarshal an object of type GetSystemInfoResponse from the protobuf v3 wire format
func (val *GetSystemInfoResponse) Unmarshal(buf []byte) error {
	return proto.Unmarshal(buf, val)
}

// Size returns the size of the object, in bytes, once serialized
func (val *GetSystemInfoResponse) Size() int {
	return proto.Size(val)
}

// Equal returns whether two GetSystemInfoResponse values are equivalent by recursively
// comparing the message's fields.
// For more information see the documentation for
// https://pkg.go.dev/google.golang.org/protobuf/proto#Equal
func (this *GetSystemInfoResponse) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	var that1 *GetSystemInfoResponse
	switch t := that.(type) {
	case *GetSystemInfoResponse:
		that1 = t
	case GetSystemInfoResponse:
		that1 = &t
	default:
		return false
	}

	return proto.Equal(this, that1)
}

// Marshal an object of type ListTaskQueuePartitionsRequest to the protobuf v3 wire format
func (val *ListTaskQueuePartitionsRequest) Marshal() ([]byte, error) {
	return proto.Marshal(val)
}

// Unmarshal an object of type ListTaskQueuePartitionsRequest from the protobuf v3 wire format
func (val *ListTaskQueuePartitionsRequest) Unmarshal(buf []byte) error {
	return proto.Unmarshal(buf, val)
}

// Size returns the size of the object, in bytes, once serialized
func (val *ListTaskQueuePartitionsRequest) Size() int {
	return proto.Size(val)
}

// Equal returns whether two ListTaskQueuePartitionsRequest values are equivalent by recursively
// comparing the message's fields.
// For more information see the documentation for
// https://pkg.go.dev/google.golang.org/protobuf/proto#Equal
func (this *ListTaskQueuePartitionsRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	var that1 *ListTaskQueuePartitionsRequest
	switch t := that.(type) {
	case *ListTaskQueuePartitionsRequest:
		that1 = t
	case ListTaskQueuePartitionsRequest:
		that1 = &t
	default:
		return false
	}

	return proto.Equal(this, that1)
}

// Marshal an object of type ListTaskQueuePartitionsResponse to the protobuf v3 wire format
func (val *ListTaskQueuePartitionsResponse) Marshal() ([]byte, error) {
	return proto.Marshal(val)
}

// Unmarshal an object of type ListTaskQueuePartitionsResponse from the protobuf v3 wire format
func (val *ListTaskQueuePartitionsResponse) Unmarshal(buf []byte) error {
	return proto.Unmarshal(buf, val)
}

// Size returns the size of the object, in bytes, once serialized
func (val *ListTaskQueuePartitionsResponse) Size() int {
	return proto.Size(val)
}

// Equal returns whether two ListTaskQueuePartitionsResponse values are equivalent by recursively
// comparing the message's fields.
// For more information see the documentation for
// https://pkg.go.dev/google.golang.org/protobuf/proto#Equal
func (this *ListTaskQueuePartitionsResponse) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	var that1 *ListTaskQueuePartitionsResponse
	switch t := that.(type) {
	case *ListTaskQueuePartitionsResponse:
		that1 = t
	case ListTaskQueuePartitionsResponse:
		that1 = &t
	default:
		return false
	}

	return proto.Equal(this, that1)
}

// Marshal an object of type CreateScheduleRequest to the protobuf v3 wire format
func (val *CreateScheduleRequest) Marshal() ([]byte, error) {
	return proto.Marshal(val)
}

// Unmarshal an object of type CreateScheduleRequest from the protobuf v3 wire format
func (val *CreateScheduleRequest) Unmarshal(buf []byte) error {
	return proto.Unmarshal(buf, val)
}

// Size returns the size of the object, in bytes, once serialized
func (val *CreateScheduleRequest) Size() int {
	return proto.Size(val)
}

// Equal returns whether two CreateScheduleRequest values are equivalent by recursively
// comparing the message's fields.
// For more information see the documentation for
// https://pkg.go.dev/google.golang.org/protobuf/proto#Equal
func (this *CreateScheduleRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	var that1 *CreateScheduleRequest
	switch t := that.(type) {
	case *CreateScheduleRequest:
		that1 = t
	case CreateScheduleRequest:
		that1 = &t
	default:
		return false
	}

	return proto.Equal(this, that1)
}

// Marshal an object of type CreateScheduleResponse to the protobuf v3 wire format
func (val *CreateScheduleResponse) Marshal() ([]byte, error) {
	return proto.Marshal(val)
}

// Unmarshal an object of type CreateScheduleResponse from the protobuf v3 wire format
func (val *CreateScheduleResponse) Unmarshal(buf []byte) error {
	return proto.Unmarshal(buf, val)
}

// Size returns the size of the object, in bytes, once serialized
func (val *CreateScheduleResponse) Size() int {
	return proto.Size(val)
}

// Equal returns whether two CreateScheduleResponse values are equivalent by recursively
// comparing the message's fields.
// For more information see the documentation for
// https://pkg.go.dev/google.golang.org/protobuf/proto#Equal
func (this *CreateScheduleResponse) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	var that1 *CreateScheduleResponse
	switch t := that.(type) {
	case *CreateScheduleResponse:
		that1 = t
	case CreateScheduleResponse:
		that1 = &t
	default:
		return false
	}

	return proto.Equal(this, that1)
}

// Marshal an object of type DescribeScheduleRequest to the protobuf v3 wire format
func (val *DescribeScheduleRequest) Marshal() ([]byte, error) {
	return proto.Marshal(val)
}

// Unmarshal an object of type DescribeScheduleRequest from the protobuf v3 wire format
func (val *DescribeScheduleRequest) Unmarshal(buf []byte) error {
	return proto.Unmarshal(buf, val)
}

// Size returns the size of the object, in bytes, once serialized
func (val *DescribeScheduleRequest) Size() int {
	return proto.Size(val)
}

// Equal returns whether two DescribeScheduleRequest values are equivalent by recursively
// comparing the message's fields.
// For more information see the documentation for
// https://pkg.go.dev/google.golang.org/protobuf/proto#Equal
func (this *DescribeScheduleRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	var that1 *DescribeScheduleRequest
	switch t := that.(type) {
	case *DescribeScheduleRequest:
		that1 = t
	case DescribeScheduleRequest:
		that1 = &t
	default:
		return false
	}

	return proto.Equal(this, that1)
}

// Marshal an object of type DescribeScheduleResponse to the protobuf v3 wire format
func (val *DescribeScheduleResponse) Marshal() ([]byte, error) {
	return proto.Marshal(val)
}

// Unmarshal an object of type DescribeScheduleResponse from the protobuf v3 wire format
func (val *DescribeScheduleResponse) Unmarshal(buf []byte) error {
	return proto.Unmarshal(buf, val)
}

// Size returns the size of the object, in bytes, once serialized
func (val *DescribeScheduleResponse) Size() int {
	return proto.Size(val)
}

// Equal returns whether two DescribeScheduleResponse values are equivalent by recursively
// comparing the message's fields.
// For more information see the documentation for
// https://pkg.go.dev/google.golang.org/protobuf/proto#Equal
func (this *DescribeScheduleResponse) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	var that1 *DescribeScheduleResponse
	switch t := that.(type) {
	case *DescribeScheduleResponse:
		that1 = t
	case DescribeScheduleResponse:
		that1 = &t
	default:
		return false
	}

	return proto.Equal(this, that1)
}

// Marshal an object of type UpdateScheduleRequest to the protobuf v3 wire format
func (val *UpdateScheduleRequest) Marshal() ([]byte, error) {
	return proto.Marshal(val)
}

// Unmarshal an object of type UpdateScheduleRequest from the protobuf v3 wire format
func (val *UpdateScheduleRequest) Unmarshal(buf []byte) error {
	return proto.Unmarshal(buf, val)
}

// Size returns the size of the object, in bytes, once serialized
func (val *UpdateScheduleRequest) Size() int {
	return proto.Size(val)
}

// Equal returns whether two UpdateScheduleRequest values are equivalent by recursively
// comparing the message's fields.
// For more information see the documentation for
// https://pkg.go.dev/google.golang.org/protobuf/proto#Equal
func (this *UpdateScheduleRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	var that1 *UpdateScheduleRequest
	switch t := that.(type) {
	case *UpdateScheduleRequest:
		that1 = t
	case UpdateScheduleRequest:
		that1 = &t
	default:
		return false
	}

	return proto.Equal(this, that1)
}

// Marshal an object of type UpdateScheduleResponse to the protobuf v3 wire format
func (val *UpdateScheduleResponse) Marshal() ([]byte, error) {
	return proto.Marshal(val)
}

// Unmarshal an object of type UpdateScheduleResponse from the protobuf v3 wire format
func (val *UpdateScheduleResponse) Unmarshal(buf []byte) error {
	return proto.Unmarshal(buf, val)
}

// Size returns the size of the object, in bytes, once serialized
func (val *UpdateScheduleResponse) Size() int {
	return proto.Size(val)
}

// Equal returns whether two UpdateScheduleResponse values are equivalent by recursively
// comparing the message's fields.
// For more information see the documentation for
// https://pkg.go.dev/google.golang.org/protobuf/proto#Equal
func (this *UpdateScheduleResponse) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	var that1 *UpdateScheduleResponse
	switch t := that.(type) {
	case *UpdateScheduleResponse:
		that1 = t
	case UpdateScheduleResponse:
		that1 = &t
	default:
		return false
	}

	return proto.Equal(this, that1)
}

// Marshal an object of type PatchScheduleRequest to the protobuf v3 wire format
func (val *PatchScheduleRequest) Marshal() ([]byte, error) {
	return proto.Marshal(val)
}

// Unmarshal an object of type PatchScheduleRequest from the protobuf v3 wire format
func (val *PatchScheduleRequest) Unmarshal(buf []byte) error {
	return proto.Unmarshal(buf, val)
}

// Size returns the size of the object, in bytes, once serialized
func (val *PatchScheduleRequest) Size() int {
	return proto.Size(val)
}

// Equal returns whether two PatchScheduleRequest values are equivalent by recursively
// comparing the message's fields.
// For more information see the documentation for
// https://pkg.go.dev/google.golang.org/protobuf/proto#Equal
func (this *PatchScheduleRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	var that1 *PatchScheduleRequest
	switch t := that.(type) {
	case *PatchScheduleRequest:
		that1 = t
	case PatchScheduleRequest:
		that1 = &t
	default:
		return false
	}

	return proto.Equal(this, that1)
}

// Marshal an object of type PatchScheduleResponse to the protobuf v3 wire format
func (val *PatchScheduleResponse) Marshal() ([]byte, error) {
	return proto.Marshal(val)
}

// Unmarshal an object of type PatchScheduleResponse from the protobuf v3 wire format
func (val *PatchScheduleResponse) Unmarshal(buf []byte) error {
	return proto.Unmarshal(buf, val)
}

// Size returns the size of the object, in bytes, once serialized
func (val *PatchScheduleResponse) Size() int {
	return proto.Size(val)
}

// Equal returns whether two PatchScheduleResponse values are equivalent by recursively
// comparing the message's fields.
// For more information see the documentation for
// https://pkg.go.dev/google.golang.org/protobuf/proto#Equal
func (this *PatchScheduleResponse) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	var that1 *PatchScheduleResponse
	switch t := that.(type) {
	case *PatchScheduleResponse:
		that1 = t
	case PatchScheduleResponse:
		that1 = &t
	default:
		return false
	}

	return proto.Equal(this, that1)
}

// Marshal an object of type ListScheduleMatchingTimesRequest to the protobuf v3 wire format
func (val *ListScheduleMatchingTimesRequest) Marshal() ([]byte, error) {
	return proto.Marshal(val)
}

// Unmarshal an object of type ListScheduleMatchingTimesRequest from the protobuf v3 wire format
func (val *ListScheduleMatchingTimesRequest) Unmarshal(buf []byte) error {
	return proto.Unmarshal(buf, val)
}

// Size returns the size of the object, in bytes, once serialized
func (val *ListScheduleMatchingTimesRequest) Size() int {
	return proto.Size(val)
}

// Equal returns whether two ListScheduleMatchingTimesRequest values are equivalent by recursively
// comparing the message's fields.
// For more information see the documentation for
// https://pkg.go.dev/google.golang.org/protobuf/proto#Equal
func (this *ListScheduleMatchingTimesRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	var that1 *ListScheduleMatchingTimesRequest
	switch t := that.(type) {
	case *ListScheduleMatchingTimesRequest:
		that1 = t
	case ListScheduleMatchingTimesRequest:
		that1 = &t
	default:
		return false
	}

	return proto.Equal(this, that1)
}

// Marshal an object of type ListScheduleMatchingTimesResponse to the protobuf v3 wire format
func (val *ListScheduleMatchingTimesResponse) Marshal() ([]byte, error) {
	return proto.Marshal(val)
}

// Unmarshal an object of type ListScheduleMatchingTimesResponse from the protobuf v3 wire format
func (val *ListScheduleMatchingTimesResponse) Unmarshal(buf []byte) error {
	return proto.Unmarshal(buf, val)
}

// Size returns the size of the object, in bytes, once serialized
func (val *ListScheduleMatchingTimesResponse) Size() int {
	return proto.Size(val)
}

// Equal returns whether two ListScheduleMatchingTimesResponse values are equivalent by recursively
// comparing the message's fields.
// For more information see the documentation for
// https://pkg.go.dev/google.golang.org/protobuf/proto#Equal
func (this *ListScheduleMatchingTimesResponse) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	var that1 *ListScheduleMatchingTimesResponse
	switch t := that.(type) {
	case *ListScheduleMatchingTimesResponse:
		that1 = t
	case ListScheduleMatchingTimesResponse:
		that1 = &t
	default:
		return false
	}

	return proto.Equal(this, that1)
}

// Marshal an object of type DeleteScheduleRequest to the protobuf v3 wire format
func (val *DeleteScheduleRequest) Marshal() ([]byte, error) {
	return proto.Marshal(val)
}

// Unmarshal an object of type DeleteScheduleRequest from the protobuf v3 wire format
func (val *DeleteScheduleRequest) Unmarshal(buf []byte) error {
	return proto.Unmarshal(buf, val)
}

// Size returns the size of the object, in bytes, once serialized
func (val *DeleteScheduleRequest) Size() int {
	return proto.Size(val)
}

// Equal returns whether two DeleteScheduleRequest values are equivalent by recursively
// comparing the message's fields.
// For more information see the documentation for
// https://pkg.go.dev/google.golang.org/protobuf/proto#Equal
func (this *DeleteScheduleRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	var that1 *DeleteScheduleRequest
	switch t := that.(type) {
	case *DeleteScheduleRequest:
		that1 = t
	case DeleteScheduleRequest:
		that1 = &t
	default:
		return false
	}

	return proto.Equal(this, that1)
}

// Marshal an object of type DeleteScheduleResponse to the protobuf v3 wire format
func (val *DeleteScheduleResponse) Marshal() ([]byte, error) {
	return proto.Marshal(val)
}

// Unmarshal an object of type DeleteScheduleResponse from the protobuf v3 wire format
func (val *DeleteScheduleResponse) Unmarshal(buf []byte) error {
	return proto.Unmarshal(buf, val)
}

// Size returns the size of the object, in bytes, once serialized
func (val *DeleteScheduleResponse) Size() int {
	return proto.Size(val)
}

// Equal returns whether two DeleteScheduleResponse values are equivalent by recursively
// comparing the message's fields.
// For more information see the documentation for
// https://pkg.go.dev/google.golang.org/protobuf/proto#Equal
func (this *DeleteScheduleResponse) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	var that1 *DeleteScheduleResponse
	switch t := that.(type) {
	case *DeleteScheduleResponse:
		that1 = t
	case DeleteScheduleResponse:
		that1 = &t
	default:
		return false
	}

	return proto.Equal(this, that1)
}

// Marshal an object of type ListSchedulesRequest to the protobuf v3 wire format
func (val *ListSchedulesRequest) Marshal() ([]byte, error) {
	return proto.Marshal(val)
}

// Unmarshal an object of type ListSchedulesRequest from the protobuf v3 wire format
func (val *ListSchedulesRequest) Unmarshal(buf []byte) error {
	return proto.Unmarshal(buf, val)
}

// Size returns the size of the object, in bytes, once serialized
func (val *ListSchedulesRequest) Size() int {
	return proto.Size(val)
}

// Equal returns whether two ListSchedulesRequest values are equivalent by recursively
// comparing the message's fields.
// For more information see the documentation for
// https://pkg.go.dev/google.golang.org/protobuf/proto#Equal
func (this *ListSchedulesRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	var that1 *ListSchedulesRequest
	switch t := that.(type) {
	case *ListSchedulesRequest:
		that1 = t
	case ListSchedulesRequest:
		that1 = &t
	default:
		return false
	}

	return proto.Equal(this, that1)
}

// Marshal an object of type ListSchedulesResponse to the protobuf v3 wire format
func (val *ListSchedulesResponse) Marshal() ([]byte, error) {
	return proto.Marshal(val)
}

// Unmarshal an object of type ListSchedulesResponse from the protobuf v3 wire format
func (val *ListSchedulesResponse) Unmarshal(buf []byte) error {
	return proto.Unmarshal(buf, val)
}

// Size returns the size of the object, in bytes, once serialized
func (val *ListSchedulesResponse) Size() int {
	return proto.Size(val)
}

// Equal returns whether two ListSchedulesResponse values are equivalent by recursively
// comparing the message's fields.
// For more information see the documentation for
// https://pkg.go.dev/google.golang.org/protobuf/proto#Equal
func (this *ListSchedulesResponse) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	var that1 *ListSchedulesResponse
	switch t := that.(type) {
	case *ListSchedulesResponse:
		that1 = t
	case ListSchedulesResponse:
		that1 = &t
	default:
		return false
	}

	return proto.Equal(this, that1)
}

// Marshal an object of type UpdateWorkerBuildIdCompatibilityRequest to the protobuf v3 wire format
func (val *UpdateWorkerBuildIdCompatibilityRequest) Marshal() ([]byte, error) {
	return proto.Marshal(val)
}

// Unmarshal an object of type UpdateWorkerBuildIdCompatibilityRequest from the protobuf v3 wire format
func (val *UpdateWorkerBuildIdCompatibilityRequest) Unmarshal(buf []byte) error {
	return proto.Unmarshal(buf, val)
}

// Size returns the size of the object, in bytes, once serialized
func (val *UpdateWorkerBuildIdCompatibilityRequest) Size() int {
	return proto.Size(val)
}

// Equal returns whether two UpdateWorkerBuildIdCompatibilityRequest values are equivalent by recursively
// comparing the message's fields.
// For more information see the documentation for
// https://pkg.go.dev/google.golang.org/protobuf/proto#Equal
func (this *UpdateWorkerBuildIdCompatibilityRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	var that1 *UpdateWorkerBuildIdCompatibilityRequest
	switch t := that.(type) {
	case *UpdateWorkerBuildIdCompatibilityRequest:
		that1 = t
	case UpdateWorkerBuildIdCompatibilityRequest:
		that1 = &t
	default:
		return false
	}

	return proto.Equal(this, that1)
}

// Marshal an object of type UpdateWorkerBuildIdCompatibilityResponse to the protobuf v3 wire format
func (val *UpdateWorkerBuildIdCompatibilityResponse) Marshal() ([]byte, error) {
	return proto.Marshal(val)
}

// Unmarshal an object of type UpdateWorkerBuildIdCompatibilityResponse from the protobuf v3 wire format
func (val *UpdateWorkerBuildIdCompatibilityResponse) Unmarshal(buf []byte) error {
	return proto.Unmarshal(buf, val)
}

// Size returns the size of the object, in bytes, once serialized
func (val *UpdateWorkerBuildIdCompatibilityResponse) Size() int {
	return proto.Size(val)
}

// Equal returns whether two UpdateWorkerBuildIdCompatibilityResponse values are equivalent by recursively
// comparing the message's fields.
// For more information see the documentation for
// https://pkg.go.dev/google.golang.org/protobuf/proto#Equal
func (this *UpdateWorkerBuildIdCompatibilityResponse) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	var that1 *UpdateWorkerBuildIdCompatibilityResponse
	switch t := that.(type) {
	case *UpdateWorkerBuildIdCompatibilityResponse:
		that1 = t
	case UpdateWorkerBuildIdCompatibilityResponse:
		that1 = &t
	default:
		return false
	}

	return proto.Equal(this, that1)
}

// Marshal an object of type GetWorkerBuildIdCompatibilityRequest to the protobuf v3 wire format
func (val *GetWorkerBuildIdCompatibilityRequest) Marshal() ([]byte, error) {
	return proto.Marshal(val)
}

// Unmarshal an object of type GetWorkerBuildIdCompatibilityRequest from the protobuf v3 wire format
func (val *GetWorkerBuildIdCompatibilityRequest) Unmarshal(buf []byte) error {
	return proto.Unmarshal(buf, val)
}

// Size returns the size of the object, in bytes, once serialized
func (val *GetWorkerBuildIdCompatibilityRequest) Size() int {
	return proto.Size(val)
}

// Equal returns whether two GetWorkerBuildIdCompatibilityRequest values are equivalent by recursively
// comparing the message's fields.
// For more information see the documentation for
// https://pkg.go.dev/google.golang.org/protobuf/proto#Equal
func (this *GetWorkerBuildIdCompatibilityRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	var that1 *GetWorkerBuildIdCompatibilityRequest
	switch t := that.(type) {
	case *GetWorkerBuildIdCompatibilityRequest:
		that1 = t
	case GetWorkerBuildIdCompatibilityRequest:
		that1 = &t
	default:
		return false
	}

	return proto.Equal(this, that1)
}

// Marshal an object of type GetWorkerBuildIdCompatibilityResponse to the protobuf v3 wire format
func (val *GetWorkerBuildIdCompatibilityResponse) Marshal() ([]byte, error) {
	return proto.Marshal(val)
}

// Unmarshal an object of type GetWorkerBuildIdCompatibilityResponse from the protobuf v3 wire format
func (val *GetWorkerBuildIdCompatibilityResponse) Unmarshal(buf []byte) error {
	return proto.Unmarshal(buf, val)
}

// Size returns the size of the object, in bytes, once serialized
func (val *GetWorkerBuildIdCompatibilityResponse) Size() int {
	return proto.Size(val)
}

// Equal returns whether two GetWorkerBuildIdCompatibilityResponse values are equivalent by recursively
// comparing the message's fields.
// For more information see the documentation for
// https://pkg.go.dev/google.golang.org/protobuf/proto#Equal
func (this *GetWorkerBuildIdCompatibilityResponse) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	var that1 *GetWorkerBuildIdCompatibilityResponse
	switch t := that.(type) {
	case *GetWorkerBuildIdCompatibilityResponse:
		that1 = t
	case GetWorkerBuildIdCompatibilityResponse:
		that1 = &t
	default:
		return false
	}

	return proto.Equal(this, that1)
}

// Marshal an object of type UpdateWorkerVersioningRulesRequest to the protobuf v3 wire format
func (val *UpdateWorkerVersioningRulesRequest) Marshal() ([]byte, error) {
	return proto.Marshal(val)
}

// Unmarshal an object of type UpdateWorkerVersioningRulesRequest from the protobuf v3 wire format
func (val *UpdateWorkerVersioningRulesRequest) Unmarshal(buf []byte) error {
	return proto.Unmarshal(buf, val)
}

// Size returns the size of the object, in bytes, once serialized
func (val *UpdateWorkerVersioningRulesRequest) Size() int {
	return proto.Size(val)
}

// Equal returns whether two UpdateWorkerVersioningRulesRequest values are equivalent by recursively
// comparing the message's fields.
// For more information see the documentation for
// https://pkg.go.dev/google.golang.org/protobuf/proto#Equal
func (this *UpdateWorkerVersioningRulesRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	var that1 *UpdateWorkerVersioningRulesRequest
	switch t := that.(type) {
	case *UpdateWorkerVersioningRulesRequest:
		that1 = t
	case UpdateWorkerVersioningRulesRequest:
		that1 = &t
	default:
		return false
	}

	return proto.Equal(this, that1)
}

// Marshal an object of type UpdateWorkerVersioningRulesResponse to the protobuf v3 wire format
func (val *UpdateWorkerVersioningRulesResponse) Marshal() ([]byte, error) {
	return proto.Marshal(val)
}

// Unmarshal an object of type UpdateWorkerVersioningRulesResponse from the protobuf v3 wire format
func (val *UpdateWorkerVersioningRulesResponse) Unmarshal(buf []byte) error {
	return proto.Unmarshal(buf, val)
}

// Size returns the size of the object, in bytes, once serialized
func (val *UpdateWorkerVersioningRulesResponse) Size() int {
	return proto.Size(val)
}

// Equal returns whether two UpdateWorkerVersioningRulesResponse values are equivalent by recursively
// comparing the message's fields.
// For more information see the documentation for
// https://pkg.go.dev/google.golang.org/protobuf/proto#Equal
func (this *UpdateWorkerVersioningRulesResponse) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	var that1 *UpdateWorkerVersioningRulesResponse
	switch t := that.(type) {
	case *UpdateWorkerVersioningRulesResponse:
		that1 = t
	case UpdateWorkerVersioningRulesResponse:
		that1 = &t
	default:
		return false
	}

	return proto.Equal(this, that1)
}

// Marshal an object of type GetWorkerVersioningRulesRequest to the protobuf v3 wire format
func (val *GetWorkerVersioningRulesRequest) Marshal() ([]byte, error) {
	return proto.Marshal(val)
}

// Unmarshal an object of type GetWorkerVersioningRulesRequest from the protobuf v3 wire format
func (val *GetWorkerVersioningRulesRequest) Unmarshal(buf []byte) error {
	return proto.Unmarshal(buf, val)
}

// Size returns the size of the object, in bytes, once serialized
func (val *GetWorkerVersioningRulesRequest) Size() int {
	return proto.Size(val)
}

// Equal returns whether two GetWorkerVersioningRulesRequest values are equivalent by recursively
// comparing the message's fields.
// For more information see the documentation for
// https://pkg.go.dev/google.golang.org/protobuf/proto#Equal
func (this *GetWorkerVersioningRulesRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	var that1 *GetWorkerVersioningRulesRequest
	switch t := that.(type) {
	case *GetWorkerVersioningRulesRequest:
		that1 = t
	case GetWorkerVersioningRulesRequest:
		that1 = &t
	default:
		return false
	}

	return proto.Equal(this, that1)
}

// Marshal an object of type GetWorkerVersioningRulesResponse to the protobuf v3 wire format
func (val *GetWorkerVersioningRulesResponse) Marshal() ([]byte, error) {
	return proto.Marshal(val)
}

// Unmarshal an object of type GetWorkerVersioningRulesResponse from the protobuf v3 wire format
func (val *GetWorkerVersioningRulesResponse) Unmarshal(buf []byte) error {
	return proto.Unmarshal(buf, val)
}

// Size returns the size of the object, in bytes, once serialized
func (val *GetWorkerVersioningRulesResponse) Size() int {
	return proto.Size(val)
}

// Equal returns whether two GetWorkerVersioningRulesResponse values are equivalent by recursively
// comparing the message's fields.
// For more information see the documentation for
// https://pkg.go.dev/google.golang.org/protobuf/proto#Equal
func (this *GetWorkerVersioningRulesResponse) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	var that1 *GetWorkerVersioningRulesResponse
	switch t := that.(type) {
	case *GetWorkerVersioningRulesResponse:
		that1 = t
	case GetWorkerVersioningRulesResponse:
		that1 = &t
	default:
		return false
	}

	return proto.Equal(this, that1)
}

// Marshal an object of type GetWorkerTaskReachabilityRequest to the protobuf v3 wire format
func (val *GetWorkerTaskReachabilityRequest) Marshal() ([]byte, error) {
	return proto.Marshal(val)
}

// Unmarshal an object of type GetWorkerTaskReachabilityRequest from the protobuf v3 wire format
func (val *GetWorkerTaskReachabilityRequest) Unmarshal(buf []byte) error {
	return proto.Unmarshal(buf, val)
}

// Size returns the size of the object, in bytes, once serialized
func (val *GetWorkerTaskReachabilityRequest) Size() int {
	return proto.Size(val)
}

// Equal returns whether two GetWorkerTaskReachabilityRequest values are equivalent by recursively
// comparing the message's fields.
// For more information see the documentation for
// https://pkg.go.dev/google.golang.org/protobuf/proto#Equal
func (this *GetWorkerTaskReachabilityRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	var that1 *GetWorkerTaskReachabilityRequest
	switch t := that.(type) {
	case *GetWorkerTaskReachabilityRequest:
		that1 = t
	case GetWorkerTaskReachabilityRequest:
		that1 = &t
	default:
		return false
	}

	return proto.Equal(this, that1)
}

// Marshal an object of type GetWorkerTaskReachabilityResponse to the protobuf v3 wire format
func (val *GetWorkerTaskReachabilityResponse) Marshal() ([]byte, error) {
	return proto.Marshal(val)
}

// Unmarshal an object of type GetWorkerTaskReachabilityResponse from the protobuf v3 wire format
func (val *GetWorkerTaskReachabilityResponse) Unmarshal(buf []byte) error {
	return proto.Unmarshal(buf, val)
}

// Size returns the size of the object, in bytes, once serialized
func (val *GetWorkerTaskReachabilityResponse) Size() int {
	return proto.Size(val)
}

// Equal returns whether two GetWorkerTaskReachabilityResponse values are equivalent by recursively
// comparing the message's fields.
// For more information see the documentation for
// https://pkg.go.dev/google.golang.org/protobuf/proto#Equal
func (this *GetWorkerTaskReachabilityResponse) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	var that1 *GetWorkerTaskReachabilityResponse
	switch t := that.(type) {
	case *GetWorkerTaskReachabilityResponse:
		that1 = t
	case GetWorkerTaskReachabilityResponse:
		that1 = &t
	default:
		return false
	}

	return proto.Equal(this, that1)
}

// Marshal an object of type UpdateWorkflowExecutionRequest to the protobuf v3 wire format
func (val *UpdateWorkflowExecutionRequest) Marshal() ([]byte, error) {
	return proto.Marshal(val)
}

// Unmarshal an object of type UpdateWorkflowExecutionRequest from the protobuf v3 wire format
func (val *UpdateWorkflowExecutionRequest) Unmarshal(buf []byte) error {
	return proto.Unmarshal(buf, val)
}

// Size returns the size of the object, in bytes, once serialized
func (val *UpdateWorkflowExecutionRequest) Size() int {
	return proto.Size(val)
}

// Equal returns whether two UpdateWorkflowExecutionRequest values are equivalent by recursively
// comparing the message's fields.
// For more information see the documentation for
// https://pkg.go.dev/google.golang.org/protobuf/proto#Equal
func (this *UpdateWorkflowExecutionRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	var that1 *UpdateWorkflowExecutionRequest
	switch t := that.(type) {
	case *UpdateWorkflowExecutionRequest:
		that1 = t
	case UpdateWorkflowExecutionRequest:
		that1 = &t
	default:
		return false
	}

	return proto.Equal(this, that1)
}

// Marshal an object of type UpdateWorkflowExecutionResponse to the protobuf v3 wire format
func (val *UpdateWorkflowExecutionResponse) Marshal() ([]byte, error) {
	return proto.Marshal(val)
}

// Unmarshal an object of type UpdateWorkflowExecutionResponse from the protobuf v3 wire format
func (val *UpdateWorkflowExecutionResponse) Unmarshal(buf []byte) error {
	return proto.Unmarshal(buf, val)
}

// Size returns the size of the object, in bytes, once serialized
func (val *UpdateWorkflowExecutionResponse) Size() int {
	return proto.Size(val)
}

// Equal returns whether two UpdateWorkflowExecutionResponse values are equivalent by recursively
// comparing the message's fields.
// For more information see the documentation for
// https://pkg.go.dev/google.golang.org/protobuf/proto#Equal
func (this *UpdateWorkflowExecutionResponse) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	var that1 *UpdateWorkflowExecutionResponse
	switch t := that.(type) {
	case *UpdateWorkflowExecutionResponse:
		that1 = t
	case UpdateWorkflowExecutionResponse:
		that1 = &t
	default:
		return false
	}

	return proto.Equal(this, that1)
}

// Marshal an object of type StartBatchOperationRequest to the protobuf v3 wire format
func (val *StartBatchOperationRequest) Marshal() ([]byte, error) {
	return proto.Marshal(val)
}

// Unmarshal an object of type StartBatchOperationRequest from the protobuf v3 wire format
func (val *StartBatchOperationRequest) Unmarshal(buf []byte) error {
	return proto.Unmarshal(buf, val)
}

// Size returns the size of the object, in bytes, once serialized
func (val *StartBatchOperationRequest) Size() int {
	return proto.Size(val)
}

// Equal returns whether two StartBatchOperationRequest values are equivalent by recursively
// comparing the message's fields.
// For more information see the documentation for
// https://pkg.go.dev/google.golang.org/protobuf/proto#Equal
func (this *StartBatchOperationRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	var that1 *StartBatchOperationRequest
	switch t := that.(type) {
	case *StartBatchOperationRequest:
		that1 = t
	case StartBatchOperationRequest:
		that1 = &t
	default:
		return false
	}

	return proto.Equal(this, that1)
}

// Marshal an object of type StartBatchOperationResponse to the protobuf v3 wire format
func (val *StartBatchOperationResponse) Marshal() ([]byte, error) {
	return proto.Marshal(val)
}

// Unmarshal an object of type StartBatchOperationResponse from the protobuf v3 wire format
func (val *StartBatchOperationResponse) Unmarshal(buf []byte) error {
	return proto.Unmarshal(buf, val)
}

// Size returns the size of the object, in bytes, once serialized
func (val *StartBatchOperationResponse) Size() int {
	return proto.Size(val)
}

// Equal returns whether two StartBatchOperationResponse values are equivalent by recursively
// comparing the message's fields.
// For more information see the documentation for
// https://pkg.go.dev/google.golang.org/protobuf/proto#Equal
func (this *StartBatchOperationResponse) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	var that1 *StartBatchOperationResponse
	switch t := that.(type) {
	case *StartBatchOperationResponse:
		that1 = t
	case StartBatchOperationResponse:
		that1 = &t
	default:
		return false
	}

	return proto.Equal(this, that1)
}

// Marshal an object of type StopBatchOperationRequest to the protobuf v3 wire format
func (val *StopBatchOperationRequest) Marshal() ([]byte, error) {
	return proto.Marshal(val)
}

// Unmarshal an object of type StopBatchOperationRequest from the protobuf v3 wire format
func (val *StopBatchOperationRequest) Unmarshal(buf []byte) error {
	return proto.Unmarshal(buf, val)
}

// Size returns the size of the object, in bytes, once serialized
func (val *StopBatchOperationRequest) Size() int {
	return proto.Size(val)
}

// Equal returns whether two StopBatchOperationRequest values are equivalent by recursively
// comparing the message's fields.
// For more information see the documentation for
// https://pkg.go.dev/google.golang.org/protobuf/proto#Equal
func (this *StopBatchOperationRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	var that1 *StopBatchOperationRequest
	switch t := that.(type) {
	case *StopBatchOperationRequest:
		that1 = t
	case StopBatchOperationRequest:
		that1 = &t
	default:
		return false
	}

	return proto.Equal(this, that1)
}

// Marshal an object of type StopBatchOperationResponse to the protobuf v3 wire format
func (val *StopBatchOperationResponse) Marshal() ([]byte, error) {
	return proto.Marshal(val)
}

// Unmarshal an object of type StopBatchOperationResponse from the protobuf v3 wire format
func (val *StopBatchOperationResponse) Unmarshal(buf []byte) error {
	return proto.Unmarshal(buf, val)
}

// Size returns the size of the object, in bytes, once serialized
func (val *StopBatchOperationResponse) Size() int {
	return proto.Size(val)
}

// Equal returns whether two StopBatchOperationResponse values are equivalent by recursively
// comparing the message's fields.
// For more information see the documentation for
// https://pkg.go.dev/google.golang.org/protobuf/proto#Equal
func (this *StopBatchOperationResponse) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	var that1 *StopBatchOperationResponse
	switch t := that.(type) {
	case *StopBatchOperationResponse:
		that1 = t
	case StopBatchOperationResponse:
		that1 = &t
	default:
		return false
	}

	return proto.Equal(this, that1)
}

// Marshal an object of type DescribeBatchOperationRequest to the protobuf v3 wire format
func (val *DescribeBatchOperationRequest) Marshal() ([]byte, error) {
	return proto.Marshal(val)
}

// Unmarshal an object of type DescribeBatchOperationRequest from the protobuf v3 wire format
func (val *DescribeBatchOperationRequest) Unmarshal(buf []byte) error {
	return proto.Unmarshal(buf, val)
}

// Size returns the size of the object, in bytes, once serialized
func (val *DescribeBatchOperationRequest) Size() int {
	return proto.Size(val)
}

// Equal returns whether two DescribeBatchOperationRequest values are equivalent by recursively
// comparing the message's fields.
// For more information see the documentation for
// https://pkg.go.dev/google.golang.org/protobuf/proto#Equal
func (this *DescribeBatchOperationRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	var that1 *DescribeBatchOperationRequest
	switch t := that.(type) {
	case *DescribeBatchOperationRequest:
		that1 = t
	case DescribeBatchOperationRequest:
		that1 = &t
	default:
		return false
	}

	return proto.Equal(this, that1)
}

// Marshal an object of type DescribeBatchOperationResponse to the protobuf v3 wire format
func (val *DescribeBatchOperationResponse) Marshal() ([]byte, error) {
	return proto.Marshal(val)
}

// Unmarshal an object of type DescribeBatchOperationResponse from the protobuf v3 wire format
func (val *DescribeBatchOperationResponse) Unmarshal(buf []byte) error {
	return proto.Unmarshal(buf, val)
}

// Size returns the size of the object, in bytes, once serialized
func (val *DescribeBatchOperationResponse) Size() int {
	return proto.Size(val)
}

// Equal returns whether two DescribeBatchOperationResponse values are equivalent by recursively
// comparing the message's fields.
// For more information see the documentation for
// https://pkg.go.dev/google.golang.org/protobuf/proto#Equal
func (this *DescribeBatchOperationResponse) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	var that1 *DescribeBatchOperationResponse
	switch t := that.(type) {
	case *DescribeBatchOperationResponse:
		that1 = t
	case DescribeBatchOperationResponse:
		that1 = &t
	default:
		return false
	}

	return proto.Equal(this, that1)
}

// Marshal an object of type ListBatchOperationsRequest to the protobuf v3 wire format
func (val *ListBatchOperationsRequest) Marshal() ([]byte, error) {
	return proto.Marshal(val)
}

// Unmarshal an object of type ListBatchOperationsRequest from the protobuf v3 wire format
func (val *ListBatchOperationsRequest) Unmarshal(buf []byte) error {
	return proto.Unmarshal(buf, val)
}

// Size returns the size of the object, in bytes, once serialized
func (val *ListBatchOperationsRequest) Size() int {
	return proto.Size(val)
}

// Equal returns whether two ListBatchOperationsRequest values are equivalent by recursively
// comparing the message's fields.
// For more information see the documentation for
// https://pkg.go.dev/google.golang.org/protobuf/proto#Equal
func (this *ListBatchOperationsRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	var that1 *ListBatchOperationsRequest
	switch t := that.(type) {
	case *ListBatchOperationsRequest:
		that1 = t
	case ListBatchOperationsRequest:
		that1 = &t
	default:
		return false
	}

	return proto.Equal(this, that1)
}

// Marshal an object of type ListBatchOperationsResponse to the protobuf v3 wire format
func (val *ListBatchOperationsResponse) Marshal() ([]byte, error) {
	return proto.Marshal(val)
}

// Unmarshal an object of type ListBatchOperationsResponse from the protobuf v3 wire format
func (val *ListBatchOperationsResponse) Unmarshal(buf []byte) error {
	return proto.Unmarshal(buf, val)
}

// Size returns the size of the object, in bytes, once serialized
func (val *ListBatchOperationsResponse) Size() int {
	return proto.Size(val)
}

// Equal returns whether two ListBatchOperationsResponse values are equivalent by recursively
// comparing the message's fields.
// For more information see the documentation for
// https://pkg.go.dev/google.golang.org/protobuf/proto#Equal
func (this *ListBatchOperationsResponse) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	var that1 *ListBatchOperationsResponse
	switch t := that.(type) {
	case *ListBatchOperationsResponse:
		that1 = t
	case ListBatchOperationsResponse:
		that1 = &t
	default:
		return false
	}

	return proto.Equal(this, that1)
}

// Marshal an object of type PollWorkflowExecutionUpdateRequest to the protobuf v3 wire format
func (val *PollWorkflowExecutionUpdateRequest) Marshal() ([]byte, error) {
	return proto.Marshal(val)
}

// Unmarshal an object of type PollWorkflowExecutionUpdateRequest from the protobuf v3 wire format
func (val *PollWorkflowExecutionUpdateRequest) Unmarshal(buf []byte) error {
	return proto.Unmarshal(buf, val)
}

// Size returns the size of the object, in bytes, once serialized
func (val *PollWorkflowExecutionUpdateRequest) Size() int {
	return proto.Size(val)
}

// Equal returns whether two PollWorkflowExecutionUpdateRequest values are equivalent by recursively
// comparing the message's fields.
// For more information see the documentation for
// https://pkg.go.dev/google.golang.org/protobuf/proto#Equal
func (this *PollWorkflowExecutionUpdateRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	var that1 *PollWorkflowExecutionUpdateRequest
	switch t := that.(type) {
	case *PollWorkflowExecutionUpdateRequest:
		that1 = t
	case PollWorkflowExecutionUpdateRequest:
		that1 = &t
	default:
		return false
	}

	return proto.Equal(this, that1)
}

// Marshal an object of type PollWorkflowExecutionUpdateResponse to the protobuf v3 wire format
func (val *PollWorkflowExecutionUpdateResponse) Marshal() ([]byte, error) {
	return proto.Marshal(val)
}

// Unmarshal an object of type PollWorkflowExecutionUpdateResponse from the protobuf v3 wire format
func (val *PollWorkflowExecutionUpdateResponse) Unmarshal(buf []byte) error {
	return proto.Unmarshal(buf, val)
}

// Size returns the size of the object, in bytes, once serialized
func (val *PollWorkflowExecutionUpdateResponse) Size() int {
	return proto.Size(val)
}

// Equal returns whether two PollWorkflowExecutionUpdateResponse values are equivalent by recursively
// comparing the message's fields.
// For more information see the documentation for
// https://pkg.go.dev/google.golang.org/protobuf/proto#Equal
func (this *PollWorkflowExecutionUpdateResponse) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	var that1 *PollWorkflowExecutionUpdateResponse
	switch t := that.(type) {
	case *PollWorkflowExecutionUpdateResponse:
		that1 = t
	case PollWorkflowExecutionUpdateResponse:
		that1 = &t
	default:
		return false
	}

	return proto.Equal(this, that1)
}

// Marshal an object of type PollNexusTaskQueueRequest to the protobuf v3 wire format
func (val *PollNexusTaskQueueRequest) Marshal() ([]byte, error) {
	return proto.Marshal(val)
}

// Unmarshal an object of type PollNexusTaskQueueRequest from the protobuf v3 wire format
func (val *PollNexusTaskQueueRequest) Unmarshal(buf []byte) error {
	return proto.Unmarshal(buf, val)
}

// Size returns the size of the object, in bytes, once serialized
func (val *PollNexusTaskQueueRequest) Size() int {
	return proto.Size(val)
}

// Equal returns whether two PollNexusTaskQueueRequest values are equivalent by recursively
// comparing the message's fields.
// For more information see the documentation for
// https://pkg.go.dev/google.golang.org/protobuf/proto#Equal
func (this *PollNexusTaskQueueRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	var that1 *PollNexusTaskQueueRequest
	switch t := that.(type) {
	case *PollNexusTaskQueueRequest:
		that1 = t
	case PollNexusTaskQueueRequest:
		that1 = &t
	default:
		return false
	}

	return proto.Equal(this, that1)
}

// Marshal an object of type PollNexusTaskQueueResponse to the protobuf v3 wire format
func (val *PollNexusTaskQueueResponse) Marshal() ([]byte, error) {
	return proto.Marshal(val)
}

// Unmarshal an object of type PollNexusTaskQueueResponse from the protobuf v3 wire format
func (val *PollNexusTaskQueueResponse) Unmarshal(buf []byte) error {
	return proto.Unmarshal(buf, val)
}

// Size returns the size of the object, in bytes, once serialized
func (val *PollNexusTaskQueueResponse) Size() int {
	return proto.Size(val)
}

// Equal returns whether two PollNexusTaskQueueResponse values are equivalent by recursively
// comparing the message's fields.
// For more information see the documentation for
// https://pkg.go.dev/google.golang.org/protobuf/proto#Equal
func (this *PollNexusTaskQueueResponse) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	var that1 *PollNexusTaskQueueResponse
	switch t := that.(type) {
	case *PollNexusTaskQueueResponse:
		that1 = t
	case PollNexusTaskQueueResponse:
		that1 = &t
	default:
		return false
	}

	return proto.Equal(this, that1)
}

// Marshal an object of type RespondNexusTaskCompletedRequest to the protobuf v3 wire format
func (val *RespondNexusTaskCompletedRequest) Marshal() ([]byte, error) {
	return proto.Marshal(val)
}

// Unmarshal an object of type RespondNexusTaskCompletedRequest from the protobuf v3 wire format
func (val *RespondNexusTaskCompletedRequest) Unmarshal(buf []byte) error {
	return proto.Unmarshal(buf, val)
}

// Size returns the size of the object, in bytes, once serialized
func (val *RespondNexusTaskCompletedRequest) Size() int {
	return proto.Size(val)
}

// Equal returns whether two RespondNexusTaskCompletedRequest values are equivalent by recursively
// comparing the message's fields.
// For more information see the documentation for
// https://pkg.go.dev/google.golang.org/protobuf/proto#Equal
func (this *RespondNexusTaskCompletedRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	var that1 *RespondNexusTaskCompletedRequest
	switch t := that.(type) {
	case *RespondNexusTaskCompletedRequest:
		that1 = t
	case RespondNexusTaskCompletedRequest:
		that1 = &t
	default:
		return false
	}

	return proto.Equal(this, that1)
}

// Marshal an object of type RespondNexusTaskCompletedResponse to the protobuf v3 wire format
func (val *RespondNexusTaskCompletedResponse) Marshal() ([]byte, error) {
	return proto.Marshal(val)
}

// Unmarshal an object of type RespondNexusTaskCompletedResponse from the protobuf v3 wire format
func (val *RespondNexusTaskCompletedResponse) Unmarshal(buf []byte) error {
	return proto.Unmarshal(buf, val)
}

// Size returns the size of the object, in bytes, once serialized
func (val *RespondNexusTaskCompletedResponse) Size() int {
	return proto.Size(val)
}

// Equal returns whether two RespondNexusTaskCompletedResponse values are equivalent by recursively
// comparing the message's fields.
// For more information see the documentation for
// https://pkg.go.dev/google.golang.org/protobuf/proto#Equal
func (this *RespondNexusTaskCompletedResponse) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	var that1 *RespondNexusTaskCompletedResponse
	switch t := that.(type) {
	case *RespondNexusTaskCompletedResponse:
		that1 = t
	case RespondNexusTaskCompletedResponse:
		that1 = &t
	default:
		return false
	}

	return proto.Equal(this, that1)
}

// Marshal an object of type RespondNexusTaskFailedRequest to the protobuf v3 wire format
func (val *RespondNexusTaskFailedRequest) Marshal() ([]byte, error) {
	return proto.Marshal(val)
}

// Unmarshal an object of type RespondNexusTaskFailedRequest from the protobuf v3 wire format
func (val *RespondNexusTaskFailedRequest) Unmarshal(buf []byte) error {
	return proto.Unmarshal(buf, val)
}

// Size returns the size of the object, in bytes, once serialized
func (val *RespondNexusTaskFailedRequest) Size() int {
	return proto.Size(val)
}

// Equal returns whether two RespondNexusTaskFailedRequest values are equivalent by recursively
// comparing the message's fields.
// For more information see the documentation for
// https://pkg.go.dev/google.golang.org/protobuf/proto#Equal
func (this *RespondNexusTaskFailedRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	var that1 *RespondNexusTaskFailedRequest
	switch t := that.(type) {
	case *RespondNexusTaskFailedRequest:
		that1 = t
	case RespondNexusTaskFailedRequest:
		that1 = &t
	default:
		return false
	}

	return proto.Equal(this, that1)
}

// Marshal an object of type RespondNexusTaskFailedResponse to the protobuf v3 wire format
func (val *RespondNexusTaskFailedResponse) Marshal() ([]byte, error) {
	return proto.Marshal(val)
}

// Unmarshal an object of type RespondNexusTaskFailedResponse from the protobuf v3 wire format
func (val *RespondNexusTaskFailedResponse) Unmarshal(buf []byte) error {
	return proto.Unmarshal(buf, val)
}

// Size returns the size of the object, in bytes, once serialized
func (val *RespondNexusTaskFailedResponse) Size() int {
	return proto.Size(val)
}

// Equal returns whether two RespondNexusTaskFailedResponse values are equivalent by recursively
// comparing the message's fields.
// For more information see the documentation for
// https://pkg.go.dev/google.golang.org/protobuf/proto#Equal
func (this *RespondNexusTaskFailedResponse) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	var that1 *RespondNexusTaskFailedResponse
	switch t := that.(type) {
	case *RespondNexusTaskFailedResponse:
		that1 = t
	case RespondNexusTaskFailedResponse:
		that1 = &t
	default:
		return false
	}

	return proto.Equal(this, that1)
}

// Marshal an object of type ExecuteMultiOperationRequest to the protobuf v3 wire format
func (val *ExecuteMultiOperationRequest) Marshal() ([]byte, error) {
	return proto.Marshal(val)
}

// Unmarshal an object of type ExecuteMultiOperationRequest from the protobuf v3 wire format
func (val *ExecuteMultiOperationRequest) Unmarshal(buf []byte) error {
	return proto.Unmarshal(buf, val)
}

// Size returns the size of the object, in bytes, once serialized
func (val *ExecuteMultiOperationRequest) Size() int {
	return proto.Size(val)
}

// Equal returns whether two ExecuteMultiOperationRequest values are equivalent by recursively
// comparing the message's fields.
// For more information see the documentation for
// https://pkg.go.dev/google.golang.org/protobuf/proto#Equal
func (this *ExecuteMultiOperationRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	var that1 *ExecuteMultiOperationRequest
	switch t := that.(type) {
	case *ExecuteMultiOperationRequest:
		that1 = t
	case ExecuteMultiOperationRequest:
		that1 = &t
	default:
		return false
	}

	return proto.Equal(this, that1)
}

// Marshal an object of type ExecuteMultiOperationResponse to the protobuf v3 wire format
func (val *ExecuteMultiOperationResponse) Marshal() ([]byte, error) {
	return proto.Marshal(val)
}

// Unmarshal an object of type ExecuteMultiOperationResponse from the protobuf v3 wire format
func (val *ExecuteMultiOperationResponse) Unmarshal(buf []byte) error {
	return proto.Unmarshal(buf, val)
}

// Size returns the size of the object, in bytes, once serialized
func (val *ExecuteMultiOperationResponse) Size() int {
	return proto.Size(val)
}

// Equal returns whether two ExecuteMultiOperationResponse values are equivalent by recursively
// comparing the message's fields.
// For more information see the documentation for
// https://pkg.go.dev/google.golang.org/protobuf/proto#Equal
func (this *ExecuteMultiOperationResponse) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	var that1 *ExecuteMultiOperationResponse
	switch t := that.(type) {
	case *ExecuteMultiOperationResponse:
		that1 = t
	case ExecuteMultiOperationResponse:
		that1 = &t
	default:
		return false
	}

	return proto.Equal(this, that1)
}

// Marshal an object of type UpdateActivityOptionsByIdRequest to the protobuf v3 wire format
func (val *UpdateActivityOptionsByIdRequest) Marshal() ([]byte, error) {
	return proto.Marshal(val)
}

// Unmarshal an object of type UpdateActivityOptionsByIdRequest from the protobuf v3 wire format
func (val *UpdateActivityOptionsByIdRequest) Unmarshal(buf []byte) error {
	return proto.Unmarshal(buf, val)
}

// Size returns the size of the object, in bytes, once serialized
func (val *UpdateActivityOptionsByIdRequest) Size() int {
	return proto.Size(val)
}

// Equal returns whether two UpdateActivityOptionsByIdRequest values are equivalent by recursively
// comparing the message's fields.
// For more information see the documentation for
// https://pkg.go.dev/google.golang.org/protobuf/proto#Equal
func (this *UpdateActivityOptionsByIdRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	var that1 *UpdateActivityOptionsByIdRequest
	switch t := that.(type) {
	case *UpdateActivityOptionsByIdRequest:
		that1 = t
	case UpdateActivityOptionsByIdRequest:
		that1 = &t
	default:
		return false
	}

	return proto.Equal(this, that1)
}

// Marshal an object of type UpdateActivityOptionsByIdResponse to the protobuf v3 wire format
func (val *UpdateActivityOptionsByIdResponse) Marshal() ([]byte, error) {
	return proto.Marshal(val)
}

// Unmarshal an object of type UpdateActivityOptionsByIdResponse from the protobuf v3 wire format
func (val *UpdateActivityOptionsByIdResponse) Unmarshal(buf []byte) error {
	return proto.Unmarshal(buf, val)
}

// Size returns the size of the object, in bytes, once serialized
func (val *UpdateActivityOptionsByIdResponse) Size() int {
	return proto.Size(val)
}

// Equal returns whether two UpdateActivityOptionsByIdResponse values are equivalent by recursively
// comparing the message's fields.
// For more information see the documentation for
// https://pkg.go.dev/google.golang.org/protobuf/proto#Equal
func (this *UpdateActivityOptionsByIdResponse) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	var that1 *UpdateActivityOptionsByIdResponse
	switch t := that.(type) {
	case *UpdateActivityOptionsByIdResponse:
		that1 = t
	case UpdateActivityOptionsByIdResponse:
		that1 = &t
	default:
		return false
	}

	return proto.Equal(this, that1)
}

// Marshal an object of type PauseActivityByIdRequest to the protobuf v3 wire format
func (val *PauseActivityByIdRequest) Marshal() ([]byte, error) {
	return proto.Marshal(val)
}

// Unmarshal an object of type PauseActivityByIdRequest from the protobuf v3 wire format
func (val *PauseActivityByIdRequest) Unmarshal(buf []byte) error {
	return proto.Unmarshal(buf, val)
}

// Size returns the size of the object, in bytes, once serialized
func (val *PauseActivityByIdRequest) Size() int {
	return proto.Size(val)
}

// Equal returns whether two PauseActivityByIdRequest values are equivalent by recursively
// comparing the message's fields.
// For more information see the documentation for
// https://pkg.go.dev/google.golang.org/protobuf/proto#Equal
func (this *PauseActivityByIdRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	var that1 *PauseActivityByIdRequest
	switch t := that.(type) {
	case *PauseActivityByIdRequest:
		that1 = t
	case PauseActivityByIdRequest:
		that1 = &t
	default:
		return false
	}

	return proto.Equal(this, that1)
}

// Marshal an object of type PauseActivityByIdResponse to the protobuf v3 wire format
func (val *PauseActivityByIdResponse) Marshal() ([]byte, error) {
	return proto.Marshal(val)
}

// Unmarshal an object of type PauseActivityByIdResponse from the protobuf v3 wire format
func (val *PauseActivityByIdResponse) Unmarshal(buf []byte) error {
	return proto.Unmarshal(buf, val)
}

// Size returns the size of the object, in bytes, once serialized
func (val *PauseActivityByIdResponse) Size() int {
	return proto.Size(val)
}

// Equal returns whether two PauseActivityByIdResponse values are equivalent by recursively
// comparing the message's fields.
// For more information see the documentation for
// https://pkg.go.dev/google.golang.org/protobuf/proto#Equal
func (this *PauseActivityByIdResponse) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	var that1 *PauseActivityByIdResponse
	switch t := that.(type) {
	case *PauseActivityByIdResponse:
		that1 = t
	case PauseActivityByIdResponse:
		that1 = &t
	default:
		return false
	}

	return proto.Equal(this, that1)
}

// Marshal an object of type UnpauseActivityByIdRequest to the protobuf v3 wire format
func (val *UnpauseActivityByIdRequest) Marshal() ([]byte, error) {
	return proto.Marshal(val)
}

// Unmarshal an object of type UnpauseActivityByIdRequest from the protobuf v3 wire format
func (val *UnpauseActivityByIdRequest) Unmarshal(buf []byte) error {
	return proto.Unmarshal(buf, val)
}

// Size returns the size of the object, in bytes, once serialized
func (val *UnpauseActivityByIdRequest) Size() int {
	return proto.Size(val)
}

// Equal returns whether two UnpauseActivityByIdRequest values are equivalent by recursively
// comparing the message's fields.
// For more information see the documentation for
// https://pkg.go.dev/google.golang.org/protobuf/proto#Equal
func (this *UnpauseActivityByIdRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	var that1 *UnpauseActivityByIdRequest
	switch t := that.(type) {
	case *UnpauseActivityByIdRequest:
		that1 = t
	case UnpauseActivityByIdRequest:
		that1 = &t
	default:
		return false
	}

	return proto.Equal(this, that1)
}

// Marshal an object of type UnpauseActivityByIdResponse to the protobuf v3 wire format
func (val *UnpauseActivityByIdResponse) Marshal() ([]byte, error) {
	return proto.Marshal(val)
}

// Unmarshal an object of type UnpauseActivityByIdResponse from the protobuf v3 wire format
func (val *UnpauseActivityByIdResponse) Unmarshal(buf []byte) error {
	return proto.Unmarshal(buf, val)
}

// Size returns the size of the object, in bytes, once serialized
func (val *UnpauseActivityByIdResponse) Size() int {
	return proto.Size(val)
}

// Equal returns whether two UnpauseActivityByIdResponse values are equivalent by recursively
// comparing the message's fields.
// For more information see the documentation for
// https://pkg.go.dev/google.golang.org/protobuf/proto#Equal
func (this *UnpauseActivityByIdResponse) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	var that1 *UnpauseActivityByIdResponse
	switch t := that.(type) {
	case *UnpauseActivityByIdResponse:
		that1 = t
	case UnpauseActivityByIdResponse:
		that1 = &t
	default:
		return false
	}

	return proto.Equal(this, that1)
}

// Marshal an object of type ResetActivityByIdRequest to the protobuf v3 wire format
func (val *ResetActivityByIdRequest) Marshal() ([]byte, error) {
	return proto.Marshal(val)
}

// Unmarshal an object of type ResetActivityByIdRequest from the protobuf v3 wire format
func (val *ResetActivityByIdRequest) Unmarshal(buf []byte) error {
	return proto.Unmarshal(buf, val)
}

// Size returns the size of the object, in bytes, once serialized
func (val *ResetActivityByIdRequest) Size() int {
	return proto.Size(val)
}

// Equal returns whether two ResetActivityByIdRequest values are equivalent by recursively
// comparing the message's fields.
// For more information see the documentation for
// https://pkg.go.dev/google.golang.org/protobuf/proto#Equal
func (this *ResetActivityByIdRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	var that1 *ResetActivityByIdRequest
	switch t := that.(type) {
	case *ResetActivityByIdRequest:
		that1 = t
	case ResetActivityByIdRequest:
		that1 = &t
	default:
		return false
	}

	return proto.Equal(this, that1)
}

// Marshal an object of type ResetActivityByIdResponse to the protobuf v3 wire format
func (val *ResetActivityByIdResponse) Marshal() ([]byte, error) {
	return proto.Marshal(val)
}

// Unmarshal an object of type ResetActivityByIdResponse from the protobuf v3 wire format
func (val *ResetActivityByIdResponse) Unmarshal(buf []byte) error {
	return proto.Unmarshal(buf, val)
}

// Size returns the size of the object, in bytes, once serialized
func (val *ResetActivityByIdResponse) Size() int {
	return proto.Size(val)
}

// Equal returns whether two ResetActivityByIdResponse values are equivalent by recursively
// comparing the message's fields.
// For more information see the documentation for
// https://pkg.go.dev/google.golang.org/protobuf/proto#Equal
func (this *ResetActivityByIdResponse) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	var that1 *ResetActivityByIdResponse
	switch t := that.(type) {
	case *ResetActivityByIdResponse:
		that1 = t
	case ResetActivityByIdResponse:
		that1 = &t
	default:
		return false
	}

	return proto.Equal(this, that1)
}

// Marshal an object of type UpdateWorkflowExecutionOptionsRequest to the protobuf v3 wire format
func (val *UpdateWorkflowExecutionOptionsRequest) Marshal() ([]byte, error) {
	return proto.Marshal(val)
}

// Unmarshal an object of type UpdateWorkflowExecutionOptionsRequest from the protobuf v3 wire format
func (val *UpdateWorkflowExecutionOptionsRequest) Unmarshal(buf []byte) error {
	return proto.Unmarshal(buf, val)
}

// Size returns the size of the object, in bytes, once serialized
func (val *UpdateWorkflowExecutionOptionsRequest) Size() int {
	return proto.Size(val)
}

// Equal returns whether two UpdateWorkflowExecutionOptionsRequest values are equivalent by recursively
// comparing the message's fields.
// For more information see the documentation for
// https://pkg.go.dev/google.golang.org/protobuf/proto#Equal
func (this *UpdateWorkflowExecutionOptionsRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	var that1 *UpdateWorkflowExecutionOptionsRequest
	switch t := that.(type) {
	case *UpdateWorkflowExecutionOptionsRequest:
		that1 = t
	case UpdateWorkflowExecutionOptionsRequest:
		that1 = &t
	default:
		return false
	}

	return proto.Equal(this, that1)
}

// Marshal an object of type UpdateWorkflowExecutionOptionsResponse to the protobuf v3 wire format
func (val *UpdateWorkflowExecutionOptionsResponse) Marshal() ([]byte, error) {
	return proto.Marshal(val)
}

// Unmarshal an object of type UpdateWorkflowExecutionOptionsResponse from the protobuf v3 wire format
func (val *UpdateWorkflowExecutionOptionsResponse) Unmarshal(buf []byte) error {
	return proto.Unmarshal(buf, val)
}

// Size returns the size of the object, in bytes, once serialized
func (val *UpdateWorkflowExecutionOptionsResponse) Size() int {
	return proto.Size(val)
}

// Equal returns whether two UpdateWorkflowExecutionOptionsResponse values are equivalent by recursively
// comparing the message's fields.
// For more information see the documentation for
// https://pkg.go.dev/google.golang.org/protobuf/proto#Equal
func (this *UpdateWorkflowExecutionOptionsResponse) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	var that1 *UpdateWorkflowExecutionOptionsResponse
	switch t := that.(type) {
	case *UpdateWorkflowExecutionOptionsResponse:
		that1 = t
	case UpdateWorkflowExecutionOptionsResponse:
		that1 = &t
	default:
		return false
	}

	return proto.Equal(this, that1)
}

// Marshal an object of type DescribeDeploymentRequest to the protobuf v3 wire format
func (val *DescribeDeploymentRequest) Marshal() ([]byte, error) {
	return proto.Marshal(val)
}

// Unmarshal an object of type DescribeDeploymentRequest from the protobuf v3 wire format
func (val *DescribeDeploymentRequest) Unmarshal(buf []byte) error {
	return proto.Unmarshal(buf, val)
}

// Size returns the size of the object, in bytes, once serialized
func (val *DescribeDeploymentRequest) Size() int {
	return proto.Size(val)
}

// Equal returns whether two DescribeDeploymentRequest values are equivalent by recursively
// comparing the message's fields.
// For more information see the documentation for
// https://pkg.go.dev/google.golang.org/protobuf/proto#Equal
func (this *DescribeDeploymentRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	var that1 *DescribeDeploymentRequest
	switch t := that.(type) {
	case *DescribeDeploymentRequest:
		that1 = t
	case DescribeDeploymentRequest:
		that1 = &t
	default:
		return false
	}

	return proto.Equal(this, that1)
}

// Marshal an object of type DescribeDeploymentResponse to the protobuf v3 wire format
func (val *DescribeDeploymentResponse) Marshal() ([]byte, error) {
	return proto.Marshal(val)
}

// Unmarshal an object of type DescribeDeploymentResponse from the protobuf v3 wire format
func (val *DescribeDeploymentResponse) Unmarshal(buf []byte) error {
	return proto.Unmarshal(buf, val)
}

// Size returns the size of the object, in bytes, once serialized
func (val *DescribeDeploymentResponse) Size() int {
	return proto.Size(val)
}

// Equal returns whether two DescribeDeploymentResponse values are equivalent by recursively
// comparing the message's fields.
// For more information see the documentation for
// https://pkg.go.dev/google.golang.org/protobuf/proto#Equal
func (this *DescribeDeploymentResponse) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	var that1 *DescribeDeploymentResponse
	switch t := that.(type) {
	case *DescribeDeploymentResponse:
		that1 = t
	case DescribeDeploymentResponse:
		that1 = &t
	default:
		return false
	}

	return proto.Equal(this, that1)
}

// Marshal an object of type ListDeploymentsRequest to the protobuf v3 wire format
func (val *ListDeploymentsRequest) Marshal() ([]byte, error) {
	return proto.Marshal(val)
}

// Unmarshal an object of type ListDeploymentsRequest from the protobuf v3 wire format
func (val *ListDeploymentsRequest) Unmarshal(buf []byte) error {
	return proto.Unmarshal(buf, val)
}

// Size returns the size of the object, in bytes, once serialized
func (val *ListDeploymentsRequest) Size() int {
	return proto.Size(val)
}

// Equal returns whether two ListDeploymentsRequest values are equivalent by recursively
// comparing the message's fields.
// For more information see the documentation for
// https://pkg.go.dev/google.golang.org/protobuf/proto#Equal
func (this *ListDeploymentsRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	var that1 *ListDeploymentsRequest
	switch t := that.(type) {
	case *ListDeploymentsRequest:
		that1 = t
	case ListDeploymentsRequest:
		that1 = &t
	default:
		return false
	}

	return proto.Equal(this, that1)
}

// Marshal an object of type ListDeploymentsResponse to the protobuf v3 wire format
func (val *ListDeploymentsResponse) Marshal() ([]byte, error) {
	return proto.Marshal(val)
}

// Unmarshal an object of type ListDeploymentsResponse from the protobuf v3 wire format
func (val *ListDeploymentsResponse) Unmarshal(buf []byte) error {
	return proto.Unmarshal(buf, val)
}

// Size returns the size of the object, in bytes, once serialized
func (val *ListDeploymentsResponse) Size() int {
	return proto.Size(val)
}

// Equal returns whether two ListDeploymentsResponse values are equivalent by recursively
// comparing the message's fields.
// For more information see the documentation for
// https://pkg.go.dev/google.golang.org/protobuf/proto#Equal
func (this *ListDeploymentsResponse) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	var that1 *ListDeploymentsResponse
	switch t := that.(type) {
	case *ListDeploymentsResponse:
		that1 = t
	case ListDeploymentsResponse:
		that1 = &t
	default:
		return false
	}

	return proto.Equal(this, that1)
}

// Marshal an object of type SetCurrentDeploymentRequest to the protobuf v3 wire format
func (val *SetCurrentDeploymentRequest) Marshal() ([]byte, error) {
	return proto.Marshal(val)
}

// Unmarshal an object of type SetCurrentDeploymentRequest from the protobuf v3 wire format
func (val *SetCurrentDeploymentRequest) Unmarshal(buf []byte) error {
	return proto.Unmarshal(buf, val)
}

// Size returns the size of the object, in bytes, once serialized
func (val *SetCurrentDeploymentRequest) Size() int {
	return proto.Size(val)
}

// Equal returns whether two SetCurrentDeploymentRequest values are equivalent by recursively
// comparing the message's fields.
// For more information see the documentation for
// https://pkg.go.dev/google.golang.org/protobuf/proto#Equal
func (this *SetCurrentDeploymentRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	var that1 *SetCurrentDeploymentRequest
	switch t := that.(type) {
	case *SetCurrentDeploymentRequest:
		that1 = t
	case SetCurrentDeploymentRequest:
		that1 = &t
	default:
		return false
	}

	return proto.Equal(this, that1)
}

// Marshal an object of type SetCurrentDeploymentResponse to the protobuf v3 wire format
func (val *SetCurrentDeploymentResponse) Marshal() ([]byte, error) {
	return proto.Marshal(val)
}

// Unmarshal an object of type SetCurrentDeploymentResponse from the protobuf v3 wire format
func (val *SetCurrentDeploymentResponse) Unmarshal(buf []byte) error {
	return proto.Unmarshal(buf, val)
}

// Size returns the size of the object, in bytes, once serialized
func (val *SetCurrentDeploymentResponse) Size() int {
	return proto.Size(val)
}

// Equal returns whether two SetCurrentDeploymentResponse values are equivalent by recursively
// comparing the message's fields.
// For more information see the documentation for
// https://pkg.go.dev/google.golang.org/protobuf/proto#Equal
func (this *SetCurrentDeploymentResponse) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	var that1 *SetCurrentDeploymentResponse
	switch t := that.(type) {
	case *SetCurrentDeploymentResponse:
		that1 = t
	case SetCurrentDeploymentResponse:
		that1 = &t
	default:
		return false
	}

	return proto.Equal(this, that1)
}

// Marshal an object of type GetCurrentDeploymentRequest to the protobuf v3 wire format
func (val *GetCurrentDeploymentRequest) Marshal() ([]byte, error) {
	return proto.Marshal(val)
}

// Unmarshal an object of type GetCurrentDeploymentRequest from the protobuf v3 wire format
func (val *GetCurrentDeploymentRequest) Unmarshal(buf []byte) error {
	return proto.Unmarshal(buf, val)
}

// Size returns the size of the object, in bytes, once serialized
func (val *GetCurrentDeploymentRequest) Size() int {
	return proto.Size(val)
}

// Equal returns whether two GetCurrentDeploymentRequest values are equivalent by recursively
// comparing the message's fields.
// For more information see the documentation for
// https://pkg.go.dev/google.golang.org/protobuf/proto#Equal
func (this *GetCurrentDeploymentRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	var that1 *GetCurrentDeploymentRequest
	switch t := that.(type) {
	case *GetCurrentDeploymentRequest:
		that1 = t
	case GetCurrentDeploymentRequest:
		that1 = &t
	default:
		return false
	}

	return proto.Equal(this, that1)
}

// Marshal an object of type GetCurrentDeploymentResponse to the protobuf v3 wire format
func (val *GetCurrentDeploymentResponse) Marshal() ([]byte, error) {
	return proto.Marshal(val)
}

// Unmarshal an object of type GetCurrentDeploymentResponse from the protobuf v3 wire format
func (val *GetCurrentDeploymentResponse) Unmarshal(buf []byte) error {
	return proto.Unmarshal(buf, val)
}

// Size returns the size of the object, in bytes, once serialized
func (val *GetCurrentDeploymentResponse) Size() int {
	return proto.Size(val)
}

// Equal returns whether two GetCurrentDeploymentResponse values are equivalent by recursively
// comparing the message's fields.
// For more information see the documentation for
// https://pkg.go.dev/google.golang.org/protobuf/proto#Equal
func (this *GetCurrentDeploymentResponse) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	var that1 *GetCurrentDeploymentResponse
	switch t := that.(type) {
	case *GetCurrentDeploymentResponse:
		that1 = t
	case GetCurrentDeploymentResponse:
		that1 = &t
	default:
		return false
	}

	return proto.Equal(this, that1)
}

// Marshal an object of type GetDeploymentReachabilityRequest to the protobuf v3 wire format
func (val *GetDeploymentReachabilityRequest) Marshal() ([]byte, error) {
	return proto.Marshal(val)
}

// Unmarshal an object of type GetDeploymentReachabilityRequest from the protobuf v3 wire format
func (val *GetDeploymentReachabilityRequest) Unmarshal(buf []byte) error {
	return proto.Unmarshal(buf, val)
}

// Size returns the size of the object, in bytes, once serialized
func (val *GetDeploymentReachabilityRequest) Size() int {
	return proto.Size(val)
}

// Equal returns whether two GetDeploymentReachabilityRequest values are equivalent by recursively
// comparing the message's fields.
// For more information see the documentation for
// https://pkg.go.dev/google.golang.org/protobuf/proto#Equal
func (this *GetDeploymentReachabilityRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	var that1 *GetDeploymentReachabilityRequest
	switch t := that.(type) {
	case *GetDeploymentReachabilityRequest:
		that1 = t
	case GetDeploymentReachabilityRequest:
		that1 = &t
	default:
		return false
	}

	return proto.Equal(this, that1)
}

// Marshal an object of type GetDeploymentReachabilityResponse to the protobuf v3 wire format
func (val *GetDeploymentReachabilityResponse) Marshal() ([]byte, error) {
	return proto.Marshal(val)
}

// Unmarshal an object of type GetDeploymentReachabilityResponse from the protobuf v3 wire format
func (val *GetDeploymentReachabilityResponse) Unmarshal(buf []byte) error {
	return proto.Unmarshal(buf, val)
}

// Size returns the size of the object, in bytes, once serialized
func (val *GetDeploymentReachabilityResponse) Size() int {
	return proto.Size(val)
}

// Equal returns whether two GetDeploymentReachabilityResponse values are equivalent by recursively
// comparing the message's fields.
// For more information see the documentation for
// https://pkg.go.dev/google.golang.org/protobuf/proto#Equal
func (this *GetDeploymentReachabilityResponse) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	var that1 *GetDeploymentReachabilityResponse
	switch t := that.(type) {
	case *GetDeploymentReachabilityResponse:
		that1 = t
	case GetDeploymentReachabilityResponse:
		that1 = &t
	default:
		return false
	}

	return proto.Equal(this, that1)
}
