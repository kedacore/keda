// Code generated by protoc-gen-go. DO NOT EDIT.
// plugins:
// 	protoc-gen-go
// 	protoc
// source: temporal/api/command/v1/message.proto

package command

import (
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"

	v1 "go.temporal.io/api/common/v1"
	v13 "go.temporal.io/api/enums/v1"
	v12 "go.temporal.io/api/failure/v1"
	v14 "go.temporal.io/api/sdk/v1"
	v11 "go.temporal.io/api/taskqueue/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ScheduleActivityTaskCommandAttributes struct {
	state        protoimpl.MessageState `protogen:"open.v1"`
	ActivityId   string                 `protobuf:"bytes,1,opt,name=activity_id,json=activityId,proto3" json:"activity_id,omitempty"`
	ActivityType *v1.ActivityType       `protobuf:"bytes,2,opt,name=activity_type,json=activityType,proto3" json:"activity_type,omitempty"`
	TaskQueue    *v11.TaskQueue         `protobuf:"bytes,4,opt,name=task_queue,json=taskQueue,proto3" json:"task_queue,omitempty"`
	Header       *v1.Header             `protobuf:"bytes,5,opt,name=header,proto3" json:"header,omitempty"`
	Input        *v1.Payloads           `protobuf:"bytes,6,opt,name=input,proto3" json:"input,omitempty"`
	// Indicates how long the caller is willing to wait for activity completion. The "schedule" time
	// is when the activity is initially scheduled, not when the most recent retry is scheduled.
	// Limits how long retries will be attempted. Either this or `start_to_close_timeout` must be
	// specified. When not specified, defaults to the workflow execution timeout.
	//
	// (-- api-linter: core::0140::prepositions=disabled
	//
	//	aip.dev/not-precedent: "to" is used to indicate interval. --)
	ScheduleToCloseTimeout *durationpb.Duration `protobuf:"bytes,7,opt,name=schedule_to_close_timeout,json=scheduleToCloseTimeout,proto3" json:"schedule_to_close_timeout,omitempty"`
	// Limits the time an activity task can stay in a task queue before a worker picks it up. The
	// "schedule" time is when the most recent retry is scheduled. This timeout should usually not
	// be set: it's useful in specific scenarios like worker-specific task queues. This timeout is
	// always non retryable, as all a retry would achieve is to put it back into the same queue.
	// Defaults to `schedule_to_close_timeout` or workflow execution timeout if that is not
	// specified. More info:
	// https://docs.temporal.io/docs/content/what-is-a-schedule-to-start-timeout/
	//
	// (-- api-linter: core::0140::prepositions=disabled
	//
	//	aip.dev/not-precedent: "to" is used to indicate interval. --)
	ScheduleToStartTimeout *durationpb.Duration `protobuf:"bytes,8,opt,name=schedule_to_start_timeout,json=scheduleToStartTimeout,proto3" json:"schedule_to_start_timeout,omitempty"`
	// Maximum time an activity is allowed to execute after being picked up by a worker. This
	// timeout is always retryable. Either this or `schedule_to_close_timeout` must be specified.
	//
	// (-- api-linter: core::0140::prepositions=disabled
	//
	//	aip.dev/not-precedent: "to" is used to indicate interval. --)
	StartToCloseTimeout *durationpb.Duration `protobuf:"bytes,9,opt,name=start_to_close_timeout,json=startToCloseTimeout,proto3" json:"start_to_close_timeout,omitempty"`
	// Maximum permitted time between successful worker heartbeats.
	HeartbeatTimeout *durationpb.Duration `protobuf:"bytes,10,opt,name=heartbeat_timeout,json=heartbeatTimeout,proto3" json:"heartbeat_timeout,omitempty"`
	// Activities are provided by a default retry policy which is controlled through the service's
	// dynamic configuration. Retries will be attempted until `schedule_to_close_timeout` has
	// elapsed. To disable retries set retry_policy.maximum_attempts to 1.
	RetryPolicy *v1.RetryPolicy `protobuf:"bytes,11,opt,name=retry_policy,json=retryPolicy,proto3" json:"retry_policy,omitempty"`
	// Request to start the activity directly bypassing matching service and worker polling
	// The slot for executing the activity should be reserved when setting this field to true.
	RequestEagerExecution bool `protobuf:"varint,12,opt,name=request_eager_execution,json=requestEagerExecution,proto3" json:"request_eager_execution,omitempty"`
	// If this is set, the activity would be assigned to the Build ID of the workflow. Otherwise,
	// Assignment rules of the activity's Task Queue will be used to determine the Build ID.
	UseWorkflowBuildId bool `protobuf:"varint,13,opt,name=use_workflow_build_id,json=useWorkflowBuildId,proto3" json:"use_workflow_build_id,omitempty"`
	// Priority metadata. If this message is not present, or any fields are not
	// present, they inherit the values from the workflow.
	Priority      *v1.Priority `protobuf:"bytes,14,opt,name=priority,proto3" json:"priority,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ScheduleActivityTaskCommandAttributes) Reset() {
	*x = ScheduleActivityTaskCommandAttributes{}
	mi := &file_temporal_api_command_v1_message_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ScheduleActivityTaskCommandAttributes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScheduleActivityTaskCommandAttributes) ProtoMessage() {}

func (x *ScheduleActivityTaskCommandAttributes) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_api_command_v1_message_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScheduleActivityTaskCommandAttributes.ProtoReflect.Descriptor instead.
func (*ScheduleActivityTaskCommandAttributes) Descriptor() ([]byte, []int) {
	return file_temporal_api_command_v1_message_proto_rawDescGZIP(), []int{0}
}

func (x *ScheduleActivityTaskCommandAttributes) GetActivityId() string {
	if x != nil {
		return x.ActivityId
	}
	return ""
}

func (x *ScheduleActivityTaskCommandAttributes) GetActivityType() *v1.ActivityType {
	if x != nil {
		return x.ActivityType
	}
	return nil
}

func (x *ScheduleActivityTaskCommandAttributes) GetTaskQueue() *v11.TaskQueue {
	if x != nil {
		return x.TaskQueue
	}
	return nil
}

func (x *ScheduleActivityTaskCommandAttributes) GetHeader() *v1.Header {
	if x != nil {
		return x.Header
	}
	return nil
}

func (x *ScheduleActivityTaskCommandAttributes) GetInput() *v1.Payloads {
	if x != nil {
		return x.Input
	}
	return nil
}

func (x *ScheduleActivityTaskCommandAttributes) GetScheduleToCloseTimeout() *durationpb.Duration {
	if x != nil {
		return x.ScheduleToCloseTimeout
	}
	return nil
}

func (x *ScheduleActivityTaskCommandAttributes) GetScheduleToStartTimeout() *durationpb.Duration {
	if x != nil {
		return x.ScheduleToStartTimeout
	}
	return nil
}

func (x *ScheduleActivityTaskCommandAttributes) GetStartToCloseTimeout() *durationpb.Duration {
	if x != nil {
		return x.StartToCloseTimeout
	}
	return nil
}

func (x *ScheduleActivityTaskCommandAttributes) GetHeartbeatTimeout() *durationpb.Duration {
	if x != nil {
		return x.HeartbeatTimeout
	}
	return nil
}

func (x *ScheduleActivityTaskCommandAttributes) GetRetryPolicy() *v1.RetryPolicy {
	if x != nil {
		return x.RetryPolicy
	}
	return nil
}

func (x *ScheduleActivityTaskCommandAttributes) GetRequestEagerExecution() bool {
	if x != nil {
		return x.RequestEagerExecution
	}
	return false
}

func (x *ScheduleActivityTaskCommandAttributes) GetUseWorkflowBuildId() bool {
	if x != nil {
		return x.UseWorkflowBuildId
	}
	return false
}

func (x *ScheduleActivityTaskCommandAttributes) GetPriority() *v1.Priority {
	if x != nil {
		return x.Priority
	}
	return nil
}

type RequestCancelActivityTaskCommandAttributes struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The `ACTIVITY_TASK_SCHEDULED` event id for the activity being cancelled.
	ScheduledEventId int64 `protobuf:"varint,1,opt,name=scheduled_event_id,json=scheduledEventId,proto3" json:"scheduled_event_id,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *RequestCancelActivityTaskCommandAttributes) Reset() {
	*x = RequestCancelActivityTaskCommandAttributes{}
	mi := &file_temporal_api_command_v1_message_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RequestCancelActivityTaskCommandAttributes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestCancelActivityTaskCommandAttributes) ProtoMessage() {}

func (x *RequestCancelActivityTaskCommandAttributes) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_api_command_v1_message_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestCancelActivityTaskCommandAttributes.ProtoReflect.Descriptor instead.
func (*RequestCancelActivityTaskCommandAttributes) Descriptor() ([]byte, []int) {
	return file_temporal_api_command_v1_message_proto_rawDescGZIP(), []int{1}
}

func (x *RequestCancelActivityTaskCommandAttributes) GetScheduledEventId() int64 {
	if x != nil {
		return x.ScheduledEventId
	}
	return 0
}

type StartTimerCommandAttributes struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// An id for the timer, currently live timers must have different ids. Typically autogenerated
	// by the SDK.
	TimerId string `protobuf:"bytes,1,opt,name=timer_id,json=timerId,proto3" json:"timer_id,omitempty"`
	// How long until the timer fires, producing a `TIMER_FIRED` event.
	//
	// (-- api-linter: core::0140::prepositions=disabled
	//
	//	aip.dev/not-precedent: "to" is used to indicate interval. --)
	StartToFireTimeout *durationpb.Duration `protobuf:"bytes,2,opt,name=start_to_fire_timeout,json=startToFireTimeout,proto3" json:"start_to_fire_timeout,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *StartTimerCommandAttributes) Reset() {
	*x = StartTimerCommandAttributes{}
	mi := &file_temporal_api_command_v1_message_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StartTimerCommandAttributes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartTimerCommandAttributes) ProtoMessage() {}

func (x *StartTimerCommandAttributes) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_api_command_v1_message_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartTimerCommandAttributes.ProtoReflect.Descriptor instead.
func (*StartTimerCommandAttributes) Descriptor() ([]byte, []int) {
	return file_temporal_api_command_v1_message_proto_rawDescGZIP(), []int{2}
}

func (x *StartTimerCommandAttributes) GetTimerId() string {
	if x != nil {
		return x.TimerId
	}
	return ""
}

func (x *StartTimerCommandAttributes) GetStartToFireTimeout() *durationpb.Duration {
	if x != nil {
		return x.StartToFireTimeout
	}
	return nil
}

type CompleteWorkflowExecutionCommandAttributes struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Result        *v1.Payloads           `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CompleteWorkflowExecutionCommandAttributes) Reset() {
	*x = CompleteWorkflowExecutionCommandAttributes{}
	mi := &file_temporal_api_command_v1_message_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CompleteWorkflowExecutionCommandAttributes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CompleteWorkflowExecutionCommandAttributes) ProtoMessage() {}

func (x *CompleteWorkflowExecutionCommandAttributes) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_api_command_v1_message_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CompleteWorkflowExecutionCommandAttributes.ProtoReflect.Descriptor instead.
func (*CompleteWorkflowExecutionCommandAttributes) Descriptor() ([]byte, []int) {
	return file_temporal_api_command_v1_message_proto_rawDescGZIP(), []int{3}
}

func (x *CompleteWorkflowExecutionCommandAttributes) GetResult() *v1.Payloads {
	if x != nil {
		return x.Result
	}
	return nil
}

type FailWorkflowExecutionCommandAttributes struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Failure       *v12.Failure           `protobuf:"bytes,1,opt,name=failure,proto3" json:"failure,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FailWorkflowExecutionCommandAttributes) Reset() {
	*x = FailWorkflowExecutionCommandAttributes{}
	mi := &file_temporal_api_command_v1_message_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FailWorkflowExecutionCommandAttributes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FailWorkflowExecutionCommandAttributes) ProtoMessage() {}

func (x *FailWorkflowExecutionCommandAttributes) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_api_command_v1_message_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FailWorkflowExecutionCommandAttributes.ProtoReflect.Descriptor instead.
func (*FailWorkflowExecutionCommandAttributes) Descriptor() ([]byte, []int) {
	return file_temporal_api_command_v1_message_proto_rawDescGZIP(), []int{4}
}

func (x *FailWorkflowExecutionCommandAttributes) GetFailure() *v12.Failure {
	if x != nil {
		return x.Failure
	}
	return nil
}

type CancelTimerCommandAttributes struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The same timer id from the start timer command
	TimerId       string `protobuf:"bytes,1,opt,name=timer_id,json=timerId,proto3" json:"timer_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CancelTimerCommandAttributes) Reset() {
	*x = CancelTimerCommandAttributes{}
	mi := &file_temporal_api_command_v1_message_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CancelTimerCommandAttributes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CancelTimerCommandAttributes) ProtoMessage() {}

func (x *CancelTimerCommandAttributes) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_api_command_v1_message_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CancelTimerCommandAttributes.ProtoReflect.Descriptor instead.
func (*CancelTimerCommandAttributes) Descriptor() ([]byte, []int) {
	return file_temporal_api_command_v1_message_proto_rawDescGZIP(), []int{5}
}

func (x *CancelTimerCommandAttributes) GetTimerId() string {
	if x != nil {
		return x.TimerId
	}
	return ""
}

type CancelWorkflowExecutionCommandAttributes struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Details       *v1.Payloads           `protobuf:"bytes,1,opt,name=details,proto3" json:"details,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CancelWorkflowExecutionCommandAttributes) Reset() {
	*x = CancelWorkflowExecutionCommandAttributes{}
	mi := &file_temporal_api_command_v1_message_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CancelWorkflowExecutionCommandAttributes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CancelWorkflowExecutionCommandAttributes) ProtoMessage() {}

func (x *CancelWorkflowExecutionCommandAttributes) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_api_command_v1_message_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CancelWorkflowExecutionCommandAttributes.ProtoReflect.Descriptor instead.
func (*CancelWorkflowExecutionCommandAttributes) Descriptor() ([]byte, []int) {
	return file_temporal_api_command_v1_message_proto_rawDescGZIP(), []int{6}
}

func (x *CancelWorkflowExecutionCommandAttributes) GetDetails() *v1.Payloads {
	if x != nil {
		return x.Details
	}
	return nil
}

type RequestCancelExternalWorkflowExecutionCommandAttributes struct {
	state      protoimpl.MessageState `protogen:"open.v1"`
	Namespace  string                 `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	WorkflowId string                 `protobuf:"bytes,2,opt,name=workflow_id,json=workflowId,proto3" json:"workflow_id,omitempty"`
	RunId      string                 `protobuf:"bytes,3,opt,name=run_id,json=runId,proto3" json:"run_id,omitempty"`
	// Deprecated.
	Control string `protobuf:"bytes,4,opt,name=control,proto3" json:"control,omitempty"`
	// Set this to true if the workflow being cancelled is a child of the workflow originating this
	// command. The request will be rejected if it is set to true and the target workflow is *not*
	// a child of the requesting workflow.
	ChildWorkflowOnly bool `protobuf:"varint,5,opt,name=child_workflow_only,json=childWorkflowOnly,proto3" json:"child_workflow_only,omitempty"`
	// Reason for requesting the cancellation
	Reason        string `protobuf:"bytes,6,opt,name=reason,proto3" json:"reason,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RequestCancelExternalWorkflowExecutionCommandAttributes) Reset() {
	*x = RequestCancelExternalWorkflowExecutionCommandAttributes{}
	mi := &file_temporal_api_command_v1_message_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RequestCancelExternalWorkflowExecutionCommandAttributes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestCancelExternalWorkflowExecutionCommandAttributes) ProtoMessage() {}

func (x *RequestCancelExternalWorkflowExecutionCommandAttributes) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_api_command_v1_message_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestCancelExternalWorkflowExecutionCommandAttributes.ProtoReflect.Descriptor instead.
func (*RequestCancelExternalWorkflowExecutionCommandAttributes) Descriptor() ([]byte, []int) {
	return file_temporal_api_command_v1_message_proto_rawDescGZIP(), []int{7}
}

func (x *RequestCancelExternalWorkflowExecutionCommandAttributes) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *RequestCancelExternalWorkflowExecutionCommandAttributes) GetWorkflowId() string {
	if x != nil {
		return x.WorkflowId
	}
	return ""
}

func (x *RequestCancelExternalWorkflowExecutionCommandAttributes) GetRunId() string {
	if x != nil {
		return x.RunId
	}
	return ""
}

func (x *RequestCancelExternalWorkflowExecutionCommandAttributes) GetControl() string {
	if x != nil {
		return x.Control
	}
	return ""
}

func (x *RequestCancelExternalWorkflowExecutionCommandAttributes) GetChildWorkflowOnly() bool {
	if x != nil {
		return x.ChildWorkflowOnly
	}
	return false
}

func (x *RequestCancelExternalWorkflowExecutionCommandAttributes) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

type SignalExternalWorkflowExecutionCommandAttributes struct {
	state     protoimpl.MessageState `protogen:"open.v1"`
	Namespace string                 `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Execution *v1.WorkflowExecution  `protobuf:"bytes,2,opt,name=execution,proto3" json:"execution,omitempty"`
	// The workflow author-defined name of the signal to send to the workflow.
	SignalName string `protobuf:"bytes,3,opt,name=signal_name,json=signalName,proto3" json:"signal_name,omitempty"`
	// Serialized value(s) to provide with the signal.
	Input *v1.Payloads `protobuf:"bytes,4,opt,name=input,proto3" json:"input,omitempty"`
	// Deprecated
	Control string `protobuf:"bytes,5,opt,name=control,proto3" json:"control,omitempty"`
	// Set this to true if the workflow being cancelled is a child of the workflow originating this
	// command. The request will be rejected if it is set to true and the target workflow is *not*
	// a child of the requesting workflow.
	ChildWorkflowOnly bool `protobuf:"varint,6,opt,name=child_workflow_only,json=childWorkflowOnly,proto3" json:"child_workflow_only,omitempty"`
	// Headers that are passed by the workflow that is sending a signal to the external
	// workflow that is receiving this signal.
	Header        *v1.Header `protobuf:"bytes,7,opt,name=header,proto3" json:"header,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SignalExternalWorkflowExecutionCommandAttributes) Reset() {
	*x = SignalExternalWorkflowExecutionCommandAttributes{}
	mi := &file_temporal_api_command_v1_message_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SignalExternalWorkflowExecutionCommandAttributes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignalExternalWorkflowExecutionCommandAttributes) ProtoMessage() {}

func (x *SignalExternalWorkflowExecutionCommandAttributes) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_api_command_v1_message_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignalExternalWorkflowExecutionCommandAttributes.ProtoReflect.Descriptor instead.
func (*SignalExternalWorkflowExecutionCommandAttributes) Descriptor() ([]byte, []int) {
	return file_temporal_api_command_v1_message_proto_rawDescGZIP(), []int{8}
}

func (x *SignalExternalWorkflowExecutionCommandAttributes) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *SignalExternalWorkflowExecutionCommandAttributes) GetExecution() *v1.WorkflowExecution {
	if x != nil {
		return x.Execution
	}
	return nil
}

func (x *SignalExternalWorkflowExecutionCommandAttributes) GetSignalName() string {
	if x != nil {
		return x.SignalName
	}
	return ""
}

func (x *SignalExternalWorkflowExecutionCommandAttributes) GetInput() *v1.Payloads {
	if x != nil {
		return x.Input
	}
	return nil
}

func (x *SignalExternalWorkflowExecutionCommandAttributes) GetControl() string {
	if x != nil {
		return x.Control
	}
	return ""
}

func (x *SignalExternalWorkflowExecutionCommandAttributes) GetChildWorkflowOnly() bool {
	if x != nil {
		return x.ChildWorkflowOnly
	}
	return false
}

func (x *SignalExternalWorkflowExecutionCommandAttributes) GetHeader() *v1.Header {
	if x != nil {
		return x.Header
	}
	return nil
}

type UpsertWorkflowSearchAttributesCommandAttributes struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	SearchAttributes *v1.SearchAttributes   `protobuf:"bytes,1,opt,name=search_attributes,json=searchAttributes,proto3" json:"search_attributes,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *UpsertWorkflowSearchAttributesCommandAttributes) Reset() {
	*x = UpsertWorkflowSearchAttributesCommandAttributes{}
	mi := &file_temporal_api_command_v1_message_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpsertWorkflowSearchAttributesCommandAttributes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpsertWorkflowSearchAttributesCommandAttributes) ProtoMessage() {}

func (x *UpsertWorkflowSearchAttributesCommandAttributes) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_api_command_v1_message_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpsertWorkflowSearchAttributesCommandAttributes.ProtoReflect.Descriptor instead.
func (*UpsertWorkflowSearchAttributesCommandAttributes) Descriptor() ([]byte, []int) {
	return file_temporal_api_command_v1_message_proto_rawDescGZIP(), []int{9}
}

func (x *UpsertWorkflowSearchAttributesCommandAttributes) GetSearchAttributes() *v1.SearchAttributes {
	if x != nil {
		return x.SearchAttributes
	}
	return nil
}

type ModifyWorkflowPropertiesCommandAttributes struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// If set, update the workflow memo with the provided values. The values will be merged with
	// the existing memo. If the user wants to delete values, a default/empty Payload should be
	// used as the value for the key being deleted.
	UpsertedMemo  *v1.Memo `protobuf:"bytes,1,opt,name=upserted_memo,json=upsertedMemo,proto3" json:"upserted_memo,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ModifyWorkflowPropertiesCommandAttributes) Reset() {
	*x = ModifyWorkflowPropertiesCommandAttributes{}
	mi := &file_temporal_api_command_v1_message_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ModifyWorkflowPropertiesCommandAttributes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModifyWorkflowPropertiesCommandAttributes) ProtoMessage() {}

func (x *ModifyWorkflowPropertiesCommandAttributes) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_api_command_v1_message_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModifyWorkflowPropertiesCommandAttributes.ProtoReflect.Descriptor instead.
func (*ModifyWorkflowPropertiesCommandAttributes) Descriptor() ([]byte, []int) {
	return file_temporal_api_command_v1_message_proto_rawDescGZIP(), []int{10}
}

func (x *ModifyWorkflowPropertiesCommandAttributes) GetUpsertedMemo() *v1.Memo {
	if x != nil {
		return x.UpsertedMemo
	}
	return nil
}

type RecordMarkerCommandAttributes struct {
	state         protoimpl.MessageState  `protogen:"open.v1"`
	MarkerName    string                  `protobuf:"bytes,1,opt,name=marker_name,json=markerName,proto3" json:"marker_name,omitempty"`
	Details       map[string]*v1.Payloads `protobuf:"bytes,2,rep,name=details,proto3" json:"details,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Header        *v1.Header              `protobuf:"bytes,3,opt,name=header,proto3" json:"header,omitempty"`
	Failure       *v12.Failure            `protobuf:"bytes,4,opt,name=failure,proto3" json:"failure,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RecordMarkerCommandAttributes) Reset() {
	*x = RecordMarkerCommandAttributes{}
	mi := &file_temporal_api_command_v1_message_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RecordMarkerCommandAttributes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecordMarkerCommandAttributes) ProtoMessage() {}

func (x *RecordMarkerCommandAttributes) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_api_command_v1_message_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecordMarkerCommandAttributes.ProtoReflect.Descriptor instead.
func (*RecordMarkerCommandAttributes) Descriptor() ([]byte, []int) {
	return file_temporal_api_command_v1_message_proto_rawDescGZIP(), []int{11}
}

func (x *RecordMarkerCommandAttributes) GetMarkerName() string {
	if x != nil {
		return x.MarkerName
	}
	return ""
}

func (x *RecordMarkerCommandAttributes) GetDetails() map[string]*v1.Payloads {
	if x != nil {
		return x.Details
	}
	return nil
}

func (x *RecordMarkerCommandAttributes) GetHeader() *v1.Header {
	if x != nil {
		return x.Header
	}
	return nil
}

func (x *RecordMarkerCommandAttributes) GetFailure() *v12.Failure {
	if x != nil {
		return x.Failure
	}
	return nil
}

type ContinueAsNewWorkflowExecutionCommandAttributes struct {
	state        protoimpl.MessageState `protogen:"open.v1"`
	WorkflowType *v1.WorkflowType       `protobuf:"bytes,1,opt,name=workflow_type,json=workflowType,proto3" json:"workflow_type,omitempty"`
	TaskQueue    *v11.TaskQueue         `protobuf:"bytes,2,opt,name=task_queue,json=taskQueue,proto3" json:"task_queue,omitempty"`
	Input        *v1.Payloads           `protobuf:"bytes,3,opt,name=input,proto3" json:"input,omitempty"`
	// Timeout of a single workflow run.
	WorkflowRunTimeout *durationpb.Duration `protobuf:"bytes,4,opt,name=workflow_run_timeout,json=workflowRunTimeout,proto3" json:"workflow_run_timeout,omitempty"`
	// Timeout of a single workflow task.
	WorkflowTaskTimeout *durationpb.Duration `protobuf:"bytes,5,opt,name=workflow_task_timeout,json=workflowTaskTimeout,proto3" json:"workflow_task_timeout,omitempty"`
	// How long the workflow start will be delayed - not really a "backoff" in the traditional sense.
	BackoffStartInterval *durationpb.Duration `protobuf:"bytes,6,opt,name=backoff_start_interval,json=backoffStartInterval,proto3" json:"backoff_start_interval,omitempty"`
	RetryPolicy          *v1.RetryPolicy      `protobuf:"bytes,7,opt,name=retry_policy,json=retryPolicy,proto3" json:"retry_policy,omitempty"`
	// Should be removed
	Initiator v13.ContinueAsNewInitiator `protobuf:"varint,8,opt,name=initiator,proto3,enum=temporal.api.enums.v1.ContinueAsNewInitiator" json:"initiator,omitempty"`
	// Should be removed
	Failure *v12.Failure `protobuf:"bytes,9,opt,name=failure,proto3" json:"failure,omitempty"`
	// Should be removed
	LastCompletionResult *v1.Payloads `protobuf:"bytes,10,opt,name=last_completion_result,json=lastCompletionResult,proto3" json:"last_completion_result,omitempty"`
	// Should be removed. Not necessarily unused but unclear and not exposed by SDKs.
	CronSchedule     string               `protobuf:"bytes,11,opt,name=cron_schedule,json=cronSchedule,proto3" json:"cron_schedule,omitempty"`
	Header           *v1.Header           `protobuf:"bytes,12,opt,name=header,proto3" json:"header,omitempty"`
	Memo             *v1.Memo             `protobuf:"bytes,13,opt,name=memo,proto3" json:"memo,omitempty"`
	SearchAttributes *v1.SearchAttributes `protobuf:"bytes,14,opt,name=search_attributes,json=searchAttributes,proto3" json:"search_attributes,omitempty"`
	// If this is set, the new execution inherits the Build ID of the current execution. Otherwise,
	// the assignment rules will be used to independently assign a Build ID to the new execution.
	InheritBuildId bool `protobuf:"varint,15,opt,name=inherit_build_id,json=inheritBuildId,proto3" json:"inherit_build_id,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *ContinueAsNewWorkflowExecutionCommandAttributes) Reset() {
	*x = ContinueAsNewWorkflowExecutionCommandAttributes{}
	mi := &file_temporal_api_command_v1_message_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ContinueAsNewWorkflowExecutionCommandAttributes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContinueAsNewWorkflowExecutionCommandAttributes) ProtoMessage() {}

func (x *ContinueAsNewWorkflowExecutionCommandAttributes) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_api_command_v1_message_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContinueAsNewWorkflowExecutionCommandAttributes.ProtoReflect.Descriptor instead.
func (*ContinueAsNewWorkflowExecutionCommandAttributes) Descriptor() ([]byte, []int) {
	return file_temporal_api_command_v1_message_proto_rawDescGZIP(), []int{12}
}

func (x *ContinueAsNewWorkflowExecutionCommandAttributes) GetWorkflowType() *v1.WorkflowType {
	if x != nil {
		return x.WorkflowType
	}
	return nil
}

func (x *ContinueAsNewWorkflowExecutionCommandAttributes) GetTaskQueue() *v11.TaskQueue {
	if x != nil {
		return x.TaskQueue
	}
	return nil
}

func (x *ContinueAsNewWorkflowExecutionCommandAttributes) GetInput() *v1.Payloads {
	if x != nil {
		return x.Input
	}
	return nil
}

func (x *ContinueAsNewWorkflowExecutionCommandAttributes) GetWorkflowRunTimeout() *durationpb.Duration {
	if x != nil {
		return x.WorkflowRunTimeout
	}
	return nil
}

func (x *ContinueAsNewWorkflowExecutionCommandAttributes) GetWorkflowTaskTimeout() *durationpb.Duration {
	if x != nil {
		return x.WorkflowTaskTimeout
	}
	return nil
}

func (x *ContinueAsNewWorkflowExecutionCommandAttributes) GetBackoffStartInterval() *durationpb.Duration {
	if x != nil {
		return x.BackoffStartInterval
	}
	return nil
}

func (x *ContinueAsNewWorkflowExecutionCommandAttributes) GetRetryPolicy() *v1.RetryPolicy {
	if x != nil {
		return x.RetryPolicy
	}
	return nil
}

func (x *ContinueAsNewWorkflowExecutionCommandAttributes) GetInitiator() v13.ContinueAsNewInitiator {
	if x != nil {
		return x.Initiator
	}
	return v13.ContinueAsNewInitiator(0)
}

func (x *ContinueAsNewWorkflowExecutionCommandAttributes) GetFailure() *v12.Failure {
	if x != nil {
		return x.Failure
	}
	return nil
}

func (x *ContinueAsNewWorkflowExecutionCommandAttributes) GetLastCompletionResult() *v1.Payloads {
	if x != nil {
		return x.LastCompletionResult
	}
	return nil
}

func (x *ContinueAsNewWorkflowExecutionCommandAttributes) GetCronSchedule() string {
	if x != nil {
		return x.CronSchedule
	}
	return ""
}

func (x *ContinueAsNewWorkflowExecutionCommandAttributes) GetHeader() *v1.Header {
	if x != nil {
		return x.Header
	}
	return nil
}

func (x *ContinueAsNewWorkflowExecutionCommandAttributes) GetMemo() *v1.Memo {
	if x != nil {
		return x.Memo
	}
	return nil
}

func (x *ContinueAsNewWorkflowExecutionCommandAttributes) GetSearchAttributes() *v1.SearchAttributes {
	if x != nil {
		return x.SearchAttributes
	}
	return nil
}

func (x *ContinueAsNewWorkflowExecutionCommandAttributes) GetInheritBuildId() bool {
	if x != nil {
		return x.InheritBuildId
	}
	return false
}

type StartChildWorkflowExecutionCommandAttributes struct {
	state        protoimpl.MessageState `protogen:"open.v1"`
	Namespace    string                 `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	WorkflowId   string                 `protobuf:"bytes,2,opt,name=workflow_id,json=workflowId,proto3" json:"workflow_id,omitempty"`
	WorkflowType *v1.WorkflowType       `protobuf:"bytes,3,opt,name=workflow_type,json=workflowType,proto3" json:"workflow_type,omitempty"`
	TaskQueue    *v11.TaskQueue         `protobuf:"bytes,4,opt,name=task_queue,json=taskQueue,proto3" json:"task_queue,omitempty"`
	Input        *v1.Payloads           `protobuf:"bytes,5,opt,name=input,proto3" json:"input,omitempty"`
	// Total workflow execution timeout including retries and continue as new.
	WorkflowExecutionTimeout *durationpb.Duration `protobuf:"bytes,6,opt,name=workflow_execution_timeout,json=workflowExecutionTimeout,proto3" json:"workflow_execution_timeout,omitempty"`
	// Timeout of a single workflow run.
	WorkflowRunTimeout *durationpb.Duration `protobuf:"bytes,7,opt,name=workflow_run_timeout,json=workflowRunTimeout,proto3" json:"workflow_run_timeout,omitempty"`
	// Timeout of a single workflow task.
	WorkflowTaskTimeout *durationpb.Duration `protobuf:"bytes,8,opt,name=workflow_task_timeout,json=workflowTaskTimeout,proto3" json:"workflow_task_timeout,omitempty"`
	// Default: PARENT_CLOSE_POLICY_TERMINATE.
	ParentClosePolicy v13.ParentClosePolicy `protobuf:"varint,9,opt,name=parent_close_policy,json=parentClosePolicy,proto3,enum=temporal.api.enums.v1.ParentClosePolicy" json:"parent_close_policy,omitempty"`
	Control           string                `protobuf:"bytes,10,opt,name=control,proto3" json:"control,omitempty"`
	// Default: WORKFLOW_ID_REUSE_POLICY_ALLOW_DUPLICATE.
	WorkflowIdReusePolicy v13.WorkflowIdReusePolicy `protobuf:"varint,11,opt,name=workflow_id_reuse_policy,json=workflowIdReusePolicy,proto3,enum=temporal.api.enums.v1.WorkflowIdReusePolicy" json:"workflow_id_reuse_policy,omitempty"`
	RetryPolicy           *v1.RetryPolicy           `protobuf:"bytes,12,opt,name=retry_policy,json=retryPolicy,proto3" json:"retry_policy,omitempty"`
	// Establish a cron schedule for the child workflow.
	CronSchedule     string               `protobuf:"bytes,13,opt,name=cron_schedule,json=cronSchedule,proto3" json:"cron_schedule,omitempty"`
	Header           *v1.Header           `protobuf:"bytes,14,opt,name=header,proto3" json:"header,omitempty"`
	Memo             *v1.Memo             `protobuf:"bytes,15,opt,name=memo,proto3" json:"memo,omitempty"`
	SearchAttributes *v1.SearchAttributes `protobuf:"bytes,16,opt,name=search_attributes,json=searchAttributes,proto3" json:"search_attributes,omitempty"`
	// If this is set, the child workflow inherits the Build ID of the parent. Otherwise, the assignment
	// rules of the child's Task Queue will be used to independently assign a Build ID to it.
	InheritBuildId bool `protobuf:"varint,17,opt,name=inherit_build_id,json=inheritBuildId,proto3" json:"inherit_build_id,omitempty"`
	// Priority metadata. If this message is not present, or any fields are not
	// present, they inherit the values from the workflow.
	Priority      *v1.Priority `protobuf:"bytes,18,opt,name=priority,proto3" json:"priority,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StartChildWorkflowExecutionCommandAttributes) Reset() {
	*x = StartChildWorkflowExecutionCommandAttributes{}
	mi := &file_temporal_api_command_v1_message_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StartChildWorkflowExecutionCommandAttributes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartChildWorkflowExecutionCommandAttributes) ProtoMessage() {}

func (x *StartChildWorkflowExecutionCommandAttributes) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_api_command_v1_message_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartChildWorkflowExecutionCommandAttributes.ProtoReflect.Descriptor instead.
func (*StartChildWorkflowExecutionCommandAttributes) Descriptor() ([]byte, []int) {
	return file_temporal_api_command_v1_message_proto_rawDescGZIP(), []int{13}
}

func (x *StartChildWorkflowExecutionCommandAttributes) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *StartChildWorkflowExecutionCommandAttributes) GetWorkflowId() string {
	if x != nil {
		return x.WorkflowId
	}
	return ""
}

func (x *StartChildWorkflowExecutionCommandAttributes) GetWorkflowType() *v1.WorkflowType {
	if x != nil {
		return x.WorkflowType
	}
	return nil
}

func (x *StartChildWorkflowExecutionCommandAttributes) GetTaskQueue() *v11.TaskQueue {
	if x != nil {
		return x.TaskQueue
	}
	return nil
}

func (x *StartChildWorkflowExecutionCommandAttributes) GetInput() *v1.Payloads {
	if x != nil {
		return x.Input
	}
	return nil
}

func (x *StartChildWorkflowExecutionCommandAttributes) GetWorkflowExecutionTimeout() *durationpb.Duration {
	if x != nil {
		return x.WorkflowExecutionTimeout
	}
	return nil
}

func (x *StartChildWorkflowExecutionCommandAttributes) GetWorkflowRunTimeout() *durationpb.Duration {
	if x != nil {
		return x.WorkflowRunTimeout
	}
	return nil
}

func (x *StartChildWorkflowExecutionCommandAttributes) GetWorkflowTaskTimeout() *durationpb.Duration {
	if x != nil {
		return x.WorkflowTaskTimeout
	}
	return nil
}

func (x *StartChildWorkflowExecutionCommandAttributes) GetParentClosePolicy() v13.ParentClosePolicy {
	if x != nil {
		return x.ParentClosePolicy
	}
	return v13.ParentClosePolicy(0)
}

func (x *StartChildWorkflowExecutionCommandAttributes) GetControl() string {
	if x != nil {
		return x.Control
	}
	return ""
}

func (x *StartChildWorkflowExecutionCommandAttributes) GetWorkflowIdReusePolicy() v13.WorkflowIdReusePolicy {
	if x != nil {
		return x.WorkflowIdReusePolicy
	}
	return v13.WorkflowIdReusePolicy(0)
}

func (x *StartChildWorkflowExecutionCommandAttributes) GetRetryPolicy() *v1.RetryPolicy {
	if x != nil {
		return x.RetryPolicy
	}
	return nil
}

func (x *StartChildWorkflowExecutionCommandAttributes) GetCronSchedule() string {
	if x != nil {
		return x.CronSchedule
	}
	return ""
}

func (x *StartChildWorkflowExecutionCommandAttributes) GetHeader() *v1.Header {
	if x != nil {
		return x.Header
	}
	return nil
}

func (x *StartChildWorkflowExecutionCommandAttributes) GetMemo() *v1.Memo {
	if x != nil {
		return x.Memo
	}
	return nil
}

func (x *StartChildWorkflowExecutionCommandAttributes) GetSearchAttributes() *v1.SearchAttributes {
	if x != nil {
		return x.SearchAttributes
	}
	return nil
}

func (x *StartChildWorkflowExecutionCommandAttributes) GetInheritBuildId() bool {
	if x != nil {
		return x.InheritBuildId
	}
	return false
}

func (x *StartChildWorkflowExecutionCommandAttributes) GetPriority() *v1.Priority {
	if x != nil {
		return x.Priority
	}
	return nil
}

type ProtocolMessageCommandAttributes struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The message ID of the message to which this command is a pointer.
	MessageId     string `protobuf:"bytes,1,opt,name=message_id,json=messageId,proto3" json:"message_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProtocolMessageCommandAttributes) Reset() {
	*x = ProtocolMessageCommandAttributes{}
	mi := &file_temporal_api_command_v1_message_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProtocolMessageCommandAttributes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtocolMessageCommandAttributes) ProtoMessage() {}

func (x *ProtocolMessageCommandAttributes) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_api_command_v1_message_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtocolMessageCommandAttributes.ProtoReflect.Descriptor instead.
func (*ProtocolMessageCommandAttributes) Descriptor() ([]byte, []int) {
	return file_temporal_api_command_v1_message_proto_rawDescGZIP(), []int{14}
}

func (x *ProtocolMessageCommandAttributes) GetMessageId() string {
	if x != nil {
		return x.MessageId
	}
	return ""
}

type ScheduleNexusOperationCommandAttributes struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Endpoint name, must exist in the endpoint registry or this command will fail.
	Endpoint string `protobuf:"bytes,1,opt,name=endpoint,proto3" json:"endpoint,omitempty"`
	// Service name.
	Service string `protobuf:"bytes,2,opt,name=service,proto3" json:"service,omitempty"`
	// Operation name.
	Operation string `protobuf:"bytes,3,opt,name=operation,proto3" json:"operation,omitempty"`
	// Input for the operation. The server converts this into Nexus request content and the appropriate content headers
	// internally when sending the StartOperation request. On the handler side, if it is also backed by Temporal, the
	// content is transformed back to the original Payload sent in this command.
	Input *v1.Payload `protobuf:"bytes,4,opt,name=input,proto3" json:"input,omitempty"`
	// Schedule-to-close timeout for this operation.
	// Indicates how long the caller is willing to wait for operation completion.
	// Calls are retried internally by the server.
	// (-- api-linter: core::0140::prepositions=disabled
	//
	//	aip.dev/not-precedent: "to" is used to indicate interval. --)
	ScheduleToCloseTimeout *durationpb.Duration `protobuf:"bytes,5,opt,name=schedule_to_close_timeout,json=scheduleToCloseTimeout,proto3" json:"schedule_to_close_timeout,omitempty"`
	// Header to attach to the Nexus request.
	// Users are responsible for encrypting sensitive data in this header as it is stored in workflow history and
	// transmitted to external services as-is.
	// This is useful for propagating tracing information.
	// Note these headers are not the same as Temporal headers on internal activities and child workflows, these are
	// transmitted to Nexus operations that may be external and are not traditional payloads.
	NexusHeader   map[string]string `protobuf:"bytes,6,rep,name=nexus_header,json=nexusHeader,proto3" json:"nexus_header,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ScheduleNexusOperationCommandAttributes) Reset() {
	*x = ScheduleNexusOperationCommandAttributes{}
	mi := &file_temporal_api_command_v1_message_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ScheduleNexusOperationCommandAttributes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScheduleNexusOperationCommandAttributes) ProtoMessage() {}

func (x *ScheduleNexusOperationCommandAttributes) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_api_command_v1_message_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScheduleNexusOperationCommandAttributes.ProtoReflect.Descriptor instead.
func (*ScheduleNexusOperationCommandAttributes) Descriptor() ([]byte, []int) {
	return file_temporal_api_command_v1_message_proto_rawDescGZIP(), []int{15}
}

func (x *ScheduleNexusOperationCommandAttributes) GetEndpoint() string {
	if x != nil {
		return x.Endpoint
	}
	return ""
}

func (x *ScheduleNexusOperationCommandAttributes) GetService() string {
	if x != nil {
		return x.Service
	}
	return ""
}

func (x *ScheduleNexusOperationCommandAttributes) GetOperation() string {
	if x != nil {
		return x.Operation
	}
	return ""
}

func (x *ScheduleNexusOperationCommandAttributes) GetInput() *v1.Payload {
	if x != nil {
		return x.Input
	}
	return nil
}

func (x *ScheduleNexusOperationCommandAttributes) GetScheduleToCloseTimeout() *durationpb.Duration {
	if x != nil {
		return x.ScheduleToCloseTimeout
	}
	return nil
}

func (x *ScheduleNexusOperationCommandAttributes) GetNexusHeader() map[string]string {
	if x != nil {
		return x.NexusHeader
	}
	return nil
}

type RequestCancelNexusOperationCommandAttributes struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The `NEXUS_OPERATION_SCHEDULED` event ID (a unique identifier) for the operation to be canceled.
	// The operation may ignore cancellation and end up with any completion state.
	ScheduledEventId int64 `protobuf:"varint,1,opt,name=scheduled_event_id,json=scheduledEventId,proto3" json:"scheduled_event_id,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *RequestCancelNexusOperationCommandAttributes) Reset() {
	*x = RequestCancelNexusOperationCommandAttributes{}
	mi := &file_temporal_api_command_v1_message_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RequestCancelNexusOperationCommandAttributes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestCancelNexusOperationCommandAttributes) ProtoMessage() {}

func (x *RequestCancelNexusOperationCommandAttributes) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_api_command_v1_message_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestCancelNexusOperationCommandAttributes.ProtoReflect.Descriptor instead.
func (*RequestCancelNexusOperationCommandAttributes) Descriptor() ([]byte, []int) {
	return file_temporal_api_command_v1_message_proto_rawDescGZIP(), []int{16}
}

func (x *RequestCancelNexusOperationCommandAttributes) GetScheduledEventId() int64 {
	if x != nil {
		return x.ScheduledEventId
	}
	return 0
}

type Command struct {
	state       protoimpl.MessageState `protogen:"open.v1"`
	CommandType v13.CommandType        `protobuf:"varint,1,opt,name=command_type,json=commandType,proto3,enum=temporal.api.enums.v1.CommandType" json:"command_type,omitempty"`
	// Metadata on the command. This is sometimes carried over to the history event if one is
	// created as a result of the command. Most commands won't have this information, and how this
	// information is used is dependent upon the interface that reads it.
	//
	// Current well-known uses:
	//   - start_child_workflow_execution_command_attributes - populates
	//     temporal.api.workflow.v1.WorkflowExecutionInfo.user_metadata where the summary and details
	//     are used by user interfaces to show fixed as-of-start workflow summary and details.
	//   - start_timer_command_attributes - populates temporal.api.history.v1.HistoryEvent for timer
	//     started where the summary is used to identify the timer.
	UserMetadata *v14.UserMetadata `protobuf:"bytes,301,opt,name=user_metadata,json=userMetadata,proto3" json:"user_metadata,omitempty"`
	// The command details. The type must match that in `command_type`.
	//
	// Types that are valid to be assigned to Attributes:
	//
	//	*Command_ScheduleActivityTaskCommandAttributes
	//	*Command_StartTimerCommandAttributes
	//	*Command_CompleteWorkflowExecutionCommandAttributes
	//	*Command_FailWorkflowExecutionCommandAttributes
	//	*Command_RequestCancelActivityTaskCommandAttributes
	//	*Command_CancelTimerCommandAttributes
	//	*Command_CancelWorkflowExecutionCommandAttributes
	//	*Command_RequestCancelExternalWorkflowExecutionCommandAttributes
	//	*Command_RecordMarkerCommandAttributes
	//	*Command_ContinueAsNewWorkflowExecutionCommandAttributes
	//	*Command_StartChildWorkflowExecutionCommandAttributes
	//	*Command_SignalExternalWorkflowExecutionCommandAttributes
	//	*Command_UpsertWorkflowSearchAttributesCommandAttributes
	//	*Command_ProtocolMessageCommandAttributes
	//	*Command_ModifyWorkflowPropertiesCommandAttributes
	//	*Command_ScheduleNexusOperationCommandAttributes
	//	*Command_RequestCancelNexusOperationCommandAttributes
	Attributes    isCommand_Attributes `protobuf_oneof:"attributes"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Command) Reset() {
	*x = Command{}
	mi := &file_temporal_api_command_v1_message_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Command) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Command) ProtoMessage() {}

func (x *Command) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_api_command_v1_message_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Command.ProtoReflect.Descriptor instead.
func (*Command) Descriptor() ([]byte, []int) {
	return file_temporal_api_command_v1_message_proto_rawDescGZIP(), []int{17}
}

func (x *Command) GetCommandType() v13.CommandType {
	if x != nil {
		return x.CommandType
	}
	return v13.CommandType(0)
}

func (x *Command) GetUserMetadata() *v14.UserMetadata {
	if x != nil {
		return x.UserMetadata
	}
	return nil
}

func (x *Command) GetAttributes() isCommand_Attributes {
	if x != nil {
		return x.Attributes
	}
	return nil
}

func (x *Command) GetScheduleActivityTaskCommandAttributes() *ScheduleActivityTaskCommandAttributes {
	if x != nil {
		if x, ok := x.Attributes.(*Command_ScheduleActivityTaskCommandAttributes); ok {
			return x.ScheduleActivityTaskCommandAttributes
		}
	}
	return nil
}

func (x *Command) GetStartTimerCommandAttributes() *StartTimerCommandAttributes {
	if x != nil {
		if x, ok := x.Attributes.(*Command_StartTimerCommandAttributes); ok {
			return x.StartTimerCommandAttributes
		}
	}
	return nil
}

func (x *Command) GetCompleteWorkflowExecutionCommandAttributes() *CompleteWorkflowExecutionCommandAttributes {
	if x != nil {
		if x, ok := x.Attributes.(*Command_CompleteWorkflowExecutionCommandAttributes); ok {
			return x.CompleteWorkflowExecutionCommandAttributes
		}
	}
	return nil
}

func (x *Command) GetFailWorkflowExecutionCommandAttributes() *FailWorkflowExecutionCommandAttributes {
	if x != nil {
		if x, ok := x.Attributes.(*Command_FailWorkflowExecutionCommandAttributes); ok {
			return x.FailWorkflowExecutionCommandAttributes
		}
	}
	return nil
}

func (x *Command) GetRequestCancelActivityTaskCommandAttributes() *RequestCancelActivityTaskCommandAttributes {
	if x != nil {
		if x, ok := x.Attributes.(*Command_RequestCancelActivityTaskCommandAttributes); ok {
			return x.RequestCancelActivityTaskCommandAttributes
		}
	}
	return nil
}

func (x *Command) GetCancelTimerCommandAttributes() *CancelTimerCommandAttributes {
	if x != nil {
		if x, ok := x.Attributes.(*Command_CancelTimerCommandAttributes); ok {
			return x.CancelTimerCommandAttributes
		}
	}
	return nil
}

func (x *Command) GetCancelWorkflowExecutionCommandAttributes() *CancelWorkflowExecutionCommandAttributes {
	if x != nil {
		if x, ok := x.Attributes.(*Command_CancelWorkflowExecutionCommandAttributes); ok {
			return x.CancelWorkflowExecutionCommandAttributes
		}
	}
	return nil
}

func (x *Command) GetRequestCancelExternalWorkflowExecutionCommandAttributes() *RequestCancelExternalWorkflowExecutionCommandAttributes {
	if x != nil {
		if x, ok := x.Attributes.(*Command_RequestCancelExternalWorkflowExecutionCommandAttributes); ok {
			return x.RequestCancelExternalWorkflowExecutionCommandAttributes
		}
	}
	return nil
}

func (x *Command) GetRecordMarkerCommandAttributes() *RecordMarkerCommandAttributes {
	if x != nil {
		if x, ok := x.Attributes.(*Command_RecordMarkerCommandAttributes); ok {
			return x.RecordMarkerCommandAttributes
		}
	}
	return nil
}

func (x *Command) GetContinueAsNewWorkflowExecutionCommandAttributes() *ContinueAsNewWorkflowExecutionCommandAttributes {
	if x != nil {
		if x, ok := x.Attributes.(*Command_ContinueAsNewWorkflowExecutionCommandAttributes); ok {
			return x.ContinueAsNewWorkflowExecutionCommandAttributes
		}
	}
	return nil
}

func (x *Command) GetStartChildWorkflowExecutionCommandAttributes() *StartChildWorkflowExecutionCommandAttributes {
	if x != nil {
		if x, ok := x.Attributes.(*Command_StartChildWorkflowExecutionCommandAttributes); ok {
			return x.StartChildWorkflowExecutionCommandAttributes
		}
	}
	return nil
}

func (x *Command) GetSignalExternalWorkflowExecutionCommandAttributes() *SignalExternalWorkflowExecutionCommandAttributes {
	if x != nil {
		if x, ok := x.Attributes.(*Command_SignalExternalWorkflowExecutionCommandAttributes); ok {
			return x.SignalExternalWorkflowExecutionCommandAttributes
		}
	}
	return nil
}

func (x *Command) GetUpsertWorkflowSearchAttributesCommandAttributes() *UpsertWorkflowSearchAttributesCommandAttributes {
	if x != nil {
		if x, ok := x.Attributes.(*Command_UpsertWorkflowSearchAttributesCommandAttributes); ok {
			return x.UpsertWorkflowSearchAttributesCommandAttributes
		}
	}
	return nil
}

func (x *Command) GetProtocolMessageCommandAttributes() *ProtocolMessageCommandAttributes {
	if x != nil {
		if x, ok := x.Attributes.(*Command_ProtocolMessageCommandAttributes); ok {
			return x.ProtocolMessageCommandAttributes
		}
	}
	return nil
}

func (x *Command) GetModifyWorkflowPropertiesCommandAttributes() *ModifyWorkflowPropertiesCommandAttributes {
	if x != nil {
		if x, ok := x.Attributes.(*Command_ModifyWorkflowPropertiesCommandAttributes); ok {
			return x.ModifyWorkflowPropertiesCommandAttributes
		}
	}
	return nil
}

func (x *Command) GetScheduleNexusOperationCommandAttributes() *ScheduleNexusOperationCommandAttributes {
	if x != nil {
		if x, ok := x.Attributes.(*Command_ScheduleNexusOperationCommandAttributes); ok {
			return x.ScheduleNexusOperationCommandAttributes
		}
	}
	return nil
}

func (x *Command) GetRequestCancelNexusOperationCommandAttributes() *RequestCancelNexusOperationCommandAttributes {
	if x != nil {
		if x, ok := x.Attributes.(*Command_RequestCancelNexusOperationCommandAttributes); ok {
			return x.RequestCancelNexusOperationCommandAttributes
		}
	}
	return nil
}

type isCommand_Attributes interface {
	isCommand_Attributes()
}

type Command_ScheduleActivityTaskCommandAttributes struct {
	ScheduleActivityTaskCommandAttributes *ScheduleActivityTaskCommandAttributes `protobuf:"bytes,2,opt,name=schedule_activity_task_command_attributes,json=scheduleActivityTaskCommandAttributes,proto3,oneof"`
}

type Command_StartTimerCommandAttributes struct {
	StartTimerCommandAttributes *StartTimerCommandAttributes `protobuf:"bytes,3,opt,name=start_timer_command_attributes,json=startTimerCommandAttributes,proto3,oneof"`
}

type Command_CompleteWorkflowExecutionCommandAttributes struct {
	CompleteWorkflowExecutionCommandAttributes *CompleteWorkflowExecutionCommandAttributes `protobuf:"bytes,4,opt,name=complete_workflow_execution_command_attributes,json=completeWorkflowExecutionCommandAttributes,proto3,oneof"`
}

type Command_FailWorkflowExecutionCommandAttributes struct {
	FailWorkflowExecutionCommandAttributes *FailWorkflowExecutionCommandAttributes `protobuf:"bytes,5,opt,name=fail_workflow_execution_command_attributes,json=failWorkflowExecutionCommandAttributes,proto3,oneof"`
}

type Command_RequestCancelActivityTaskCommandAttributes struct {
	RequestCancelActivityTaskCommandAttributes *RequestCancelActivityTaskCommandAttributes `protobuf:"bytes,6,opt,name=request_cancel_activity_task_command_attributes,json=requestCancelActivityTaskCommandAttributes,proto3,oneof"`
}

type Command_CancelTimerCommandAttributes struct {
	CancelTimerCommandAttributes *CancelTimerCommandAttributes `protobuf:"bytes,7,opt,name=cancel_timer_command_attributes,json=cancelTimerCommandAttributes,proto3,oneof"`
}

type Command_CancelWorkflowExecutionCommandAttributes struct {
	CancelWorkflowExecutionCommandAttributes *CancelWorkflowExecutionCommandAttributes `protobuf:"bytes,8,opt,name=cancel_workflow_execution_command_attributes,json=cancelWorkflowExecutionCommandAttributes,proto3,oneof"`
}

type Command_RequestCancelExternalWorkflowExecutionCommandAttributes struct {
	RequestCancelExternalWorkflowExecutionCommandAttributes *RequestCancelExternalWorkflowExecutionCommandAttributes `protobuf:"bytes,9,opt,name=request_cancel_external_workflow_execution_command_attributes,json=requestCancelExternalWorkflowExecutionCommandAttributes,proto3,oneof"`
}

type Command_RecordMarkerCommandAttributes struct {
	RecordMarkerCommandAttributes *RecordMarkerCommandAttributes `protobuf:"bytes,10,opt,name=record_marker_command_attributes,json=recordMarkerCommandAttributes,proto3,oneof"`
}

type Command_ContinueAsNewWorkflowExecutionCommandAttributes struct {
	ContinueAsNewWorkflowExecutionCommandAttributes *ContinueAsNewWorkflowExecutionCommandAttributes `protobuf:"bytes,11,opt,name=continue_as_new_workflow_execution_command_attributes,json=continueAsNewWorkflowExecutionCommandAttributes,proto3,oneof"`
}

type Command_StartChildWorkflowExecutionCommandAttributes struct {
	StartChildWorkflowExecutionCommandAttributes *StartChildWorkflowExecutionCommandAttributes `protobuf:"bytes,12,opt,name=start_child_workflow_execution_command_attributes,json=startChildWorkflowExecutionCommandAttributes,proto3,oneof"`
}

type Command_SignalExternalWorkflowExecutionCommandAttributes struct {
	SignalExternalWorkflowExecutionCommandAttributes *SignalExternalWorkflowExecutionCommandAttributes `protobuf:"bytes,13,opt,name=signal_external_workflow_execution_command_attributes,json=signalExternalWorkflowExecutionCommandAttributes,proto3,oneof"`
}

type Command_UpsertWorkflowSearchAttributesCommandAttributes struct {
	UpsertWorkflowSearchAttributesCommandAttributes *UpsertWorkflowSearchAttributesCommandAttributes `protobuf:"bytes,14,opt,name=upsert_workflow_search_attributes_command_attributes,json=upsertWorkflowSearchAttributesCommandAttributes,proto3,oneof"`
}

type Command_ProtocolMessageCommandAttributes struct {
	ProtocolMessageCommandAttributes *ProtocolMessageCommandAttributes `protobuf:"bytes,15,opt,name=protocol_message_command_attributes,json=protocolMessageCommandAttributes,proto3,oneof"`
}

type Command_ModifyWorkflowPropertiesCommandAttributes struct {
	// 16 is available for use - it was used as part of a prototype that never made it into a release
	ModifyWorkflowPropertiesCommandAttributes *ModifyWorkflowPropertiesCommandAttributes `protobuf:"bytes,17,opt,name=modify_workflow_properties_command_attributes,json=modifyWorkflowPropertiesCommandAttributes,proto3,oneof"`
}

type Command_ScheduleNexusOperationCommandAttributes struct {
	ScheduleNexusOperationCommandAttributes *ScheduleNexusOperationCommandAttributes `protobuf:"bytes,18,opt,name=schedule_nexus_operation_command_attributes,json=scheduleNexusOperationCommandAttributes,proto3,oneof"`
}

type Command_RequestCancelNexusOperationCommandAttributes struct {
	RequestCancelNexusOperationCommandAttributes *RequestCancelNexusOperationCommandAttributes `protobuf:"bytes,19,opt,name=request_cancel_nexus_operation_command_attributes,json=requestCancelNexusOperationCommandAttributes,proto3,oneof"`
}

func (*Command_ScheduleActivityTaskCommandAttributes) isCommand_Attributes() {}

func (*Command_StartTimerCommandAttributes) isCommand_Attributes() {}

func (*Command_CompleteWorkflowExecutionCommandAttributes) isCommand_Attributes() {}

func (*Command_FailWorkflowExecutionCommandAttributes) isCommand_Attributes() {}

func (*Command_RequestCancelActivityTaskCommandAttributes) isCommand_Attributes() {}

func (*Command_CancelTimerCommandAttributes) isCommand_Attributes() {}

func (*Command_CancelWorkflowExecutionCommandAttributes) isCommand_Attributes() {}

func (*Command_RequestCancelExternalWorkflowExecutionCommandAttributes) isCommand_Attributes() {}

func (*Command_RecordMarkerCommandAttributes) isCommand_Attributes() {}

func (*Command_ContinueAsNewWorkflowExecutionCommandAttributes) isCommand_Attributes() {}

func (*Command_StartChildWorkflowExecutionCommandAttributes) isCommand_Attributes() {}

func (*Command_SignalExternalWorkflowExecutionCommandAttributes) isCommand_Attributes() {}

func (*Command_UpsertWorkflowSearchAttributesCommandAttributes) isCommand_Attributes() {}

func (*Command_ProtocolMessageCommandAttributes) isCommand_Attributes() {}

func (*Command_ModifyWorkflowPropertiesCommandAttributes) isCommand_Attributes() {}

func (*Command_ScheduleNexusOperationCommandAttributes) isCommand_Attributes() {}

func (*Command_RequestCancelNexusOperationCommandAttributes) isCommand_Attributes() {}

var File_temporal_api_command_v1_message_proto protoreflect.FileDescriptor

const file_temporal_api_command_v1_message_proto_rawDesc = "" +
	"\n" +
	"%temporal/api/command/v1/message.proto\x12\x17temporal.api.command.v1\x1a\x1egoogle/protobuf/duration.proto\x1a$temporal/api/enums/v1/workflow.proto\x1a(temporal/api/enums/v1/command_type.proto\x1a$temporal/api/common/v1/message.proto\x1a%temporal/api/failure/v1/message.proto\x1a'temporal/api/taskqueue/v1/message.proto\x1a'temporal/api/sdk/v1/user_metadata.proto\"\x83\a\n" +
	"%ScheduleActivityTaskCommandAttributes\x12\x1f\n" +
	"\vactivity_id\x18\x01 \x01(\tR\n" +
	"activityId\x12I\n" +
	"\ractivity_type\x18\x02 \x01(\v2$.temporal.api.common.v1.ActivityTypeR\factivityType\x12C\n" +
	"\n" +
	"task_queue\x18\x04 \x01(\v2$.temporal.api.taskqueue.v1.TaskQueueR\ttaskQueue\x126\n" +
	"\x06header\x18\x05 \x01(\v2\x1e.temporal.api.common.v1.HeaderR\x06header\x126\n" +
	"\x05input\x18\x06 \x01(\v2 .temporal.api.common.v1.PayloadsR\x05input\x12T\n" +
	"\x19schedule_to_close_timeout\x18\a \x01(\v2\x19.google.protobuf.DurationR\x16scheduleToCloseTimeout\x12T\n" +
	"\x19schedule_to_start_timeout\x18\b \x01(\v2\x19.google.protobuf.DurationR\x16scheduleToStartTimeout\x12N\n" +
	"\x16start_to_close_timeout\x18\t \x01(\v2\x19.google.protobuf.DurationR\x13startToCloseTimeout\x12F\n" +
	"\x11heartbeat_timeout\x18\n" +
	" \x01(\v2\x19.google.protobuf.DurationR\x10heartbeatTimeout\x12F\n" +
	"\fretry_policy\x18\v \x01(\v2#.temporal.api.common.v1.RetryPolicyR\vretryPolicy\x126\n" +
	"\x17request_eager_execution\x18\f \x01(\bR\x15requestEagerExecution\x121\n" +
	"\x15use_workflow_build_id\x18\r \x01(\bR\x12useWorkflowBuildId\x12<\n" +
	"\bpriority\x18\x0e \x01(\v2 .temporal.api.common.v1.PriorityR\bpriorityJ\x04\b\x03\x10\x04\"Z\n" +
	"*RequestCancelActivityTaskCommandAttributes\x12,\n" +
	"\x12scheduled_event_id\x18\x01 \x01(\x03R\x10scheduledEventId\"\x86\x01\n" +
	"\x1bStartTimerCommandAttributes\x12\x19\n" +
	"\btimer_id\x18\x01 \x01(\tR\atimerId\x12L\n" +
	"\x15start_to_fire_timeout\x18\x02 \x01(\v2\x19.google.protobuf.DurationR\x12startToFireTimeout\"f\n" +
	"*CompleteWorkflowExecutionCommandAttributes\x128\n" +
	"\x06result\x18\x01 \x01(\v2 .temporal.api.common.v1.PayloadsR\x06result\"d\n" +
	"&FailWorkflowExecutionCommandAttributes\x12:\n" +
	"\afailure\x18\x01 \x01(\v2 .temporal.api.failure.v1.FailureR\afailure\"9\n" +
	"\x1cCancelTimerCommandAttributes\x12\x19\n" +
	"\btimer_id\x18\x01 \x01(\tR\atimerId\"f\n" +
	"(CancelWorkflowExecutionCommandAttributes\x12:\n" +
	"\adetails\x18\x01 \x01(\v2 .temporal.api.common.v1.PayloadsR\adetails\"\xf1\x01\n" +
	"7RequestCancelExternalWorkflowExecutionCommandAttributes\x12\x1c\n" +
	"\tnamespace\x18\x01 \x01(\tR\tnamespace\x12\x1f\n" +
	"\vworkflow_id\x18\x02 \x01(\tR\n" +
	"workflowId\x12\x15\n" +
	"\x06run_id\x18\x03 \x01(\tR\x05runId\x12\x18\n" +
	"\acontrol\x18\x04 \x01(\tR\acontrol\x12.\n" +
	"\x13child_workflow_only\x18\x05 \x01(\bR\x11childWorkflowOnly\x12\x16\n" +
	"\x06reason\x18\x06 \x01(\tR\x06reason\"\xf4\x02\n" +
	"0SignalExternalWorkflowExecutionCommandAttributes\x12\x1c\n" +
	"\tnamespace\x18\x01 \x01(\tR\tnamespace\x12G\n" +
	"\texecution\x18\x02 \x01(\v2).temporal.api.common.v1.WorkflowExecutionR\texecution\x12\x1f\n" +
	"\vsignal_name\x18\x03 \x01(\tR\n" +
	"signalName\x126\n" +
	"\x05input\x18\x04 \x01(\v2 .temporal.api.common.v1.PayloadsR\x05input\x12\x18\n" +
	"\acontrol\x18\x05 \x01(\tR\acontrol\x12.\n" +
	"\x13child_workflow_only\x18\x06 \x01(\bR\x11childWorkflowOnly\x126\n" +
	"\x06header\x18\a \x01(\v2\x1e.temporal.api.common.v1.HeaderR\x06header\"\x88\x01\n" +
	"/UpsertWorkflowSearchAttributesCommandAttributes\x12U\n" +
	"\x11search_attributes\x18\x01 \x01(\v2(.temporal.api.common.v1.SearchAttributesR\x10searchAttributes\"n\n" +
	")ModifyWorkflowPropertiesCommandAttributes\x12A\n" +
	"\rupserted_memo\x18\x01 \x01(\v2\x1c.temporal.api.common.v1.MemoR\fupsertedMemo\"\xf1\x02\n" +
	"\x1dRecordMarkerCommandAttributes\x12\x1f\n" +
	"\vmarker_name\x18\x01 \x01(\tR\n" +
	"markerName\x12]\n" +
	"\adetails\x18\x02 \x03(\v2C.temporal.api.command.v1.RecordMarkerCommandAttributes.DetailsEntryR\adetails\x126\n" +
	"\x06header\x18\x03 \x01(\v2\x1e.temporal.api.common.v1.HeaderR\x06header\x12:\n" +
	"\afailure\x18\x04 \x01(\v2 .temporal.api.failure.v1.FailureR\afailure\x1a\\\n" +
	"\fDetailsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x126\n" +
	"\x05value\x18\x02 \x01(\v2 .temporal.api.common.v1.PayloadsR\x05value:\x028\x01\"\x9f\b\n" +
	"/ContinueAsNewWorkflowExecutionCommandAttributes\x12I\n" +
	"\rworkflow_type\x18\x01 \x01(\v2$.temporal.api.common.v1.WorkflowTypeR\fworkflowType\x12C\n" +
	"\n" +
	"task_queue\x18\x02 \x01(\v2$.temporal.api.taskqueue.v1.TaskQueueR\ttaskQueue\x126\n" +
	"\x05input\x18\x03 \x01(\v2 .temporal.api.common.v1.PayloadsR\x05input\x12K\n" +
	"\x14workflow_run_timeout\x18\x04 \x01(\v2\x19.google.protobuf.DurationR\x12workflowRunTimeout\x12M\n" +
	"\x15workflow_task_timeout\x18\x05 \x01(\v2\x19.google.protobuf.DurationR\x13workflowTaskTimeout\x12O\n" +
	"\x16backoff_start_interval\x18\x06 \x01(\v2\x19.google.protobuf.DurationR\x14backoffStartInterval\x12F\n" +
	"\fretry_policy\x18\a \x01(\v2#.temporal.api.common.v1.RetryPolicyR\vretryPolicy\x12K\n" +
	"\tinitiator\x18\b \x01(\x0e2-.temporal.api.enums.v1.ContinueAsNewInitiatorR\tinitiator\x12:\n" +
	"\afailure\x18\t \x01(\v2 .temporal.api.failure.v1.FailureR\afailure\x12V\n" +
	"\x16last_completion_result\x18\n" +
	" \x01(\v2 .temporal.api.common.v1.PayloadsR\x14lastCompletionResult\x12#\n" +
	"\rcron_schedule\x18\v \x01(\tR\fcronSchedule\x126\n" +
	"\x06header\x18\f \x01(\v2\x1e.temporal.api.common.v1.HeaderR\x06header\x120\n" +
	"\x04memo\x18\r \x01(\v2\x1c.temporal.api.common.v1.MemoR\x04memo\x12U\n" +
	"\x11search_attributes\x18\x0e \x01(\v2(.temporal.api.common.v1.SearchAttributesR\x10searchAttributes\x12(\n" +
	"\x10inherit_build_id\x18\x0f \x01(\bR\x0einheritBuildId\"\x9b\t\n" +
	",StartChildWorkflowExecutionCommandAttributes\x12\x1c\n" +
	"\tnamespace\x18\x01 \x01(\tR\tnamespace\x12\x1f\n" +
	"\vworkflow_id\x18\x02 \x01(\tR\n" +
	"workflowId\x12I\n" +
	"\rworkflow_type\x18\x03 \x01(\v2$.temporal.api.common.v1.WorkflowTypeR\fworkflowType\x12C\n" +
	"\n" +
	"task_queue\x18\x04 \x01(\v2$.temporal.api.taskqueue.v1.TaskQueueR\ttaskQueue\x126\n" +
	"\x05input\x18\x05 \x01(\v2 .temporal.api.common.v1.PayloadsR\x05input\x12W\n" +
	"\x1aworkflow_execution_timeout\x18\x06 \x01(\v2\x19.google.protobuf.DurationR\x18workflowExecutionTimeout\x12K\n" +
	"\x14workflow_run_timeout\x18\a \x01(\v2\x19.google.protobuf.DurationR\x12workflowRunTimeout\x12M\n" +
	"\x15workflow_task_timeout\x18\b \x01(\v2\x19.google.protobuf.DurationR\x13workflowTaskTimeout\x12X\n" +
	"\x13parent_close_policy\x18\t \x01(\x0e2(.temporal.api.enums.v1.ParentClosePolicyR\x11parentClosePolicy\x12\x18\n" +
	"\acontrol\x18\n" +
	" \x01(\tR\acontrol\x12e\n" +
	"\x18workflow_id_reuse_policy\x18\v \x01(\x0e2,.temporal.api.enums.v1.WorkflowIdReusePolicyR\x15workflowIdReusePolicy\x12F\n" +
	"\fretry_policy\x18\f \x01(\v2#.temporal.api.common.v1.RetryPolicyR\vretryPolicy\x12#\n" +
	"\rcron_schedule\x18\r \x01(\tR\fcronSchedule\x126\n" +
	"\x06header\x18\x0e \x01(\v2\x1e.temporal.api.common.v1.HeaderR\x06header\x120\n" +
	"\x04memo\x18\x0f \x01(\v2\x1c.temporal.api.common.v1.MemoR\x04memo\x12U\n" +
	"\x11search_attributes\x18\x10 \x01(\v2(.temporal.api.common.v1.SearchAttributesR\x10searchAttributes\x12(\n" +
	"\x10inherit_build_id\x18\x11 \x01(\bR\x0einheritBuildId\x12<\n" +
	"\bpriority\x18\x12 \x01(\v2 .temporal.api.common.v1.PriorityR\bpriority\"A\n" +
	" ProtocolMessageCommandAttributes\x12\x1d\n" +
	"\n" +
	"message_id\x18\x01 \x01(\tR\tmessageId\"\xc0\x03\n" +
	"'ScheduleNexusOperationCommandAttributes\x12\x1a\n" +
	"\bendpoint\x18\x01 \x01(\tR\bendpoint\x12\x18\n" +
	"\aservice\x18\x02 \x01(\tR\aservice\x12\x1c\n" +
	"\toperation\x18\x03 \x01(\tR\toperation\x125\n" +
	"\x05input\x18\x04 \x01(\v2\x1f.temporal.api.common.v1.PayloadR\x05input\x12T\n" +
	"\x19schedule_to_close_timeout\x18\x05 \x01(\v2\x19.google.protobuf.DurationR\x16scheduleToCloseTimeout\x12t\n" +
	"\fnexus_header\x18\x06 \x03(\v2Q.temporal.api.command.v1.ScheduleNexusOperationCommandAttributes.NexusHeaderEntryR\vnexusHeader\x1a>\n" +
	"\x10NexusHeaderEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\\\n" +
	",RequestCancelNexusOperationCommandAttributes\x12,\n" +
	"\x12scheduled_event_id\x18\x01 \x01(\x03R\x10scheduledEventId\"\xb0\x17\n" +
	"\aCommand\x12E\n" +
	"\fcommand_type\x18\x01 \x01(\x0e2\".temporal.api.enums.v1.CommandTypeR\vcommandType\x12G\n" +
	"\ruser_metadata\x18\xad\x02 \x01(\v2!.temporal.api.sdk.v1.UserMetadataR\fuserMetadata\x12\x9a\x01\n" +
	")schedule_activity_task_command_attributes\x18\x02 \x01(\v2>.temporal.api.command.v1.ScheduleActivityTaskCommandAttributesH\x00R%scheduleActivityTaskCommandAttributes\x12{\n" +
	"\x1estart_timer_command_attributes\x18\x03 \x01(\v24.temporal.api.command.v1.StartTimerCommandAttributesH\x00R\x1bstartTimerCommandAttributes\x12\xa9\x01\n" +
	".complete_workflow_execution_command_attributes\x18\x04 \x01(\v2C.temporal.api.command.v1.CompleteWorkflowExecutionCommandAttributesH\x00R*completeWorkflowExecutionCommandAttributes\x12\x9d\x01\n" +
	"*fail_workflow_execution_command_attributes\x18\x05 \x01(\v2?.temporal.api.command.v1.FailWorkflowExecutionCommandAttributesH\x00R&failWorkflowExecutionCommandAttributes\x12\xaa\x01\n" +
	"/request_cancel_activity_task_command_attributes\x18\x06 \x01(\v2C.temporal.api.command.v1.RequestCancelActivityTaskCommandAttributesH\x00R*requestCancelActivityTaskCommandAttributes\x12~\n" +
	"\x1fcancel_timer_command_attributes\x18\a \x01(\v25.temporal.api.command.v1.CancelTimerCommandAttributesH\x00R\x1ccancelTimerCommandAttributes\x12\xa3\x01\n" +
	",cancel_workflow_execution_command_attributes\x18\b \x01(\v2A.temporal.api.command.v1.CancelWorkflowExecutionCommandAttributesH\x00R(cancelWorkflowExecutionCommandAttributes\x12\xd2\x01\n" +
	"=request_cancel_external_workflow_execution_command_attributes\x18\t \x01(\v2P.temporal.api.command.v1.RequestCancelExternalWorkflowExecutionCommandAttributesH\x00R7requestCancelExternalWorkflowExecutionCommandAttributes\x12\x81\x01\n" +
	" record_marker_command_attributes\x18\n" +
	" \x01(\v26.temporal.api.command.v1.RecordMarkerCommandAttributesH\x00R\x1drecordMarkerCommandAttributes\x12\xba\x01\n" +
	"5continue_as_new_workflow_execution_command_attributes\x18\v \x01(\v2H.temporal.api.command.v1.ContinueAsNewWorkflowExecutionCommandAttributesH\x00R/continueAsNewWorkflowExecutionCommandAttributes\x12\xb0\x01\n" +
	"1start_child_workflow_execution_command_attributes\x18\f \x01(\v2E.temporal.api.command.v1.StartChildWorkflowExecutionCommandAttributesH\x00R,startChildWorkflowExecutionCommandAttributes\x12\xbc\x01\n" +
	"5signal_external_workflow_execution_command_attributes\x18\r \x01(\v2I.temporal.api.command.v1.SignalExternalWorkflowExecutionCommandAttributesH\x00R0signalExternalWorkflowExecutionCommandAttributes\x12\xb9\x01\n" +
	"4upsert_workflow_search_attributes_command_attributes\x18\x0e \x01(\v2H.temporal.api.command.v1.UpsertWorkflowSearchAttributesCommandAttributesH\x00R/upsertWorkflowSearchAttributesCommandAttributes\x12\x8a\x01\n" +
	"#protocol_message_command_attributes\x18\x0f \x01(\v29.temporal.api.command.v1.ProtocolMessageCommandAttributesH\x00R protocolMessageCommandAttributes\x12\xa6\x01\n" +
	"-modify_workflow_properties_command_attributes\x18\x11 \x01(\v2B.temporal.api.command.v1.ModifyWorkflowPropertiesCommandAttributesH\x00R)modifyWorkflowPropertiesCommandAttributes\x12\xa0\x01\n" +
	"+schedule_nexus_operation_command_attributes\x18\x12 \x01(\v2@.temporal.api.command.v1.ScheduleNexusOperationCommandAttributesH\x00R'scheduleNexusOperationCommandAttributes\x12\xb0\x01\n" +
	"1request_cancel_nexus_operation_command_attributes\x18\x13 \x01(\v2E.temporal.api.command.v1.RequestCancelNexusOperationCommandAttributesH\x00R,requestCancelNexusOperationCommandAttributesB\f\n" +
	"\n" +
	"attributesB\x8e\x01\n" +
	"\x1aio.temporal.api.command.v1B\fMessageProtoP\x01Z%go.temporal.io/api/command/v1;command\xaa\x02\x19Temporalio.Api.Command.V1\xea\x02\x1cTemporalio::Api::Command::V1b\x06proto3"

var (
	file_temporal_api_command_v1_message_proto_rawDescOnce sync.Once
	file_temporal_api_command_v1_message_proto_rawDescData []byte
)

func file_temporal_api_command_v1_message_proto_rawDescGZIP() []byte {
	file_temporal_api_command_v1_message_proto_rawDescOnce.Do(func() {
		file_temporal_api_command_v1_message_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_temporal_api_command_v1_message_proto_rawDesc), len(file_temporal_api_command_v1_message_proto_rawDesc)))
	})
	return file_temporal_api_command_v1_message_proto_rawDescData
}

var file_temporal_api_command_v1_message_proto_msgTypes = make([]protoimpl.MessageInfo, 20)
var file_temporal_api_command_v1_message_proto_goTypes = []any{
	(*ScheduleActivityTaskCommandAttributes)(nil),                   // 0: temporal.api.command.v1.ScheduleActivityTaskCommandAttributes
	(*RequestCancelActivityTaskCommandAttributes)(nil),              // 1: temporal.api.command.v1.RequestCancelActivityTaskCommandAttributes
	(*StartTimerCommandAttributes)(nil),                             // 2: temporal.api.command.v1.StartTimerCommandAttributes
	(*CompleteWorkflowExecutionCommandAttributes)(nil),              // 3: temporal.api.command.v1.CompleteWorkflowExecutionCommandAttributes
	(*FailWorkflowExecutionCommandAttributes)(nil),                  // 4: temporal.api.command.v1.FailWorkflowExecutionCommandAttributes
	(*CancelTimerCommandAttributes)(nil),                            // 5: temporal.api.command.v1.CancelTimerCommandAttributes
	(*CancelWorkflowExecutionCommandAttributes)(nil),                // 6: temporal.api.command.v1.CancelWorkflowExecutionCommandAttributes
	(*RequestCancelExternalWorkflowExecutionCommandAttributes)(nil), // 7: temporal.api.command.v1.RequestCancelExternalWorkflowExecutionCommandAttributes
	(*SignalExternalWorkflowExecutionCommandAttributes)(nil),        // 8: temporal.api.command.v1.SignalExternalWorkflowExecutionCommandAttributes
	(*UpsertWorkflowSearchAttributesCommandAttributes)(nil),         // 9: temporal.api.command.v1.UpsertWorkflowSearchAttributesCommandAttributes
	(*ModifyWorkflowPropertiesCommandAttributes)(nil),               // 10: temporal.api.command.v1.ModifyWorkflowPropertiesCommandAttributes
	(*RecordMarkerCommandAttributes)(nil),                           // 11: temporal.api.command.v1.RecordMarkerCommandAttributes
	(*ContinueAsNewWorkflowExecutionCommandAttributes)(nil),         // 12: temporal.api.command.v1.ContinueAsNewWorkflowExecutionCommandAttributes
	(*StartChildWorkflowExecutionCommandAttributes)(nil),            // 13: temporal.api.command.v1.StartChildWorkflowExecutionCommandAttributes
	(*ProtocolMessageCommandAttributes)(nil),                        // 14: temporal.api.command.v1.ProtocolMessageCommandAttributes
	(*ScheduleNexusOperationCommandAttributes)(nil),                 // 15: temporal.api.command.v1.ScheduleNexusOperationCommandAttributes
	(*RequestCancelNexusOperationCommandAttributes)(nil),            // 16: temporal.api.command.v1.RequestCancelNexusOperationCommandAttributes
	(*Command)(nil),                 // 17: temporal.api.command.v1.Command
	nil,                             // 18: temporal.api.command.v1.RecordMarkerCommandAttributes.DetailsEntry
	nil,                             // 19: temporal.api.command.v1.ScheduleNexusOperationCommandAttributes.NexusHeaderEntry
	(*v1.ActivityType)(nil),         // 20: temporal.api.common.v1.ActivityType
	(*v11.TaskQueue)(nil),           // 21: temporal.api.taskqueue.v1.TaskQueue
	(*v1.Header)(nil),               // 22: temporal.api.common.v1.Header
	(*v1.Payloads)(nil),             // 23: temporal.api.common.v1.Payloads
	(*durationpb.Duration)(nil),     // 24: google.protobuf.Duration
	(*v1.RetryPolicy)(nil),          // 25: temporal.api.common.v1.RetryPolicy
	(*v1.Priority)(nil),             // 26: temporal.api.common.v1.Priority
	(*v12.Failure)(nil),             // 27: temporal.api.failure.v1.Failure
	(*v1.WorkflowExecution)(nil),    // 28: temporal.api.common.v1.WorkflowExecution
	(*v1.SearchAttributes)(nil),     // 29: temporal.api.common.v1.SearchAttributes
	(*v1.Memo)(nil),                 // 30: temporal.api.common.v1.Memo
	(*v1.WorkflowType)(nil),         // 31: temporal.api.common.v1.WorkflowType
	(v13.ContinueAsNewInitiator)(0), // 32: temporal.api.enums.v1.ContinueAsNewInitiator
	(v13.ParentClosePolicy)(0),      // 33: temporal.api.enums.v1.ParentClosePolicy
	(v13.WorkflowIdReusePolicy)(0),  // 34: temporal.api.enums.v1.WorkflowIdReusePolicy
	(*v1.Payload)(nil),              // 35: temporal.api.common.v1.Payload
	(v13.CommandType)(0),            // 36: temporal.api.enums.v1.CommandType
	(*v14.UserMetadata)(nil),        // 37: temporal.api.sdk.v1.UserMetadata
}
var file_temporal_api_command_v1_message_proto_depIdxs = []int32{
	20, // 0: temporal.api.command.v1.ScheduleActivityTaskCommandAttributes.activity_type:type_name -> temporal.api.common.v1.ActivityType
	21, // 1: temporal.api.command.v1.ScheduleActivityTaskCommandAttributes.task_queue:type_name -> temporal.api.taskqueue.v1.TaskQueue
	22, // 2: temporal.api.command.v1.ScheduleActivityTaskCommandAttributes.header:type_name -> temporal.api.common.v1.Header
	23, // 3: temporal.api.command.v1.ScheduleActivityTaskCommandAttributes.input:type_name -> temporal.api.common.v1.Payloads
	24, // 4: temporal.api.command.v1.ScheduleActivityTaskCommandAttributes.schedule_to_close_timeout:type_name -> google.protobuf.Duration
	24, // 5: temporal.api.command.v1.ScheduleActivityTaskCommandAttributes.schedule_to_start_timeout:type_name -> google.protobuf.Duration
	24, // 6: temporal.api.command.v1.ScheduleActivityTaskCommandAttributes.start_to_close_timeout:type_name -> google.protobuf.Duration
	24, // 7: temporal.api.command.v1.ScheduleActivityTaskCommandAttributes.heartbeat_timeout:type_name -> google.protobuf.Duration
	25, // 8: temporal.api.command.v1.ScheduleActivityTaskCommandAttributes.retry_policy:type_name -> temporal.api.common.v1.RetryPolicy
	26, // 9: temporal.api.command.v1.ScheduleActivityTaskCommandAttributes.priority:type_name -> temporal.api.common.v1.Priority
	24, // 10: temporal.api.command.v1.StartTimerCommandAttributes.start_to_fire_timeout:type_name -> google.protobuf.Duration
	23, // 11: temporal.api.command.v1.CompleteWorkflowExecutionCommandAttributes.result:type_name -> temporal.api.common.v1.Payloads
	27, // 12: temporal.api.command.v1.FailWorkflowExecutionCommandAttributes.failure:type_name -> temporal.api.failure.v1.Failure
	23, // 13: temporal.api.command.v1.CancelWorkflowExecutionCommandAttributes.details:type_name -> temporal.api.common.v1.Payloads
	28, // 14: temporal.api.command.v1.SignalExternalWorkflowExecutionCommandAttributes.execution:type_name -> temporal.api.common.v1.WorkflowExecution
	23, // 15: temporal.api.command.v1.SignalExternalWorkflowExecutionCommandAttributes.input:type_name -> temporal.api.common.v1.Payloads
	22, // 16: temporal.api.command.v1.SignalExternalWorkflowExecutionCommandAttributes.header:type_name -> temporal.api.common.v1.Header
	29, // 17: temporal.api.command.v1.UpsertWorkflowSearchAttributesCommandAttributes.search_attributes:type_name -> temporal.api.common.v1.SearchAttributes
	30, // 18: temporal.api.command.v1.ModifyWorkflowPropertiesCommandAttributes.upserted_memo:type_name -> temporal.api.common.v1.Memo
	18, // 19: temporal.api.command.v1.RecordMarkerCommandAttributes.details:type_name -> temporal.api.command.v1.RecordMarkerCommandAttributes.DetailsEntry
	22, // 20: temporal.api.command.v1.RecordMarkerCommandAttributes.header:type_name -> temporal.api.common.v1.Header
	27, // 21: temporal.api.command.v1.RecordMarkerCommandAttributes.failure:type_name -> temporal.api.failure.v1.Failure
	31, // 22: temporal.api.command.v1.ContinueAsNewWorkflowExecutionCommandAttributes.workflow_type:type_name -> temporal.api.common.v1.WorkflowType
	21, // 23: temporal.api.command.v1.ContinueAsNewWorkflowExecutionCommandAttributes.task_queue:type_name -> temporal.api.taskqueue.v1.TaskQueue
	23, // 24: temporal.api.command.v1.ContinueAsNewWorkflowExecutionCommandAttributes.input:type_name -> temporal.api.common.v1.Payloads
	24, // 25: temporal.api.command.v1.ContinueAsNewWorkflowExecutionCommandAttributes.workflow_run_timeout:type_name -> google.protobuf.Duration
	24, // 26: temporal.api.command.v1.ContinueAsNewWorkflowExecutionCommandAttributes.workflow_task_timeout:type_name -> google.protobuf.Duration
	24, // 27: temporal.api.command.v1.ContinueAsNewWorkflowExecutionCommandAttributes.backoff_start_interval:type_name -> google.protobuf.Duration
	25, // 28: temporal.api.command.v1.ContinueAsNewWorkflowExecutionCommandAttributes.retry_policy:type_name -> temporal.api.common.v1.RetryPolicy
	32, // 29: temporal.api.command.v1.ContinueAsNewWorkflowExecutionCommandAttributes.initiator:type_name -> temporal.api.enums.v1.ContinueAsNewInitiator
	27, // 30: temporal.api.command.v1.ContinueAsNewWorkflowExecutionCommandAttributes.failure:type_name -> temporal.api.failure.v1.Failure
	23, // 31: temporal.api.command.v1.ContinueAsNewWorkflowExecutionCommandAttributes.last_completion_result:type_name -> temporal.api.common.v1.Payloads
	22, // 32: temporal.api.command.v1.ContinueAsNewWorkflowExecutionCommandAttributes.header:type_name -> temporal.api.common.v1.Header
	30, // 33: temporal.api.command.v1.ContinueAsNewWorkflowExecutionCommandAttributes.memo:type_name -> temporal.api.common.v1.Memo
	29, // 34: temporal.api.command.v1.ContinueAsNewWorkflowExecutionCommandAttributes.search_attributes:type_name -> temporal.api.common.v1.SearchAttributes
	31, // 35: temporal.api.command.v1.StartChildWorkflowExecutionCommandAttributes.workflow_type:type_name -> temporal.api.common.v1.WorkflowType
	21, // 36: temporal.api.command.v1.StartChildWorkflowExecutionCommandAttributes.task_queue:type_name -> temporal.api.taskqueue.v1.TaskQueue
	23, // 37: temporal.api.command.v1.StartChildWorkflowExecutionCommandAttributes.input:type_name -> temporal.api.common.v1.Payloads
	24, // 38: temporal.api.command.v1.StartChildWorkflowExecutionCommandAttributes.workflow_execution_timeout:type_name -> google.protobuf.Duration
	24, // 39: temporal.api.command.v1.StartChildWorkflowExecutionCommandAttributes.workflow_run_timeout:type_name -> google.protobuf.Duration
	24, // 40: temporal.api.command.v1.StartChildWorkflowExecutionCommandAttributes.workflow_task_timeout:type_name -> google.protobuf.Duration
	33, // 41: temporal.api.command.v1.StartChildWorkflowExecutionCommandAttributes.parent_close_policy:type_name -> temporal.api.enums.v1.ParentClosePolicy
	34, // 42: temporal.api.command.v1.StartChildWorkflowExecutionCommandAttributes.workflow_id_reuse_policy:type_name -> temporal.api.enums.v1.WorkflowIdReusePolicy
	25, // 43: temporal.api.command.v1.StartChildWorkflowExecutionCommandAttributes.retry_policy:type_name -> temporal.api.common.v1.RetryPolicy
	22, // 44: temporal.api.command.v1.StartChildWorkflowExecutionCommandAttributes.header:type_name -> temporal.api.common.v1.Header
	30, // 45: temporal.api.command.v1.StartChildWorkflowExecutionCommandAttributes.memo:type_name -> temporal.api.common.v1.Memo
	29, // 46: temporal.api.command.v1.StartChildWorkflowExecutionCommandAttributes.search_attributes:type_name -> temporal.api.common.v1.SearchAttributes
	26, // 47: temporal.api.command.v1.StartChildWorkflowExecutionCommandAttributes.priority:type_name -> temporal.api.common.v1.Priority
	35, // 48: temporal.api.command.v1.ScheduleNexusOperationCommandAttributes.input:type_name -> temporal.api.common.v1.Payload
	24, // 49: temporal.api.command.v1.ScheduleNexusOperationCommandAttributes.schedule_to_close_timeout:type_name -> google.protobuf.Duration
	19, // 50: temporal.api.command.v1.ScheduleNexusOperationCommandAttributes.nexus_header:type_name -> temporal.api.command.v1.ScheduleNexusOperationCommandAttributes.NexusHeaderEntry
	36, // 51: temporal.api.command.v1.Command.command_type:type_name -> temporal.api.enums.v1.CommandType
	37, // 52: temporal.api.command.v1.Command.user_metadata:type_name -> temporal.api.sdk.v1.UserMetadata
	0,  // 53: temporal.api.command.v1.Command.schedule_activity_task_command_attributes:type_name -> temporal.api.command.v1.ScheduleActivityTaskCommandAttributes
	2,  // 54: temporal.api.command.v1.Command.start_timer_command_attributes:type_name -> temporal.api.command.v1.StartTimerCommandAttributes
	3,  // 55: temporal.api.command.v1.Command.complete_workflow_execution_command_attributes:type_name -> temporal.api.command.v1.CompleteWorkflowExecutionCommandAttributes
	4,  // 56: temporal.api.command.v1.Command.fail_workflow_execution_command_attributes:type_name -> temporal.api.command.v1.FailWorkflowExecutionCommandAttributes
	1,  // 57: temporal.api.command.v1.Command.request_cancel_activity_task_command_attributes:type_name -> temporal.api.command.v1.RequestCancelActivityTaskCommandAttributes
	5,  // 58: temporal.api.command.v1.Command.cancel_timer_command_attributes:type_name -> temporal.api.command.v1.CancelTimerCommandAttributes
	6,  // 59: temporal.api.command.v1.Command.cancel_workflow_execution_command_attributes:type_name -> temporal.api.command.v1.CancelWorkflowExecutionCommandAttributes
	7,  // 60: temporal.api.command.v1.Command.request_cancel_external_workflow_execution_command_attributes:type_name -> temporal.api.command.v1.RequestCancelExternalWorkflowExecutionCommandAttributes
	11, // 61: temporal.api.command.v1.Command.record_marker_command_attributes:type_name -> temporal.api.command.v1.RecordMarkerCommandAttributes
	12, // 62: temporal.api.command.v1.Command.continue_as_new_workflow_execution_command_attributes:type_name -> temporal.api.command.v1.ContinueAsNewWorkflowExecutionCommandAttributes
	13, // 63: temporal.api.command.v1.Command.start_child_workflow_execution_command_attributes:type_name -> temporal.api.command.v1.StartChildWorkflowExecutionCommandAttributes
	8,  // 64: temporal.api.command.v1.Command.signal_external_workflow_execution_command_attributes:type_name -> temporal.api.command.v1.SignalExternalWorkflowExecutionCommandAttributes
	9,  // 65: temporal.api.command.v1.Command.upsert_workflow_search_attributes_command_attributes:type_name -> temporal.api.command.v1.UpsertWorkflowSearchAttributesCommandAttributes
	14, // 66: temporal.api.command.v1.Command.protocol_message_command_attributes:type_name -> temporal.api.command.v1.ProtocolMessageCommandAttributes
	10, // 67: temporal.api.command.v1.Command.modify_workflow_properties_command_attributes:type_name -> temporal.api.command.v1.ModifyWorkflowPropertiesCommandAttributes
	15, // 68: temporal.api.command.v1.Command.schedule_nexus_operation_command_attributes:type_name -> temporal.api.command.v1.ScheduleNexusOperationCommandAttributes
	16, // 69: temporal.api.command.v1.Command.request_cancel_nexus_operation_command_attributes:type_name -> temporal.api.command.v1.RequestCancelNexusOperationCommandAttributes
	23, // 70: temporal.api.command.v1.RecordMarkerCommandAttributes.DetailsEntry.value:type_name -> temporal.api.common.v1.Payloads
	71, // [71:71] is the sub-list for method output_type
	71, // [71:71] is the sub-list for method input_type
	71, // [71:71] is the sub-list for extension type_name
	71, // [71:71] is the sub-list for extension extendee
	0,  // [0:71] is the sub-list for field type_name
}

func init() { file_temporal_api_command_v1_message_proto_init() }
func file_temporal_api_command_v1_message_proto_init() {
	if File_temporal_api_command_v1_message_proto != nil {
		return
	}
	file_temporal_api_command_v1_message_proto_msgTypes[17].OneofWrappers = []any{
		(*Command_ScheduleActivityTaskCommandAttributes)(nil),
		(*Command_StartTimerCommandAttributes)(nil),
		(*Command_CompleteWorkflowExecutionCommandAttributes)(nil),
		(*Command_FailWorkflowExecutionCommandAttributes)(nil),
		(*Command_RequestCancelActivityTaskCommandAttributes)(nil),
		(*Command_CancelTimerCommandAttributes)(nil),
		(*Command_CancelWorkflowExecutionCommandAttributes)(nil),
		(*Command_RequestCancelExternalWorkflowExecutionCommandAttributes)(nil),
		(*Command_RecordMarkerCommandAttributes)(nil),
		(*Command_ContinueAsNewWorkflowExecutionCommandAttributes)(nil),
		(*Command_StartChildWorkflowExecutionCommandAttributes)(nil),
		(*Command_SignalExternalWorkflowExecutionCommandAttributes)(nil),
		(*Command_UpsertWorkflowSearchAttributesCommandAttributes)(nil),
		(*Command_ProtocolMessageCommandAttributes)(nil),
		(*Command_ModifyWorkflowPropertiesCommandAttributes)(nil),
		(*Command_ScheduleNexusOperationCommandAttributes)(nil),
		(*Command_RequestCancelNexusOperationCommandAttributes)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_temporal_api_command_v1_message_proto_rawDesc), len(file_temporal_api_command_v1_message_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   20,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_temporal_api_command_v1_message_proto_goTypes,
		DependencyIndexes: file_temporal_api_command_v1_message_proto_depIdxs,
		MessageInfos:      file_temporal_api_command_v1_message_proto_msgTypes,
	}.Build()
	File_temporal_api_command_v1_message_proto = out.File
	file_temporal_api_command_v1_message_proto_goTypes = nil
	file_temporal_api_command_v1_message_proto_depIdxs = nil
}
