// Code generated by protoc-gen-go. DO NOT EDIT.
// plugins:
// 	protoc-gen-go
// 	protoc
// source: temporal/api/namespace/v1/message.proto

package namespace

import (
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"

	v1 "go.temporal.io/api/enums/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type NamespaceInfo struct {
	state       protoimpl.MessageState `protogen:"open.v1"`
	Name        string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	State       v1.NamespaceState      `protobuf:"varint,2,opt,name=state,proto3,enum=temporal.api.enums.v1.NamespaceState" json:"state,omitempty"`
	Description string                 `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	OwnerEmail  string                 `protobuf:"bytes,4,opt,name=owner_email,json=ownerEmail,proto3" json:"owner_email,omitempty"`
	// A key-value map for any customized purpose.
	Data map[string]string `protobuf:"bytes,5,rep,name=data,proto3" json:"data,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Id   string            `protobuf:"bytes,6,opt,name=id,proto3" json:"id,omitempty"`
	// All capabilities the namespace supports.
	Capabilities *NamespaceInfo_Capabilities `protobuf:"bytes,7,opt,name=capabilities,proto3" json:"capabilities,omitempty"`
	// Whether scheduled workflows are supported on this namespace. This is only needed
	// temporarily while the feature is experimental, so we can give it a high tag.
	SupportsSchedules bool `protobuf:"varint,100,opt,name=supports_schedules,json=supportsSchedules,proto3" json:"supports_schedules,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *NamespaceInfo) Reset() {
	*x = NamespaceInfo{}
	mi := &file_temporal_api_namespace_v1_message_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NamespaceInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NamespaceInfo) ProtoMessage() {}

func (x *NamespaceInfo) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_api_namespace_v1_message_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NamespaceInfo.ProtoReflect.Descriptor instead.
func (*NamespaceInfo) Descriptor() ([]byte, []int) {
	return file_temporal_api_namespace_v1_message_proto_rawDescGZIP(), []int{0}
}

func (x *NamespaceInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *NamespaceInfo) GetState() v1.NamespaceState {
	if x != nil {
		return x.State
	}
	return v1.NamespaceState(0)
}

func (x *NamespaceInfo) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *NamespaceInfo) GetOwnerEmail() string {
	if x != nil {
		return x.OwnerEmail
	}
	return ""
}

func (x *NamespaceInfo) GetData() map[string]string {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *NamespaceInfo) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *NamespaceInfo) GetCapabilities() *NamespaceInfo_Capabilities {
	if x != nil {
		return x.Capabilities
	}
	return nil
}

func (x *NamespaceInfo) GetSupportsSchedules() bool {
	if x != nil {
		return x.SupportsSchedules
	}
	return false
}

type NamespaceConfig struct {
	state                         protoimpl.MessageState `protogen:"open.v1"`
	WorkflowExecutionRetentionTtl *durationpb.Duration   `protobuf:"bytes,1,opt,name=workflow_execution_retention_ttl,json=workflowExecutionRetentionTtl,proto3" json:"workflow_execution_retention_ttl,omitempty"`
	BadBinaries                   *BadBinaries           `protobuf:"bytes,2,opt,name=bad_binaries,json=badBinaries,proto3" json:"bad_binaries,omitempty"`
	// If unspecified (ARCHIVAL_STATE_UNSPECIFIED) then default server configuration is used.
	HistoryArchivalState v1.ArchivalState `protobuf:"varint,3,opt,name=history_archival_state,json=historyArchivalState,proto3,enum=temporal.api.enums.v1.ArchivalState" json:"history_archival_state,omitempty"`
	HistoryArchivalUri   string           `protobuf:"bytes,4,opt,name=history_archival_uri,json=historyArchivalUri,proto3" json:"history_archival_uri,omitempty"`
	// If unspecified (ARCHIVAL_STATE_UNSPECIFIED) then default server configuration is used.
	VisibilityArchivalState v1.ArchivalState `protobuf:"varint,5,opt,name=visibility_archival_state,json=visibilityArchivalState,proto3,enum=temporal.api.enums.v1.ArchivalState" json:"visibility_archival_state,omitempty"`
	VisibilityArchivalUri   string           `protobuf:"bytes,6,opt,name=visibility_archival_uri,json=visibilityArchivalUri,proto3" json:"visibility_archival_uri,omitempty"`
	// Map from field name to alias.
	CustomSearchAttributeAliases map[string]string `protobuf:"bytes,7,rep,name=custom_search_attribute_aliases,json=customSearchAttributeAliases,proto3" json:"custom_search_attribute_aliases,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields                protoimpl.UnknownFields
	sizeCache                    protoimpl.SizeCache
}

func (x *NamespaceConfig) Reset() {
	*x = NamespaceConfig{}
	mi := &file_temporal_api_namespace_v1_message_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NamespaceConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NamespaceConfig) ProtoMessage() {}

func (x *NamespaceConfig) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_api_namespace_v1_message_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NamespaceConfig.ProtoReflect.Descriptor instead.
func (*NamespaceConfig) Descriptor() ([]byte, []int) {
	return file_temporal_api_namespace_v1_message_proto_rawDescGZIP(), []int{1}
}

func (x *NamespaceConfig) GetWorkflowExecutionRetentionTtl() *durationpb.Duration {
	if x != nil {
		return x.WorkflowExecutionRetentionTtl
	}
	return nil
}

func (x *NamespaceConfig) GetBadBinaries() *BadBinaries {
	if x != nil {
		return x.BadBinaries
	}
	return nil
}

func (x *NamespaceConfig) GetHistoryArchivalState() v1.ArchivalState {
	if x != nil {
		return x.HistoryArchivalState
	}
	return v1.ArchivalState(0)
}

func (x *NamespaceConfig) GetHistoryArchivalUri() string {
	if x != nil {
		return x.HistoryArchivalUri
	}
	return ""
}

func (x *NamespaceConfig) GetVisibilityArchivalState() v1.ArchivalState {
	if x != nil {
		return x.VisibilityArchivalState
	}
	return v1.ArchivalState(0)
}

func (x *NamespaceConfig) GetVisibilityArchivalUri() string {
	if x != nil {
		return x.VisibilityArchivalUri
	}
	return ""
}

func (x *NamespaceConfig) GetCustomSearchAttributeAliases() map[string]string {
	if x != nil {
		return x.CustomSearchAttributeAliases
	}
	return nil
}

type BadBinaries struct {
	state         protoimpl.MessageState    `protogen:"open.v1"`
	Binaries      map[string]*BadBinaryInfo `protobuf:"bytes,1,rep,name=binaries,proto3" json:"binaries,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BadBinaries) Reset() {
	*x = BadBinaries{}
	mi := &file_temporal_api_namespace_v1_message_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BadBinaries) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BadBinaries) ProtoMessage() {}

func (x *BadBinaries) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_api_namespace_v1_message_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BadBinaries.ProtoReflect.Descriptor instead.
func (*BadBinaries) Descriptor() ([]byte, []int) {
	return file_temporal_api_namespace_v1_message_proto_rawDescGZIP(), []int{2}
}

func (x *BadBinaries) GetBinaries() map[string]*BadBinaryInfo {
	if x != nil {
		return x.Binaries
	}
	return nil
}

type BadBinaryInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Reason        string                 `protobuf:"bytes,1,opt,name=reason,proto3" json:"reason,omitempty"`
	Operator      string                 `protobuf:"bytes,2,opt,name=operator,proto3" json:"operator,omitempty"`
	CreateTime    *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BadBinaryInfo) Reset() {
	*x = BadBinaryInfo{}
	mi := &file_temporal_api_namespace_v1_message_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BadBinaryInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BadBinaryInfo) ProtoMessage() {}

func (x *BadBinaryInfo) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_api_namespace_v1_message_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BadBinaryInfo.ProtoReflect.Descriptor instead.
func (*BadBinaryInfo) Descriptor() ([]byte, []int) {
	return file_temporal_api_namespace_v1_message_proto_rawDescGZIP(), []int{3}
}

func (x *BadBinaryInfo) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

func (x *BadBinaryInfo) GetOperator() string {
	if x != nil {
		return x.Operator
	}
	return ""
}

func (x *BadBinaryInfo) GetCreateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.CreateTime
	}
	return nil
}

type UpdateNamespaceInfo struct {
	state       protoimpl.MessageState `protogen:"open.v1"`
	Description string                 `protobuf:"bytes,1,opt,name=description,proto3" json:"description,omitempty"`
	OwnerEmail  string                 `protobuf:"bytes,2,opt,name=owner_email,json=ownerEmail,proto3" json:"owner_email,omitempty"`
	// A key-value map for any customized purpose.
	// If data already exists on the namespace,
	// this will merge with the existing key values.
	Data map[string]string `protobuf:"bytes,3,rep,name=data,proto3" json:"data,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// New namespace state, server will reject if transition is not allowed.
	// Allowed transitions are:
	//
	//	Registered -> [ Deleted | Deprecated | Handover ]
	//	Handover -> [ Registered ]
	//
	// Default is NAMESPACE_STATE_UNSPECIFIED which is do not change state.
	State         v1.NamespaceState `protobuf:"varint,4,opt,name=state,proto3,enum=temporal.api.enums.v1.NamespaceState" json:"state,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateNamespaceInfo) Reset() {
	*x = UpdateNamespaceInfo{}
	mi := &file_temporal_api_namespace_v1_message_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateNamespaceInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateNamespaceInfo) ProtoMessage() {}

func (x *UpdateNamespaceInfo) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_api_namespace_v1_message_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateNamespaceInfo.ProtoReflect.Descriptor instead.
func (*UpdateNamespaceInfo) Descriptor() ([]byte, []int) {
	return file_temporal_api_namespace_v1_message_proto_rawDescGZIP(), []int{4}
}

func (x *UpdateNamespaceInfo) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *UpdateNamespaceInfo) GetOwnerEmail() string {
	if x != nil {
		return x.OwnerEmail
	}
	return ""
}

func (x *UpdateNamespaceInfo) GetData() map[string]string {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *UpdateNamespaceInfo) GetState() v1.NamespaceState {
	if x != nil {
		return x.State
	}
	return v1.NamespaceState(0)
}

type NamespaceFilter struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// By default namespaces in NAMESPACE_STATE_DELETED state are not included.
	// Setting include_deleted to true will include deleted namespaces.
	// Note: Namespace is in NAMESPACE_STATE_DELETED state when it was deleted from the system but associated data is not deleted yet.
	IncludeDeleted bool `protobuf:"varint,1,opt,name=include_deleted,json=includeDeleted,proto3" json:"include_deleted,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *NamespaceFilter) Reset() {
	*x = NamespaceFilter{}
	mi := &file_temporal_api_namespace_v1_message_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NamespaceFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NamespaceFilter) ProtoMessage() {}

func (x *NamespaceFilter) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_api_namespace_v1_message_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NamespaceFilter.ProtoReflect.Descriptor instead.
func (*NamespaceFilter) Descriptor() ([]byte, []int) {
	return file_temporal_api_namespace_v1_message_proto_rawDescGZIP(), []int{5}
}

func (x *NamespaceFilter) GetIncludeDeleted() bool {
	if x != nil {
		return x.IncludeDeleted
	}
	return false
}

// Namespace capability details. Should contain what features are enabled in a namespace.
type NamespaceInfo_Capabilities struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// True if the namespace supports eager workflow start.
	EagerWorkflowStart bool `protobuf:"varint,1,opt,name=eager_workflow_start,json=eagerWorkflowStart,proto3" json:"eager_workflow_start,omitempty"`
	// True if the namespace supports sync update
	SyncUpdate bool `protobuf:"varint,2,opt,name=sync_update,json=syncUpdate,proto3" json:"sync_update,omitempty"`
	// True if the namespace supports async update
	AsyncUpdate   bool `protobuf:"varint,3,opt,name=async_update,json=asyncUpdate,proto3" json:"async_update,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NamespaceInfo_Capabilities) Reset() {
	*x = NamespaceInfo_Capabilities{}
	mi := &file_temporal_api_namespace_v1_message_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NamespaceInfo_Capabilities) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NamespaceInfo_Capabilities) ProtoMessage() {}

func (x *NamespaceInfo_Capabilities) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_api_namespace_v1_message_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NamespaceInfo_Capabilities.ProtoReflect.Descriptor instead.
func (*NamespaceInfo_Capabilities) Descriptor() ([]byte, []int) {
	return file_temporal_api_namespace_v1_message_proto_rawDescGZIP(), []int{0, 1}
}

func (x *NamespaceInfo_Capabilities) GetEagerWorkflowStart() bool {
	if x != nil {
		return x.EagerWorkflowStart
	}
	return false
}

func (x *NamespaceInfo_Capabilities) GetSyncUpdate() bool {
	if x != nil {
		return x.SyncUpdate
	}
	return false
}

func (x *NamespaceInfo_Capabilities) GetAsyncUpdate() bool {
	if x != nil {
		return x.AsyncUpdate
	}
	return false
}

var File_temporal_api_namespace_v1_message_proto protoreflect.FileDescriptor

const file_temporal_api_namespace_v1_message_proto_rawDesc = "" +
	"\n" +
	"'temporal/api/namespace/v1/message.proto\x12\x19temporal.api.namespace.v1\x1a\x1egoogle/protobuf/duration.proto\x1a\x1fgoogle/protobuf/timestamp.proto\x1a%temporal/api/enums/v1/namespace.proto\"\xc5\x04\n" +
	"\rNamespaceInfo\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12;\n" +
	"\x05state\x18\x02 \x01(\x0e2%.temporal.api.enums.v1.NamespaceStateR\x05state\x12 \n" +
	"\vdescription\x18\x03 \x01(\tR\vdescription\x12\x1f\n" +
	"\vowner_email\x18\x04 \x01(\tR\n" +
	"ownerEmail\x12F\n" +
	"\x04data\x18\x05 \x03(\v22.temporal.api.namespace.v1.NamespaceInfo.DataEntryR\x04data\x12\x0e\n" +
	"\x02id\x18\x06 \x01(\tR\x02id\x12Y\n" +
	"\fcapabilities\x18\a \x01(\v25.temporal.api.namespace.v1.NamespaceInfo.CapabilitiesR\fcapabilities\x12-\n" +
	"\x12supports_schedules\x18d \x01(\bR\x11supportsSchedules\x1a7\n" +
	"\tDataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\x1a\x84\x01\n" +
	"\fCapabilities\x120\n" +
	"\x14eager_workflow_start\x18\x01 \x01(\bR\x12eagerWorkflowStart\x12\x1f\n" +
	"\vsync_update\x18\x02 \x01(\bR\n" +
	"syncUpdate\x12!\n" +
	"\fasync_update\x18\x03 \x01(\bR\vasyncUpdate\"\xcf\x05\n" +
	"\x0fNamespaceConfig\x12b\n" +
	" workflow_execution_retention_ttl\x18\x01 \x01(\v2\x19.google.protobuf.DurationR\x1dworkflowExecutionRetentionTtl\x12I\n" +
	"\fbad_binaries\x18\x02 \x01(\v2&.temporal.api.namespace.v1.BadBinariesR\vbadBinaries\x12Z\n" +
	"\x16history_archival_state\x18\x03 \x01(\x0e2$.temporal.api.enums.v1.ArchivalStateR\x14historyArchivalState\x120\n" +
	"\x14history_archival_uri\x18\x04 \x01(\tR\x12historyArchivalUri\x12`\n" +
	"\x19visibility_archival_state\x18\x05 \x01(\x0e2$.temporal.api.enums.v1.ArchivalStateR\x17visibilityArchivalState\x126\n" +
	"\x17visibility_archival_uri\x18\x06 \x01(\tR\x15visibilityArchivalUri\x12\x93\x01\n" +
	"\x1fcustom_search_attribute_aliases\x18\a \x03(\v2L.temporal.api.namespace.v1.NamespaceConfig.CustomSearchAttributeAliasesEntryR\x1ccustomSearchAttributeAliases\x1aO\n" +
	"!CustomSearchAttributeAliasesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xc6\x01\n" +
	"\vBadBinaries\x12P\n" +
	"\bbinaries\x18\x01 \x03(\v24.temporal.api.namespace.v1.BadBinaries.BinariesEntryR\bbinaries\x1ae\n" +
	"\rBinariesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12>\n" +
	"\x05value\x18\x02 \x01(\v2(.temporal.api.namespace.v1.BadBinaryInfoR\x05value:\x028\x01\"\x80\x01\n" +
	"\rBadBinaryInfo\x12\x16\n" +
	"\x06reason\x18\x01 \x01(\tR\x06reason\x12\x1a\n" +
	"\boperator\x18\x02 \x01(\tR\boperator\x12;\n" +
	"\vcreate_time\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\n" +
	"createTime\"\x9c\x02\n" +
	"\x13UpdateNamespaceInfo\x12 \n" +
	"\vdescription\x18\x01 \x01(\tR\vdescription\x12\x1f\n" +
	"\vowner_email\x18\x02 \x01(\tR\n" +
	"ownerEmail\x12L\n" +
	"\x04data\x18\x03 \x03(\v28.temporal.api.namespace.v1.UpdateNamespaceInfo.DataEntryR\x04data\x12;\n" +
	"\x05state\x18\x04 \x01(\x0e2%.temporal.api.enums.v1.NamespaceStateR\x05state\x1a7\n" +
	"\tDataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\":\n" +
	"\x0fNamespaceFilter\x12'\n" +
	"\x0finclude_deleted\x18\x01 \x01(\bR\x0eincludeDeletedB\x98\x01\n" +
	"\x1cio.temporal.api.namespace.v1B\fMessageProtoP\x01Z)go.temporal.io/api/namespace/v1;namespace\xaa\x02\x1bTemporalio.Api.Namespace.V1\xea\x02\x1eTemporalio::Api::Namespace::V1b\x06proto3"

var (
	file_temporal_api_namespace_v1_message_proto_rawDescOnce sync.Once
	file_temporal_api_namespace_v1_message_proto_rawDescData []byte
)

func file_temporal_api_namespace_v1_message_proto_rawDescGZIP() []byte {
	file_temporal_api_namespace_v1_message_proto_rawDescOnce.Do(func() {
		file_temporal_api_namespace_v1_message_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_temporal_api_namespace_v1_message_proto_rawDesc), len(file_temporal_api_namespace_v1_message_proto_rawDesc)))
	})
	return file_temporal_api_namespace_v1_message_proto_rawDescData
}

var file_temporal_api_namespace_v1_message_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_temporal_api_namespace_v1_message_proto_goTypes = []any{
	(*NamespaceInfo)(nil),              // 0: temporal.api.namespace.v1.NamespaceInfo
	(*NamespaceConfig)(nil),            // 1: temporal.api.namespace.v1.NamespaceConfig
	(*BadBinaries)(nil),                // 2: temporal.api.namespace.v1.BadBinaries
	(*BadBinaryInfo)(nil),              // 3: temporal.api.namespace.v1.BadBinaryInfo
	(*UpdateNamespaceInfo)(nil),        // 4: temporal.api.namespace.v1.UpdateNamespaceInfo
	(*NamespaceFilter)(nil),            // 5: temporal.api.namespace.v1.NamespaceFilter
	nil,                                // 6: temporal.api.namespace.v1.NamespaceInfo.DataEntry
	(*NamespaceInfo_Capabilities)(nil), // 7: temporal.api.namespace.v1.NamespaceInfo.Capabilities
	nil,                                // 8: temporal.api.namespace.v1.NamespaceConfig.CustomSearchAttributeAliasesEntry
	nil,                                // 9: temporal.api.namespace.v1.BadBinaries.BinariesEntry
	nil,                                // 10: temporal.api.namespace.v1.UpdateNamespaceInfo.DataEntry
	(v1.NamespaceState)(0),             // 11: temporal.api.enums.v1.NamespaceState
	(*durationpb.Duration)(nil),        // 12: google.protobuf.Duration
	(v1.ArchivalState)(0),              // 13: temporal.api.enums.v1.ArchivalState
	(*timestamppb.Timestamp)(nil),      // 14: google.protobuf.Timestamp
}
var file_temporal_api_namespace_v1_message_proto_depIdxs = []int32{
	11, // 0: temporal.api.namespace.v1.NamespaceInfo.state:type_name -> temporal.api.enums.v1.NamespaceState
	6,  // 1: temporal.api.namespace.v1.NamespaceInfo.data:type_name -> temporal.api.namespace.v1.NamespaceInfo.DataEntry
	7,  // 2: temporal.api.namespace.v1.NamespaceInfo.capabilities:type_name -> temporal.api.namespace.v1.NamespaceInfo.Capabilities
	12, // 3: temporal.api.namespace.v1.NamespaceConfig.workflow_execution_retention_ttl:type_name -> google.protobuf.Duration
	2,  // 4: temporal.api.namespace.v1.NamespaceConfig.bad_binaries:type_name -> temporal.api.namespace.v1.BadBinaries
	13, // 5: temporal.api.namespace.v1.NamespaceConfig.history_archival_state:type_name -> temporal.api.enums.v1.ArchivalState
	13, // 6: temporal.api.namespace.v1.NamespaceConfig.visibility_archival_state:type_name -> temporal.api.enums.v1.ArchivalState
	8,  // 7: temporal.api.namespace.v1.NamespaceConfig.custom_search_attribute_aliases:type_name -> temporal.api.namespace.v1.NamespaceConfig.CustomSearchAttributeAliasesEntry
	9,  // 8: temporal.api.namespace.v1.BadBinaries.binaries:type_name -> temporal.api.namespace.v1.BadBinaries.BinariesEntry
	14, // 9: temporal.api.namespace.v1.BadBinaryInfo.create_time:type_name -> google.protobuf.Timestamp
	10, // 10: temporal.api.namespace.v1.UpdateNamespaceInfo.data:type_name -> temporal.api.namespace.v1.UpdateNamespaceInfo.DataEntry
	11, // 11: temporal.api.namespace.v1.UpdateNamespaceInfo.state:type_name -> temporal.api.enums.v1.NamespaceState
	3,  // 12: temporal.api.namespace.v1.BadBinaries.BinariesEntry.value:type_name -> temporal.api.namespace.v1.BadBinaryInfo
	13, // [13:13] is the sub-list for method output_type
	13, // [13:13] is the sub-list for method input_type
	13, // [13:13] is the sub-list for extension type_name
	13, // [13:13] is the sub-list for extension extendee
	0,  // [0:13] is the sub-list for field type_name
}

func init() { file_temporal_api_namespace_v1_message_proto_init() }
func file_temporal_api_namespace_v1_message_proto_init() {
	if File_temporal_api_namespace_v1_message_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_temporal_api_namespace_v1_message_proto_rawDesc), len(file_temporal_api_namespace_v1_message_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_temporal_api_namespace_v1_message_proto_goTypes,
		DependencyIndexes: file_temporal_api_namespace_v1_message_proto_depIdxs,
		MessageInfos:      file_temporal_api_namespace_v1_message_proto_msgTypes,
	}.Build()
	File_temporal_api_namespace_v1_message_proto = out.File
	file_temporal_api_namespace_v1_message_proto_goTypes = nil
	file_temporal_api_namespace_v1_message_proto_depIdxs = nil
}
