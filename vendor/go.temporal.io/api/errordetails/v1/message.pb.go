// Code generated by protoc-gen-go. DO NOT EDIT.
// plugins:
// 	protoc-gen-go
// 	protoc
// source: temporal/api/errordetails/v1/message.proto

// These error details are supplied in google.rpc.Status#details as described in "Google APIs, Error Model" (https://cloud.google.com/apis/design/errors#error_model)
// and extend standard Error Details defined in https://github.com/googleapis/googleapis/blob/master/google/rpc/error_details.proto

package errordetails

import (
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"

	v12 "go.temporal.io/api/common/v1"
	v1 "go.temporal.io/api/enums/v1"
	v11 "go.temporal.io/api/failure/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	anypb "google.golang.org/protobuf/types/known/anypb"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type NotFoundFailure struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	CurrentCluster string                 `protobuf:"bytes,1,opt,name=current_cluster,json=currentCluster,proto3" json:"current_cluster,omitempty"`
	ActiveCluster  string                 `protobuf:"bytes,2,opt,name=active_cluster,json=activeCluster,proto3" json:"active_cluster,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *NotFoundFailure) Reset() {
	*x = NotFoundFailure{}
	mi := &file_temporal_api_errordetails_v1_message_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NotFoundFailure) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotFoundFailure) ProtoMessage() {}

func (x *NotFoundFailure) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_api_errordetails_v1_message_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotFoundFailure.ProtoReflect.Descriptor instead.
func (*NotFoundFailure) Descriptor() ([]byte, []int) {
	return file_temporal_api_errordetails_v1_message_proto_rawDescGZIP(), []int{0}
}

func (x *NotFoundFailure) GetCurrentCluster() string {
	if x != nil {
		return x.CurrentCluster
	}
	return ""
}

func (x *NotFoundFailure) GetActiveCluster() string {
	if x != nil {
		return x.ActiveCluster
	}
	return ""
}

type WorkflowExecutionAlreadyStartedFailure struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	StartRequestId string                 `protobuf:"bytes,1,opt,name=start_request_id,json=startRequestId,proto3" json:"start_request_id,omitempty"`
	RunId          string                 `protobuf:"bytes,2,opt,name=run_id,json=runId,proto3" json:"run_id,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *WorkflowExecutionAlreadyStartedFailure) Reset() {
	*x = WorkflowExecutionAlreadyStartedFailure{}
	mi := &file_temporal_api_errordetails_v1_message_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WorkflowExecutionAlreadyStartedFailure) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkflowExecutionAlreadyStartedFailure) ProtoMessage() {}

func (x *WorkflowExecutionAlreadyStartedFailure) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_api_errordetails_v1_message_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkflowExecutionAlreadyStartedFailure.ProtoReflect.Descriptor instead.
func (*WorkflowExecutionAlreadyStartedFailure) Descriptor() ([]byte, []int) {
	return file_temporal_api_errordetails_v1_message_proto_rawDescGZIP(), []int{1}
}

func (x *WorkflowExecutionAlreadyStartedFailure) GetStartRequestId() string {
	if x != nil {
		return x.StartRequestId
	}
	return ""
}

func (x *WorkflowExecutionAlreadyStartedFailure) GetRunId() string {
	if x != nil {
		return x.RunId
	}
	return ""
}

type NamespaceNotActiveFailure struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Namespace      string                 `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	CurrentCluster string                 `protobuf:"bytes,2,opt,name=current_cluster,json=currentCluster,proto3" json:"current_cluster,omitempty"`
	ActiveCluster  string                 `protobuf:"bytes,3,opt,name=active_cluster,json=activeCluster,proto3" json:"active_cluster,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *NamespaceNotActiveFailure) Reset() {
	*x = NamespaceNotActiveFailure{}
	mi := &file_temporal_api_errordetails_v1_message_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NamespaceNotActiveFailure) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NamespaceNotActiveFailure) ProtoMessage() {}

func (x *NamespaceNotActiveFailure) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_api_errordetails_v1_message_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NamespaceNotActiveFailure.ProtoReflect.Descriptor instead.
func (*NamespaceNotActiveFailure) Descriptor() ([]byte, []int) {
	return file_temporal_api_errordetails_v1_message_proto_rawDescGZIP(), []int{2}
}

func (x *NamespaceNotActiveFailure) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *NamespaceNotActiveFailure) GetCurrentCluster() string {
	if x != nil {
		return x.CurrentCluster
	}
	return ""
}

func (x *NamespaceNotActiveFailure) GetActiveCluster() string {
	if x != nil {
		return x.ActiveCluster
	}
	return ""
}

// NamespaceUnavailableFailure is returned by the service when a request addresses a namespace that is unavailable. For
// example, when a namespace is in the process of failing over between clusters.
// This is a transient error that should be automatically retried by clients.
type NamespaceUnavailableFailure struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Namespace     string                 `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NamespaceUnavailableFailure) Reset() {
	*x = NamespaceUnavailableFailure{}
	mi := &file_temporal_api_errordetails_v1_message_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NamespaceUnavailableFailure) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NamespaceUnavailableFailure) ProtoMessage() {}

func (x *NamespaceUnavailableFailure) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_api_errordetails_v1_message_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NamespaceUnavailableFailure.ProtoReflect.Descriptor instead.
func (*NamespaceUnavailableFailure) Descriptor() ([]byte, []int) {
	return file_temporal_api_errordetails_v1_message_proto_rawDescGZIP(), []int{3}
}

func (x *NamespaceUnavailableFailure) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

type NamespaceInvalidStateFailure struct {
	state     protoimpl.MessageState `protogen:"open.v1"`
	Namespace string                 `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	// Current state of the requested namespace.
	State v1.NamespaceState `protobuf:"varint,2,opt,name=state,proto3,enum=temporal.api.enums.v1.NamespaceState" json:"state,omitempty"`
	// Allowed namespace states for requested operation.
	// For example NAMESPACE_STATE_DELETED is forbidden for most operations but allowed for DescribeNamespace.
	AllowedStates []v1.NamespaceState `protobuf:"varint,3,rep,packed,name=allowed_states,json=allowedStates,proto3,enum=temporal.api.enums.v1.NamespaceState" json:"allowed_states,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NamespaceInvalidStateFailure) Reset() {
	*x = NamespaceInvalidStateFailure{}
	mi := &file_temporal_api_errordetails_v1_message_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NamespaceInvalidStateFailure) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NamespaceInvalidStateFailure) ProtoMessage() {}

func (x *NamespaceInvalidStateFailure) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_api_errordetails_v1_message_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NamespaceInvalidStateFailure.ProtoReflect.Descriptor instead.
func (*NamespaceInvalidStateFailure) Descriptor() ([]byte, []int) {
	return file_temporal_api_errordetails_v1_message_proto_rawDescGZIP(), []int{4}
}

func (x *NamespaceInvalidStateFailure) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *NamespaceInvalidStateFailure) GetState() v1.NamespaceState {
	if x != nil {
		return x.State
	}
	return v1.NamespaceState(0)
}

func (x *NamespaceInvalidStateFailure) GetAllowedStates() []v1.NamespaceState {
	if x != nil {
		return x.AllowedStates
	}
	return nil
}

type NamespaceNotFoundFailure struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Namespace     string                 `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NamespaceNotFoundFailure) Reset() {
	*x = NamespaceNotFoundFailure{}
	mi := &file_temporal_api_errordetails_v1_message_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NamespaceNotFoundFailure) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NamespaceNotFoundFailure) ProtoMessage() {}

func (x *NamespaceNotFoundFailure) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_api_errordetails_v1_message_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NamespaceNotFoundFailure.ProtoReflect.Descriptor instead.
func (*NamespaceNotFoundFailure) Descriptor() ([]byte, []int) {
	return file_temporal_api_errordetails_v1_message_proto_rawDescGZIP(), []int{5}
}

func (x *NamespaceNotFoundFailure) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

type NamespaceAlreadyExistsFailure struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NamespaceAlreadyExistsFailure) Reset() {
	*x = NamespaceAlreadyExistsFailure{}
	mi := &file_temporal_api_errordetails_v1_message_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NamespaceAlreadyExistsFailure) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NamespaceAlreadyExistsFailure) ProtoMessage() {}

func (x *NamespaceAlreadyExistsFailure) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_api_errordetails_v1_message_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NamespaceAlreadyExistsFailure.ProtoReflect.Descriptor instead.
func (*NamespaceAlreadyExistsFailure) Descriptor() ([]byte, []int) {
	return file_temporal_api_errordetails_v1_message_proto_rawDescGZIP(), []int{6}
}

type ClientVersionNotSupportedFailure struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	ClientVersion     string                 `protobuf:"bytes,1,opt,name=client_version,json=clientVersion,proto3" json:"client_version,omitempty"`
	ClientName        string                 `protobuf:"bytes,2,opt,name=client_name,json=clientName,proto3" json:"client_name,omitempty"`
	SupportedVersions string                 `protobuf:"bytes,3,opt,name=supported_versions,json=supportedVersions,proto3" json:"supported_versions,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *ClientVersionNotSupportedFailure) Reset() {
	*x = ClientVersionNotSupportedFailure{}
	mi := &file_temporal_api_errordetails_v1_message_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ClientVersionNotSupportedFailure) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientVersionNotSupportedFailure) ProtoMessage() {}

func (x *ClientVersionNotSupportedFailure) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_api_errordetails_v1_message_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientVersionNotSupportedFailure.ProtoReflect.Descriptor instead.
func (*ClientVersionNotSupportedFailure) Descriptor() ([]byte, []int) {
	return file_temporal_api_errordetails_v1_message_proto_rawDescGZIP(), []int{7}
}

func (x *ClientVersionNotSupportedFailure) GetClientVersion() string {
	if x != nil {
		return x.ClientVersion
	}
	return ""
}

func (x *ClientVersionNotSupportedFailure) GetClientName() string {
	if x != nil {
		return x.ClientName
	}
	return ""
}

func (x *ClientVersionNotSupportedFailure) GetSupportedVersions() string {
	if x != nil {
		return x.SupportedVersions
	}
	return ""
}

type ServerVersionNotSupportedFailure struct {
	state                         protoimpl.MessageState `protogen:"open.v1"`
	ServerVersion                 string                 `protobuf:"bytes,1,opt,name=server_version,json=serverVersion,proto3" json:"server_version,omitempty"`
	ClientSupportedServerVersions string                 `protobuf:"bytes,2,opt,name=client_supported_server_versions,json=clientSupportedServerVersions,proto3" json:"client_supported_server_versions,omitempty"`
	unknownFields                 protoimpl.UnknownFields
	sizeCache                     protoimpl.SizeCache
}

func (x *ServerVersionNotSupportedFailure) Reset() {
	*x = ServerVersionNotSupportedFailure{}
	mi := &file_temporal_api_errordetails_v1_message_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ServerVersionNotSupportedFailure) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerVersionNotSupportedFailure) ProtoMessage() {}

func (x *ServerVersionNotSupportedFailure) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_api_errordetails_v1_message_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerVersionNotSupportedFailure.ProtoReflect.Descriptor instead.
func (*ServerVersionNotSupportedFailure) Descriptor() ([]byte, []int) {
	return file_temporal_api_errordetails_v1_message_proto_rawDescGZIP(), []int{8}
}

func (x *ServerVersionNotSupportedFailure) GetServerVersion() string {
	if x != nil {
		return x.ServerVersion
	}
	return ""
}

func (x *ServerVersionNotSupportedFailure) GetClientSupportedServerVersions() string {
	if x != nil {
		return x.ClientSupportedServerVersions
	}
	return ""
}

type CancellationAlreadyRequestedFailure struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CancellationAlreadyRequestedFailure) Reset() {
	*x = CancellationAlreadyRequestedFailure{}
	mi := &file_temporal_api_errordetails_v1_message_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CancellationAlreadyRequestedFailure) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CancellationAlreadyRequestedFailure) ProtoMessage() {}

func (x *CancellationAlreadyRequestedFailure) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_api_errordetails_v1_message_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CancellationAlreadyRequestedFailure.ProtoReflect.Descriptor instead.
func (*CancellationAlreadyRequestedFailure) Descriptor() ([]byte, []int) {
	return file_temporal_api_errordetails_v1_message_proto_rawDescGZIP(), []int{9}
}

type QueryFailedFailure struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The full reason for this query failure. May not be available if the response is generated by an old
	// SDK. This field can be encoded by the SDK's failure converter to support E2E encryption of messages and stack
	// traces.
	Failure       *v11.Failure `protobuf:"bytes,1,opt,name=failure,proto3" json:"failure,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueryFailedFailure) Reset() {
	*x = QueryFailedFailure{}
	mi := &file_temporal_api_errordetails_v1_message_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryFailedFailure) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryFailedFailure) ProtoMessage() {}

func (x *QueryFailedFailure) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_api_errordetails_v1_message_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryFailedFailure.ProtoReflect.Descriptor instead.
func (*QueryFailedFailure) Descriptor() ([]byte, []int) {
	return file_temporal_api_errordetails_v1_message_proto_rawDescGZIP(), []int{10}
}

func (x *QueryFailedFailure) GetFailure() *v11.Failure {
	if x != nil {
		return x.Failure
	}
	return nil
}

type PermissionDeniedFailure struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Reason        string                 `protobuf:"bytes,1,opt,name=reason,proto3" json:"reason,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PermissionDeniedFailure) Reset() {
	*x = PermissionDeniedFailure{}
	mi := &file_temporal_api_errordetails_v1_message_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PermissionDeniedFailure) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PermissionDeniedFailure) ProtoMessage() {}

func (x *PermissionDeniedFailure) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_api_errordetails_v1_message_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PermissionDeniedFailure.ProtoReflect.Descriptor instead.
func (*PermissionDeniedFailure) Descriptor() ([]byte, []int) {
	return file_temporal_api_errordetails_v1_message_proto_rawDescGZIP(), []int{11}
}

func (x *PermissionDeniedFailure) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

type ResourceExhaustedFailure struct {
	state         protoimpl.MessageState    `protogen:"open.v1"`
	Cause         v1.ResourceExhaustedCause `protobuf:"varint,1,opt,name=cause,proto3,enum=temporal.api.enums.v1.ResourceExhaustedCause" json:"cause,omitempty"`
	Scope         v1.ResourceExhaustedScope `protobuf:"varint,2,opt,name=scope,proto3,enum=temporal.api.enums.v1.ResourceExhaustedScope" json:"scope,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ResourceExhaustedFailure) Reset() {
	*x = ResourceExhaustedFailure{}
	mi := &file_temporal_api_errordetails_v1_message_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResourceExhaustedFailure) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResourceExhaustedFailure) ProtoMessage() {}

func (x *ResourceExhaustedFailure) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_api_errordetails_v1_message_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResourceExhaustedFailure.ProtoReflect.Descriptor instead.
func (*ResourceExhaustedFailure) Descriptor() ([]byte, []int) {
	return file_temporal_api_errordetails_v1_message_proto_rawDescGZIP(), []int{12}
}

func (x *ResourceExhaustedFailure) GetCause() v1.ResourceExhaustedCause {
	if x != nil {
		return x.Cause
	}
	return v1.ResourceExhaustedCause(0)
}

func (x *ResourceExhaustedFailure) GetScope() v1.ResourceExhaustedScope {
	if x != nil {
		return x.Scope
	}
	return v1.ResourceExhaustedScope(0)
}

type SystemWorkflowFailure struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// WorkflowId and RunId of the Temporal system workflow performing the underlying operation.
	// Looking up the info of the system workflow run may help identify the issue causing the failure.
	WorkflowExecution *v12.WorkflowExecution `protobuf:"bytes,1,opt,name=workflow_execution,json=workflowExecution,proto3" json:"workflow_execution,omitempty"`
	// Serialized error returned by the system workflow performing the underlying operation.
	WorkflowError string `protobuf:"bytes,2,opt,name=workflow_error,json=workflowError,proto3" json:"workflow_error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SystemWorkflowFailure) Reset() {
	*x = SystemWorkflowFailure{}
	mi := &file_temporal_api_errordetails_v1_message_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SystemWorkflowFailure) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SystemWorkflowFailure) ProtoMessage() {}

func (x *SystemWorkflowFailure) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_api_errordetails_v1_message_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SystemWorkflowFailure.ProtoReflect.Descriptor instead.
func (*SystemWorkflowFailure) Descriptor() ([]byte, []int) {
	return file_temporal_api_errordetails_v1_message_proto_rawDescGZIP(), []int{13}
}

func (x *SystemWorkflowFailure) GetWorkflowExecution() *v12.WorkflowExecution {
	if x != nil {
		return x.WorkflowExecution
	}
	return nil
}

func (x *SystemWorkflowFailure) GetWorkflowError() string {
	if x != nil {
		return x.WorkflowError
	}
	return ""
}

type WorkflowNotReadyFailure struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WorkflowNotReadyFailure) Reset() {
	*x = WorkflowNotReadyFailure{}
	mi := &file_temporal_api_errordetails_v1_message_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WorkflowNotReadyFailure) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkflowNotReadyFailure) ProtoMessage() {}

func (x *WorkflowNotReadyFailure) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_api_errordetails_v1_message_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkflowNotReadyFailure.ProtoReflect.Descriptor instead.
func (*WorkflowNotReadyFailure) Descriptor() ([]byte, []int) {
	return file_temporal_api_errordetails_v1_message_proto_rawDescGZIP(), []int{14}
}

type NewerBuildExistsFailure struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The current default compatible build ID which will receive tasks
	DefaultBuildId string `protobuf:"bytes,1,opt,name=default_build_id,json=defaultBuildId,proto3" json:"default_build_id,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *NewerBuildExistsFailure) Reset() {
	*x = NewerBuildExistsFailure{}
	mi := &file_temporal_api_errordetails_v1_message_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NewerBuildExistsFailure) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewerBuildExistsFailure) ProtoMessage() {}

func (x *NewerBuildExistsFailure) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_api_errordetails_v1_message_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewerBuildExistsFailure.ProtoReflect.Descriptor instead.
func (*NewerBuildExistsFailure) Descriptor() ([]byte, []int) {
	return file_temporal_api_errordetails_v1_message_proto_rawDescGZIP(), []int{15}
}

func (x *NewerBuildExistsFailure) GetDefaultBuildId() string {
	if x != nil {
		return x.DefaultBuildId
	}
	return ""
}

type MultiOperationExecutionFailure struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// One status for each requested operation from the failed MultiOperation. The failed
	// operation(s) have the same error details as if it was executed separately. All other operations have the
	// status code `Aborted` and `MultiOperationExecutionAborted` is added to the details field.
	Statuses      []*MultiOperationExecutionFailure_OperationStatus `protobuf:"bytes,1,rep,name=statuses,proto3" json:"statuses,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MultiOperationExecutionFailure) Reset() {
	*x = MultiOperationExecutionFailure{}
	mi := &file_temporal_api_errordetails_v1_message_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MultiOperationExecutionFailure) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MultiOperationExecutionFailure) ProtoMessage() {}

func (x *MultiOperationExecutionFailure) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_api_errordetails_v1_message_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MultiOperationExecutionFailure.ProtoReflect.Descriptor instead.
func (*MultiOperationExecutionFailure) Descriptor() ([]byte, []int) {
	return file_temporal_api_errordetails_v1_message_proto_rawDescGZIP(), []int{16}
}

func (x *MultiOperationExecutionFailure) GetStatuses() []*MultiOperationExecutionFailure_OperationStatus {
	if x != nil {
		return x.Statuses
	}
	return nil
}

// NOTE: `OperationStatus` is modelled after
// [`google.rpc.Status`](https://github.com/googleapis/googleapis/blob/master/google/rpc/status.proto).
//
// (-- api-linter: core::0146::any=disabled
//
//	aip.dev/not-precedent: details are meant to hold arbitrary payloads. --)
type MultiOperationExecutionFailure_OperationStatus struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Code          int32                  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Details       []*anypb.Any           `protobuf:"bytes,3,rep,name=details,proto3" json:"details,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MultiOperationExecutionFailure_OperationStatus) Reset() {
	*x = MultiOperationExecutionFailure_OperationStatus{}
	mi := &file_temporal_api_errordetails_v1_message_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MultiOperationExecutionFailure_OperationStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MultiOperationExecutionFailure_OperationStatus) ProtoMessage() {}

func (x *MultiOperationExecutionFailure_OperationStatus) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_api_errordetails_v1_message_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MultiOperationExecutionFailure_OperationStatus.ProtoReflect.Descriptor instead.
func (*MultiOperationExecutionFailure_OperationStatus) Descriptor() ([]byte, []int) {
	return file_temporal_api_errordetails_v1_message_proto_rawDescGZIP(), []int{16, 0}
}

func (x *MultiOperationExecutionFailure_OperationStatus) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *MultiOperationExecutionFailure_OperationStatus) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *MultiOperationExecutionFailure_OperationStatus) GetDetails() []*anypb.Any {
	if x != nil {
		return x.Details
	}
	return nil
}

var File_temporal_api_errordetails_v1_message_proto protoreflect.FileDescriptor

const file_temporal_api_errordetails_v1_message_proto_rawDesc = "" +
	"\n" +
	"*temporal/api/errordetails/v1/message.proto\x12\x1ctemporal.api.errordetails.v1\x1a\x19google/protobuf/any.proto\x1a$temporal/api/common/v1/message.proto\x1a(temporal/api/enums/v1/failed_cause.proto\x1a%temporal/api/enums/v1/namespace.proto\x1a%temporal/api/failure/v1/message.proto\"a\n" +
	"\x0fNotFoundFailure\x12'\n" +
	"\x0fcurrent_cluster\x18\x01 \x01(\tR\x0ecurrentCluster\x12%\n" +
	"\x0eactive_cluster\x18\x02 \x01(\tR\ractiveCluster\"i\n" +
	"&WorkflowExecutionAlreadyStartedFailure\x12(\n" +
	"\x10start_request_id\x18\x01 \x01(\tR\x0estartRequestId\x12\x15\n" +
	"\x06run_id\x18\x02 \x01(\tR\x05runId\"\x89\x01\n" +
	"\x19NamespaceNotActiveFailure\x12\x1c\n" +
	"\tnamespace\x18\x01 \x01(\tR\tnamespace\x12'\n" +
	"\x0fcurrent_cluster\x18\x02 \x01(\tR\x0ecurrentCluster\x12%\n" +
	"\x0eactive_cluster\x18\x03 \x01(\tR\ractiveCluster\";\n" +
	"\x1bNamespaceUnavailableFailure\x12\x1c\n" +
	"\tnamespace\x18\x01 \x01(\tR\tnamespace\"\xc7\x01\n" +
	"\x1cNamespaceInvalidStateFailure\x12\x1c\n" +
	"\tnamespace\x18\x01 \x01(\tR\tnamespace\x12;\n" +
	"\x05state\x18\x02 \x01(\x0e2%.temporal.api.enums.v1.NamespaceStateR\x05state\x12L\n" +
	"\x0eallowed_states\x18\x03 \x03(\x0e2%.temporal.api.enums.v1.NamespaceStateR\rallowedStates\"8\n" +
	"\x18NamespaceNotFoundFailure\x12\x1c\n" +
	"\tnamespace\x18\x01 \x01(\tR\tnamespace\"\x1f\n" +
	"\x1dNamespaceAlreadyExistsFailure\"\x99\x01\n" +
	" ClientVersionNotSupportedFailure\x12%\n" +
	"\x0eclient_version\x18\x01 \x01(\tR\rclientVersion\x12\x1f\n" +
	"\vclient_name\x18\x02 \x01(\tR\n" +
	"clientName\x12-\n" +
	"\x12supported_versions\x18\x03 \x01(\tR\x11supportedVersions\"\x92\x01\n" +
	" ServerVersionNotSupportedFailure\x12%\n" +
	"\x0eserver_version\x18\x01 \x01(\tR\rserverVersion\x12G\n" +
	" client_supported_server_versions\x18\x02 \x01(\tR\x1dclientSupportedServerVersions\"%\n" +
	"#CancellationAlreadyRequestedFailure\"P\n" +
	"\x12QueryFailedFailure\x12:\n" +
	"\afailure\x18\x01 \x01(\v2 .temporal.api.failure.v1.FailureR\afailure\"1\n" +
	"\x17PermissionDeniedFailure\x12\x16\n" +
	"\x06reason\x18\x01 \x01(\tR\x06reason\"\xa4\x01\n" +
	"\x18ResourceExhaustedFailure\x12C\n" +
	"\x05cause\x18\x01 \x01(\x0e2-.temporal.api.enums.v1.ResourceExhaustedCauseR\x05cause\x12C\n" +
	"\x05scope\x18\x02 \x01(\x0e2-.temporal.api.enums.v1.ResourceExhaustedScopeR\x05scope\"\x98\x01\n" +
	"\x15SystemWorkflowFailure\x12X\n" +
	"\x12workflow_execution\x18\x01 \x01(\v2).temporal.api.common.v1.WorkflowExecutionR\x11workflowExecution\x12%\n" +
	"\x0eworkflow_error\x18\x02 \x01(\tR\rworkflowError\"\x19\n" +
	"\x17WorkflowNotReadyFailure\"C\n" +
	"\x17NewerBuildExistsFailure\x12(\n" +
	"\x10default_build_id\x18\x01 \x01(\tR\x0edefaultBuildId\"\xfb\x01\n" +
	"\x1eMultiOperationExecutionFailure\x12h\n" +
	"\bstatuses\x18\x01 \x03(\v2L.temporal.api.errordetails.v1.MultiOperationExecutionFailure.OperationStatusR\bstatuses\x1ao\n" +
	"\x0fOperationStatus\x12\x12\n" +
	"\x04code\x18\x01 \x01(\x05R\x04code\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12.\n" +
	"\adetails\x18\x03 \x03(\v2\x14.google.protobuf.AnyR\adetailsB\xa7\x01\n" +
	"\x1fio.temporal.api.errordetails.v1B\fMessageProtoP\x01Z/go.temporal.io/api/errordetails/v1;errordetails\xaa\x02\x1eTemporalio.Api.ErrorDetails.V1\xea\x02!Temporalio::Api::ErrorDetails::V1b\x06proto3"

var (
	file_temporal_api_errordetails_v1_message_proto_rawDescOnce sync.Once
	file_temporal_api_errordetails_v1_message_proto_rawDescData []byte
)

func file_temporal_api_errordetails_v1_message_proto_rawDescGZIP() []byte {
	file_temporal_api_errordetails_v1_message_proto_rawDescOnce.Do(func() {
		file_temporal_api_errordetails_v1_message_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_temporal_api_errordetails_v1_message_proto_rawDesc), len(file_temporal_api_errordetails_v1_message_proto_rawDesc)))
	})
	return file_temporal_api_errordetails_v1_message_proto_rawDescData
}

var file_temporal_api_errordetails_v1_message_proto_msgTypes = make([]protoimpl.MessageInfo, 18)
var file_temporal_api_errordetails_v1_message_proto_goTypes = []any{
	(*NotFoundFailure)(nil),                                // 0: temporal.api.errordetails.v1.NotFoundFailure
	(*WorkflowExecutionAlreadyStartedFailure)(nil),         // 1: temporal.api.errordetails.v1.WorkflowExecutionAlreadyStartedFailure
	(*NamespaceNotActiveFailure)(nil),                      // 2: temporal.api.errordetails.v1.NamespaceNotActiveFailure
	(*NamespaceUnavailableFailure)(nil),                    // 3: temporal.api.errordetails.v1.NamespaceUnavailableFailure
	(*NamespaceInvalidStateFailure)(nil),                   // 4: temporal.api.errordetails.v1.NamespaceInvalidStateFailure
	(*NamespaceNotFoundFailure)(nil),                       // 5: temporal.api.errordetails.v1.NamespaceNotFoundFailure
	(*NamespaceAlreadyExistsFailure)(nil),                  // 6: temporal.api.errordetails.v1.NamespaceAlreadyExistsFailure
	(*ClientVersionNotSupportedFailure)(nil),               // 7: temporal.api.errordetails.v1.ClientVersionNotSupportedFailure
	(*ServerVersionNotSupportedFailure)(nil),               // 8: temporal.api.errordetails.v1.ServerVersionNotSupportedFailure
	(*CancellationAlreadyRequestedFailure)(nil),            // 9: temporal.api.errordetails.v1.CancellationAlreadyRequestedFailure
	(*QueryFailedFailure)(nil),                             // 10: temporal.api.errordetails.v1.QueryFailedFailure
	(*PermissionDeniedFailure)(nil),                        // 11: temporal.api.errordetails.v1.PermissionDeniedFailure
	(*ResourceExhaustedFailure)(nil),                       // 12: temporal.api.errordetails.v1.ResourceExhaustedFailure
	(*SystemWorkflowFailure)(nil),                          // 13: temporal.api.errordetails.v1.SystemWorkflowFailure
	(*WorkflowNotReadyFailure)(nil),                        // 14: temporal.api.errordetails.v1.WorkflowNotReadyFailure
	(*NewerBuildExistsFailure)(nil),                        // 15: temporal.api.errordetails.v1.NewerBuildExistsFailure
	(*MultiOperationExecutionFailure)(nil),                 // 16: temporal.api.errordetails.v1.MultiOperationExecutionFailure
	(*MultiOperationExecutionFailure_OperationStatus)(nil), // 17: temporal.api.errordetails.v1.MultiOperationExecutionFailure.OperationStatus
	(v1.NamespaceState)(0),                                 // 18: temporal.api.enums.v1.NamespaceState
	(*v11.Failure)(nil),                                    // 19: temporal.api.failure.v1.Failure
	(v1.ResourceExhaustedCause)(0),                         // 20: temporal.api.enums.v1.ResourceExhaustedCause
	(v1.ResourceExhaustedScope)(0),                         // 21: temporal.api.enums.v1.ResourceExhaustedScope
	(*v12.WorkflowExecution)(nil),                          // 22: temporal.api.common.v1.WorkflowExecution
	(*anypb.Any)(nil),                                      // 23: google.protobuf.Any
}
var file_temporal_api_errordetails_v1_message_proto_depIdxs = []int32{
	18, // 0: temporal.api.errordetails.v1.NamespaceInvalidStateFailure.state:type_name -> temporal.api.enums.v1.NamespaceState
	18, // 1: temporal.api.errordetails.v1.NamespaceInvalidStateFailure.allowed_states:type_name -> temporal.api.enums.v1.NamespaceState
	19, // 2: temporal.api.errordetails.v1.QueryFailedFailure.failure:type_name -> temporal.api.failure.v1.Failure
	20, // 3: temporal.api.errordetails.v1.ResourceExhaustedFailure.cause:type_name -> temporal.api.enums.v1.ResourceExhaustedCause
	21, // 4: temporal.api.errordetails.v1.ResourceExhaustedFailure.scope:type_name -> temporal.api.enums.v1.ResourceExhaustedScope
	22, // 5: temporal.api.errordetails.v1.SystemWorkflowFailure.workflow_execution:type_name -> temporal.api.common.v1.WorkflowExecution
	17, // 6: temporal.api.errordetails.v1.MultiOperationExecutionFailure.statuses:type_name -> temporal.api.errordetails.v1.MultiOperationExecutionFailure.OperationStatus
	23, // 7: temporal.api.errordetails.v1.MultiOperationExecutionFailure.OperationStatus.details:type_name -> google.protobuf.Any
	8,  // [8:8] is the sub-list for method output_type
	8,  // [8:8] is the sub-list for method input_type
	8,  // [8:8] is the sub-list for extension type_name
	8,  // [8:8] is the sub-list for extension extendee
	0,  // [0:8] is the sub-list for field type_name
}

func init() { file_temporal_api_errordetails_v1_message_proto_init() }
func file_temporal_api_errordetails_v1_message_proto_init() {
	if File_temporal_api_errordetails_v1_message_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_temporal_api_errordetails_v1_message_proto_rawDesc), len(file_temporal_api_errordetails_v1_message_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   18,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_temporal_api_errordetails_v1_message_proto_goTypes,
		DependencyIndexes: file_temporal_api_errordetails_v1_message_proto_depIdxs,
		MessageInfos:      file_temporal_api_errordetails_v1_message_proto_msgTypes,
	}.Build()
	File_temporal_api_errordetails_v1_message_proto = out.File
	file_temporal_api_errordetails_v1_message_proto_goTypes = nil
	file_temporal_api_errordetails_v1_message_proto_depIdxs = nil
}
