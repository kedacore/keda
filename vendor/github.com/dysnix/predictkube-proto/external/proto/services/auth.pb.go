// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.12.4
// source: proto/services/auth.proto

package services

import (
	context "context"
	enums "github.com/dysnix/predictkube-proto/external/proto/enums"
	events "github.com/dysnix/predictkube-proto/external/proto/events"
	proto "github.com/golang/protobuf/proto"
	duration "github.com/golang/protobuf/ptypes/duration"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type ReqCreateClient struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Client *events.Client `protobuf:"bytes,1,opt,name=client,proto3" json:"client,omitempty"`
}

func (x *ReqCreateClient) Reset() {
	*x = ReqCreateClient{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_services_auth_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqCreateClient) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqCreateClient) ProtoMessage() {}

func (x *ReqCreateClient) ProtoReflect() protoreflect.Message {
	mi := &file_proto_services_auth_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqCreateClient.ProtoReflect.Descriptor instead.
func (*ReqCreateClient) Descriptor() ([]byte, []int) {
	return file_proto_services_auth_proto_rawDescGZIP(), []int{0}
}

func (x *ReqCreateClient) GetClient() *events.Client {
	if x != nil {
		return x.Client
	}
	return nil
}

type ResCreateClient struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PublicId string `protobuf:"bytes,1,opt,name=public_id,json=publicId,proto3" json:"public_id,omitempty"`
}

func (x *ResCreateClient) Reset() {
	*x = ResCreateClient{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_services_auth_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResCreateClient) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResCreateClient) ProtoMessage() {}

func (x *ResCreateClient) ProtoReflect() protoreflect.Message {
	mi := &file_proto_services_auth_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResCreateClient.ProtoReflect.Descriptor instead.
func (*ResCreateClient) Descriptor() ([]byte, []int) {
	return file_proto_services_auth_proto_rawDescGZIP(), []int{1}
}

func (x *ResCreateClient) GetPublicId() string {
	if x != nil {
		return x.PublicId
	}
	return ""
}

type ReqInvalidateAllTokens struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to ClientData:
	//	*ReqInvalidateAllTokens_Name
	//	*ReqInvalidateAllTokens_PublicId
	//	*ReqInvalidateAllTokens_ClusterId
	ClientData isReqInvalidateAllTokens_ClientData `protobuf_oneof:"ClientData"`
	Bites      uint32                              `protobuf:"varint,4,opt,name=bites,proto3" json:"bites,omitempty"`
}

func (x *ReqInvalidateAllTokens) Reset() {
	*x = ReqInvalidateAllTokens{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_services_auth_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqInvalidateAllTokens) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqInvalidateAllTokens) ProtoMessage() {}

func (x *ReqInvalidateAllTokens) ProtoReflect() protoreflect.Message {
	mi := &file_proto_services_auth_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqInvalidateAllTokens.ProtoReflect.Descriptor instead.
func (*ReqInvalidateAllTokens) Descriptor() ([]byte, []int) {
	return file_proto_services_auth_proto_rawDescGZIP(), []int{2}
}

func (m *ReqInvalidateAllTokens) GetClientData() isReqInvalidateAllTokens_ClientData {
	if m != nil {
		return m.ClientData
	}
	return nil
}

func (x *ReqInvalidateAllTokens) GetName() string {
	if x, ok := x.GetClientData().(*ReqInvalidateAllTokens_Name); ok {
		return x.Name
	}
	return ""
}

func (x *ReqInvalidateAllTokens) GetPublicId() string {
	if x, ok := x.GetClientData().(*ReqInvalidateAllTokens_PublicId); ok {
		return x.PublicId
	}
	return ""
}

func (x *ReqInvalidateAllTokens) GetClusterId() string {
	if x, ok := x.GetClientData().(*ReqInvalidateAllTokens_ClusterId); ok {
		return x.ClusterId
	}
	return ""
}

func (x *ReqInvalidateAllTokens) GetBites() uint32 {
	if x != nil {
		return x.Bites
	}
	return 0
}

type isReqInvalidateAllTokens_ClientData interface {
	isReqInvalidateAllTokens_ClientData()
}

type ReqInvalidateAllTokens_Name struct {
	Name string `protobuf:"bytes,1,opt,name=name,proto3,oneof"`
}

type ReqInvalidateAllTokens_PublicId struct {
	PublicId string `protobuf:"bytes,2,opt,name=public_id,json=publicId,proto3,oneof"`
}

type ReqInvalidateAllTokens_ClusterId struct {
	ClusterId string `protobuf:"bytes,3,opt,name=cluster_id,json=clusterId,proto3,oneof"`
}

func (*ReqInvalidateAllTokens_Name) isReqInvalidateAllTokens_ClientData() {}

func (*ReqInvalidateAllTokens_PublicId) isReqInvalidateAllTokens_ClientData() {}

func (*ReqInvalidateAllTokens_ClusterId) isReqInvalidateAllTokens_ClientData() {}

type ResInvalidateAllTokens struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RsaKey []byte `protobuf:"bytes,1,opt,name=rsa_key,json=rsaKey,proto3" json:"rsa_key,omitempty"`
}

func (x *ResInvalidateAllTokens) Reset() {
	*x = ResInvalidateAllTokens{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_services_auth_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResInvalidateAllTokens) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResInvalidateAllTokens) ProtoMessage() {}

func (x *ResInvalidateAllTokens) ProtoReflect() protoreflect.Message {
	mi := &file_proto_services_auth_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResInvalidateAllTokens.ProtoReflect.Descriptor instead.
func (*ResInvalidateAllTokens) Descriptor() ([]byte, []int) {
	return file_proto_services_auth_proto_rawDescGZIP(), []int{3}
}

func (x *ResInvalidateAllTokens) GetRsaKey() []byte {
	if x != nil {
		return x.RsaKey
	}
	return nil
}

type ReqUpdateClient struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Client *events.Client `protobuf:"bytes,1,opt,name=client,proto3" json:"client,omitempty"`
}

func (x *ReqUpdateClient) Reset() {
	*x = ReqUpdateClient{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_services_auth_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqUpdateClient) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqUpdateClient) ProtoMessage() {}

func (x *ReqUpdateClient) ProtoReflect() protoreflect.Message {
	mi := &file_proto_services_auth_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqUpdateClient.ProtoReflect.Descriptor instead.
func (*ReqUpdateClient) Descriptor() ([]byte, []int) {
	return file_proto_services_auth_proto_rawDescGZIP(), []int{4}
}

func (x *ReqUpdateClient) GetClient() *events.Client {
	if x != nil {
		return x.Client
	}
	return nil
}

type ResUpdateClient struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ResUpdateClient) Reset() {
	*x = ResUpdateClient{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_services_auth_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResUpdateClient) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResUpdateClient) ProtoMessage() {}

func (x *ResUpdateClient) ProtoReflect() protoreflect.Message {
	mi := &file_proto_services_auth_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResUpdateClient.ProtoReflect.Descriptor instead.
func (*ResUpdateClient) Descriptor() ([]byte, []int) {
	return file_proto_services_auth_proto_rawDescGZIP(), []int{5}
}

type ReqDeleteClient struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to ClientData:
	//	*ReqDeleteClient_Name
	//	*ReqDeleteClient_PublicId
	//	*ReqDeleteClient_ClusterId
	//	*ReqDeleteClient_ApiKey
	ClientData isReqDeleteClient_ClientData `protobuf_oneof:"ClientData"`
	DeleteType enums.DeleteType             `protobuf:"varint,5,opt,name=delete_type,json=deleteType,proto3,enum=enums.DeleteType" json:"delete_type,omitempty"`
}

func (x *ReqDeleteClient) Reset() {
	*x = ReqDeleteClient{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_services_auth_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqDeleteClient) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqDeleteClient) ProtoMessage() {}

func (x *ReqDeleteClient) ProtoReflect() protoreflect.Message {
	mi := &file_proto_services_auth_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqDeleteClient.ProtoReflect.Descriptor instead.
func (*ReqDeleteClient) Descriptor() ([]byte, []int) {
	return file_proto_services_auth_proto_rawDescGZIP(), []int{6}
}

func (m *ReqDeleteClient) GetClientData() isReqDeleteClient_ClientData {
	if m != nil {
		return m.ClientData
	}
	return nil
}

func (x *ReqDeleteClient) GetName() string {
	if x, ok := x.GetClientData().(*ReqDeleteClient_Name); ok {
		return x.Name
	}
	return ""
}

func (x *ReqDeleteClient) GetPublicId() string {
	if x, ok := x.GetClientData().(*ReqDeleteClient_PublicId); ok {
		return x.PublicId
	}
	return ""
}

func (x *ReqDeleteClient) GetClusterId() string {
	if x, ok := x.GetClientData().(*ReqDeleteClient_ClusterId); ok {
		return x.ClusterId
	}
	return ""
}

func (x *ReqDeleteClient) GetApiKey() string {
	if x, ok := x.GetClientData().(*ReqDeleteClient_ApiKey); ok {
		return x.ApiKey
	}
	return ""
}

func (x *ReqDeleteClient) GetDeleteType() enums.DeleteType {
	if x != nil {
		return x.DeleteType
	}
	return enums.DeleteType_Soft
}

type isReqDeleteClient_ClientData interface {
	isReqDeleteClient_ClientData()
}

type ReqDeleteClient_Name struct {
	Name string `protobuf:"bytes,1,opt,name=name,proto3,oneof"`
}

type ReqDeleteClient_PublicId struct {
	PublicId string `protobuf:"bytes,2,opt,name=public_id,json=publicId,proto3,oneof"`
}

type ReqDeleteClient_ClusterId struct {
	ClusterId string `protobuf:"bytes,3,opt,name=cluster_id,json=clusterId,proto3,oneof"`
}

type ReqDeleteClient_ApiKey struct {
	ApiKey string `protobuf:"bytes,4,opt,name=api_key,json=apiKey,proto3,oneof"`
}

func (*ReqDeleteClient_Name) isReqDeleteClient_ClientData() {}

func (*ReqDeleteClient_PublicId) isReqDeleteClient_ClientData() {}

func (*ReqDeleteClient_ClusterId) isReqDeleteClient_ClientData() {}

func (*ReqDeleteClient_ApiKey) isReqDeleteClient_ClientData() {}

type ResDeleteClient struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ResDeleteClient) Reset() {
	*x = ResDeleteClient{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_services_auth_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResDeleteClient) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResDeleteClient) ProtoMessage() {}

func (x *ResDeleteClient) ProtoReflect() protoreflect.Message {
	mi := &file_proto_services_auth_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResDeleteClient.ProtoReflect.Descriptor instead.
func (*ResDeleteClient) Descriptor() ([]byte, []int) {
	return file_proto_services_auth_proto_rawDescGZIP(), []int{7}
}

type ReqGenerateToken struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to ClientData:
	//	*ReqGenerateToken_Name
	//	*ReqGenerateToken_PublicId
	//	*ReqGenerateToken_ClusterId
	ClientData  isReqGenerateToken_ClientData `protobuf_oneof:"ClientData"`
	ExtDuration *duration.Duration            `protobuf:"bytes,4,opt,name=ext_duration,json=extDuration,proto3" json:"ext_duration,omitempty"`
}

func (x *ReqGenerateToken) Reset() {
	*x = ReqGenerateToken{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_services_auth_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqGenerateToken) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqGenerateToken) ProtoMessage() {}

func (x *ReqGenerateToken) ProtoReflect() protoreflect.Message {
	mi := &file_proto_services_auth_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqGenerateToken.ProtoReflect.Descriptor instead.
func (*ReqGenerateToken) Descriptor() ([]byte, []int) {
	return file_proto_services_auth_proto_rawDescGZIP(), []int{8}
}

func (m *ReqGenerateToken) GetClientData() isReqGenerateToken_ClientData {
	if m != nil {
		return m.ClientData
	}
	return nil
}

func (x *ReqGenerateToken) GetName() string {
	if x, ok := x.GetClientData().(*ReqGenerateToken_Name); ok {
		return x.Name
	}
	return ""
}

func (x *ReqGenerateToken) GetPublicId() string {
	if x, ok := x.GetClientData().(*ReqGenerateToken_PublicId); ok {
		return x.PublicId
	}
	return ""
}

func (x *ReqGenerateToken) GetClusterId() string {
	if x, ok := x.GetClientData().(*ReqGenerateToken_ClusterId); ok {
		return x.ClusterId
	}
	return ""
}

func (x *ReqGenerateToken) GetExtDuration() *duration.Duration {
	if x != nil {
		return x.ExtDuration
	}
	return nil
}

type isReqGenerateToken_ClientData interface {
	isReqGenerateToken_ClientData()
}

type ReqGenerateToken_Name struct {
	Name string `protobuf:"bytes,1,opt,name=name,proto3,oneof"`
}

type ReqGenerateToken_PublicId struct {
	PublicId string `protobuf:"bytes,2,opt,name=public_id,json=publicId,proto3,oneof"`
}

type ReqGenerateToken_ClusterId struct {
	ClusterId string `protobuf:"bytes,3,opt,name=cluster_id,json=clusterId,proto3,oneof"`
}

func (*ReqGenerateToken_Name) isReqGenerateToken_ClientData() {}

func (*ReqGenerateToken_PublicId) isReqGenerateToken_ClientData() {}

func (*ReqGenerateToken_ClusterId) isReqGenerateToken_ClientData() {}

type ResGenerateToken struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token string `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
}

func (x *ResGenerateToken) Reset() {
	*x = ResGenerateToken{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_services_auth_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResGenerateToken) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResGenerateToken) ProtoMessage() {}

func (x *ResGenerateToken) ProtoReflect() protoreflect.Message {
	mi := &file_proto_services_auth_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResGenerateToken.ProtoReflect.Descriptor instead.
func (*ResGenerateToken) Descriptor() ([]byte, []int) {
	return file_proto_services_auth_proto_rawDescGZIP(), []int{9}
}

func (x *ResGenerateToken) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

type ReqRefreshToken struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to ClientData:
	//	*ReqRefreshToken_Name
	//	*ReqRefreshToken_PublicId
	//	*ReqRefreshToken_ClusterId
	ClientData  isReqRefreshToken_ClientData `protobuf_oneof:"ClientData"`
	Token       string                       `protobuf:"bytes,4,opt,name=token,proto3" json:"token,omitempty" validate:"jwt"` // @gotags: validate:"jwt"
	ExtDuration *duration.Duration           `protobuf:"bytes,5,opt,name=ext_duration,json=extDuration,proto3" json:"ext_duration,omitempty"`
}

func (x *ReqRefreshToken) Reset() {
	*x = ReqRefreshToken{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_services_auth_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqRefreshToken) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqRefreshToken) ProtoMessage() {}

func (x *ReqRefreshToken) ProtoReflect() protoreflect.Message {
	mi := &file_proto_services_auth_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqRefreshToken.ProtoReflect.Descriptor instead.
func (*ReqRefreshToken) Descriptor() ([]byte, []int) {
	return file_proto_services_auth_proto_rawDescGZIP(), []int{10}
}

func (m *ReqRefreshToken) GetClientData() isReqRefreshToken_ClientData {
	if m != nil {
		return m.ClientData
	}
	return nil
}

func (x *ReqRefreshToken) GetName() string {
	if x, ok := x.GetClientData().(*ReqRefreshToken_Name); ok {
		return x.Name
	}
	return ""
}

func (x *ReqRefreshToken) GetPublicId() string {
	if x, ok := x.GetClientData().(*ReqRefreshToken_PublicId); ok {
		return x.PublicId
	}
	return ""
}

func (x *ReqRefreshToken) GetClusterId() string {
	if x, ok := x.GetClientData().(*ReqRefreshToken_ClusterId); ok {
		return x.ClusterId
	}
	return ""
}

func (x *ReqRefreshToken) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *ReqRefreshToken) GetExtDuration() *duration.Duration {
	if x != nil {
		return x.ExtDuration
	}
	return nil
}

type isReqRefreshToken_ClientData interface {
	isReqRefreshToken_ClientData()
}

type ReqRefreshToken_Name struct {
	Name string `protobuf:"bytes,1,opt,name=name,proto3,oneof"`
}

type ReqRefreshToken_PublicId struct {
	PublicId string `protobuf:"bytes,2,opt,name=public_id,json=publicId,proto3,oneof"`
}

type ReqRefreshToken_ClusterId struct {
	ClusterId string `protobuf:"bytes,3,opt,name=cluster_id,json=clusterId,proto3,oneof"`
}

func (*ReqRefreshToken_Name) isReqRefreshToken_ClientData() {}

func (*ReqRefreshToken_PublicId) isReqRefreshToken_ClientData() {}

func (*ReqRefreshToken_ClusterId) isReqRefreshToken_ClientData() {}

type ResRefreshToken struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token string `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
}

func (x *ResRefreshToken) Reset() {
	*x = ResRefreshToken{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_services_auth_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResRefreshToken) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResRefreshToken) ProtoMessage() {}

func (x *ResRefreshToken) ProtoReflect() protoreflect.Message {
	mi := &file_proto_services_auth_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResRefreshToken.ProtoReflect.Descriptor instead.
func (*ResRefreshToken) Descriptor() ([]byte, []int) {
	return file_proto_services_auth_proto_rawDescGZIP(), []int{11}
}

func (x *ResRefreshToken) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

type ReqGetClientData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to ClientData:
	//	*ReqGetClientData_Name
	//	*ReqGetClientData_PublicId
	//	*ReqGetClientData_ClusterId
	//	*ReqGetClientData_ApiKey
	ClientData isReqGetClientData_ClientData `protobuf_oneof:"ClientData"`
}

func (x *ReqGetClientData) Reset() {
	*x = ReqGetClientData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_services_auth_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqGetClientData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqGetClientData) ProtoMessage() {}

func (x *ReqGetClientData) ProtoReflect() protoreflect.Message {
	mi := &file_proto_services_auth_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqGetClientData.ProtoReflect.Descriptor instead.
func (*ReqGetClientData) Descriptor() ([]byte, []int) {
	return file_proto_services_auth_proto_rawDescGZIP(), []int{12}
}

func (m *ReqGetClientData) GetClientData() isReqGetClientData_ClientData {
	if m != nil {
		return m.ClientData
	}
	return nil
}

func (x *ReqGetClientData) GetName() string {
	if x, ok := x.GetClientData().(*ReqGetClientData_Name); ok {
		return x.Name
	}
	return ""
}

func (x *ReqGetClientData) GetPublicId() string {
	if x, ok := x.GetClientData().(*ReqGetClientData_PublicId); ok {
		return x.PublicId
	}
	return ""
}

func (x *ReqGetClientData) GetClusterId() string {
	if x, ok := x.GetClientData().(*ReqGetClientData_ClusterId); ok {
		return x.ClusterId
	}
	return ""
}

func (x *ReqGetClientData) GetApiKey() string {
	if x, ok := x.GetClientData().(*ReqGetClientData_ApiKey); ok {
		return x.ApiKey
	}
	return ""
}

type isReqGetClientData_ClientData interface {
	isReqGetClientData_ClientData()
}

type ReqGetClientData_Name struct {
	Name string `protobuf:"bytes,1,opt,name=name,proto3,oneof"`
}

type ReqGetClientData_PublicId struct {
	PublicId string `protobuf:"bytes,2,opt,name=public_id,json=publicId,proto3,oneof"`
}

type ReqGetClientData_ClusterId struct {
	ClusterId string `protobuf:"bytes,3,opt,name=cluster_id,json=clusterId,proto3,oneof"`
}

type ReqGetClientData_ApiKey struct {
	ApiKey string `protobuf:"bytes,4,opt,name=api_key,json=apiKey,proto3,oneof"`
}

func (*ReqGetClientData_Name) isReqGetClientData_ClientData() {}

func (*ReqGetClientData_PublicId) isReqGetClientData_ClientData() {}

func (*ReqGetClientData_ClusterId) isReqGetClientData_ClientData() {}

func (*ReqGetClientData_ApiKey) isReqGetClientData_ClientData() {}

type ResGetClientData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Client *events.Client `protobuf:"bytes,1,opt,name=client,proto3" json:"client,omitempty"`
}

func (x *ResGetClientData) Reset() {
	*x = ResGetClientData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_services_auth_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResGetClientData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResGetClientData) ProtoMessage() {}

func (x *ResGetClientData) ProtoReflect() protoreflect.Message {
	mi := &file_proto_services_auth_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResGetClientData.ProtoReflect.Descriptor instead.
func (*ResGetClientData) Descriptor() ([]byte, []int) {
	return file_proto_services_auth_proto_rawDescGZIP(), []int{13}
}

func (x *ResGetClientData) GetClient() *events.Client {
	if x != nil {
		return x.Client
	}
	return nil
}

type ReqAddCluster struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cluster    *events.Cluster `protobuf:"bytes,1,opt,name=cluster,proto3" json:"cluster,omitempty"`
	ClientName string          `protobuf:"bytes,2,opt,name=client_name,json=clientName,proto3" json:"client_name,omitempty"`
}

func (x *ReqAddCluster) Reset() {
	*x = ReqAddCluster{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_services_auth_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqAddCluster) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqAddCluster) ProtoMessage() {}

func (x *ReqAddCluster) ProtoReflect() protoreflect.Message {
	mi := &file_proto_services_auth_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqAddCluster.ProtoReflect.Descriptor instead.
func (*ReqAddCluster) Descriptor() ([]byte, []int) {
	return file_proto_services_auth_proto_rawDescGZIP(), []int{14}
}

func (x *ReqAddCluster) GetCluster() *events.Cluster {
	if x != nil {
		return x.Cluster
	}
	return nil
}

func (x *ReqAddCluster) GetClientName() string {
	if x != nil {
		return x.ClientName
	}
	return ""
}

type ResAddCluster struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ResAddCluster) Reset() {
	*x = ResAddCluster{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_services_auth_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResAddCluster) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResAddCluster) ProtoMessage() {}

func (x *ResAddCluster) ProtoReflect() protoreflect.Message {
	mi := &file_proto_services_auth_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResAddCluster.ProtoReflect.Descriptor instead.
func (*ResAddCluster) Descriptor() ([]byte, []int) {
	return file_proto_services_auth_proto_rawDescGZIP(), []int{15}
}

type ReqUpdateCluster struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cluster    *events.Cluster `protobuf:"bytes,1,opt,name=cluster,proto3" json:"cluster,omitempty"`
	ClientName string          `protobuf:"bytes,2,opt,name=client_name,json=clientName,proto3" json:"client_name,omitempty"`
}

func (x *ReqUpdateCluster) Reset() {
	*x = ReqUpdateCluster{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_services_auth_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqUpdateCluster) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqUpdateCluster) ProtoMessage() {}

func (x *ReqUpdateCluster) ProtoReflect() protoreflect.Message {
	mi := &file_proto_services_auth_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqUpdateCluster.ProtoReflect.Descriptor instead.
func (*ReqUpdateCluster) Descriptor() ([]byte, []int) {
	return file_proto_services_auth_proto_rawDescGZIP(), []int{16}
}

func (x *ReqUpdateCluster) GetCluster() *events.Cluster {
	if x != nil {
		return x.Cluster
	}
	return nil
}

func (x *ReqUpdateCluster) GetClientName() string {
	if x != nil {
		return x.ClientName
	}
	return ""
}

type ResUpdateCluster struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ResUpdateCluster) Reset() {
	*x = ResUpdateCluster{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_services_auth_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResUpdateCluster) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResUpdateCluster) ProtoMessage() {}

func (x *ResUpdateCluster) ProtoReflect() protoreflect.Message {
	mi := &file_proto_services_auth_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResUpdateCluster.ProtoReflect.Descriptor instead.
func (*ResUpdateCluster) Descriptor() ([]byte, []int) {
	return file_proto_services_auth_proto_rawDescGZIP(), []int{17}
}

type ReqDeleteCluster struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to ClusterData:
	//	*ReqDeleteCluster_Name
	//	*ReqDeleteCluster_ClusterId
	ClusterData isReqDeleteCluster_ClusterData `protobuf_oneof:"ClusterData"`
	DeleteType  enums.DeleteType               `protobuf:"varint,3,opt,name=delete_type,json=deleteType,proto3,enum=enums.DeleteType" json:"delete_type,omitempty"`
}

func (x *ReqDeleteCluster) Reset() {
	*x = ReqDeleteCluster{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_services_auth_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqDeleteCluster) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqDeleteCluster) ProtoMessage() {}

func (x *ReqDeleteCluster) ProtoReflect() protoreflect.Message {
	mi := &file_proto_services_auth_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqDeleteCluster.ProtoReflect.Descriptor instead.
func (*ReqDeleteCluster) Descriptor() ([]byte, []int) {
	return file_proto_services_auth_proto_rawDescGZIP(), []int{18}
}

func (m *ReqDeleteCluster) GetClusterData() isReqDeleteCluster_ClusterData {
	if m != nil {
		return m.ClusterData
	}
	return nil
}

func (x *ReqDeleteCluster) GetName() string {
	if x, ok := x.GetClusterData().(*ReqDeleteCluster_Name); ok {
		return x.Name
	}
	return ""
}

func (x *ReqDeleteCluster) GetClusterId() string {
	if x, ok := x.GetClusterData().(*ReqDeleteCluster_ClusterId); ok {
		return x.ClusterId
	}
	return ""
}

func (x *ReqDeleteCluster) GetDeleteType() enums.DeleteType {
	if x != nil {
		return x.DeleteType
	}
	return enums.DeleteType_Soft
}

type isReqDeleteCluster_ClusterData interface {
	isReqDeleteCluster_ClusterData()
}

type ReqDeleteCluster_Name struct {
	Name string `protobuf:"bytes,1,opt,name=name,proto3,oneof"`
}

type ReqDeleteCluster_ClusterId struct {
	ClusterId string `protobuf:"bytes,2,opt,name=cluster_id,json=clusterId,proto3,oneof"`
}

func (*ReqDeleteCluster_Name) isReqDeleteCluster_ClusterData() {}

func (*ReqDeleteCluster_ClusterId) isReqDeleteCluster_ClusterData() {}

type ResDeleteCluster struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ResDeleteCluster) Reset() {
	*x = ResDeleteCluster{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_services_auth_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResDeleteCluster) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResDeleteCluster) ProtoMessage() {}

func (x *ResDeleteCluster) ProtoReflect() protoreflect.Message {
	mi := &file_proto_services_auth_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResDeleteCluster.ProtoReflect.Descriptor instead.
func (*ResDeleteCluster) Descriptor() ([]byte, []int) {
	return file_proto_services_auth_proto_rawDescGZIP(), []int{19}
}

type ReqGetCluster struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to ClusterData:
	//	*ReqGetCluster_Name
	//	*ReqGetCluster_ClusterId
	ClusterData isReqGetCluster_ClusterData `protobuf_oneof:"ClusterData"`
}

func (x *ReqGetCluster) Reset() {
	*x = ReqGetCluster{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_services_auth_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqGetCluster) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqGetCluster) ProtoMessage() {}

func (x *ReqGetCluster) ProtoReflect() protoreflect.Message {
	mi := &file_proto_services_auth_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqGetCluster.ProtoReflect.Descriptor instead.
func (*ReqGetCluster) Descriptor() ([]byte, []int) {
	return file_proto_services_auth_proto_rawDescGZIP(), []int{20}
}

func (m *ReqGetCluster) GetClusterData() isReqGetCluster_ClusterData {
	if m != nil {
		return m.ClusterData
	}
	return nil
}

func (x *ReqGetCluster) GetName() string {
	if x, ok := x.GetClusterData().(*ReqGetCluster_Name); ok {
		return x.Name
	}
	return ""
}

func (x *ReqGetCluster) GetClusterId() string {
	if x, ok := x.GetClusterData().(*ReqGetCluster_ClusterId); ok {
		return x.ClusterId
	}
	return ""
}

type isReqGetCluster_ClusterData interface {
	isReqGetCluster_ClusterData()
}

type ReqGetCluster_Name struct {
	Name string `protobuf:"bytes,1,opt,name=name,proto3,oneof"`
}

type ReqGetCluster_ClusterId struct {
	ClusterId string `protobuf:"bytes,2,opt,name=cluster_id,json=clusterId,proto3,oneof"`
}

func (*ReqGetCluster_Name) isReqGetCluster_ClusterData() {}

func (*ReqGetCluster_ClusterId) isReqGetCluster_ClusterData() {}

type ResGetCluster struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cluster *events.Cluster `protobuf:"bytes,1,opt,name=cluster,proto3" json:"cluster,omitempty"`
}

func (x *ResGetCluster) Reset() {
	*x = ResGetCluster{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_services_auth_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResGetCluster) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResGetCluster) ProtoMessage() {}

func (x *ResGetCluster) ProtoReflect() protoreflect.Message {
	mi := &file_proto_services_auth_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResGetCluster.ProtoReflect.Descriptor instead.
func (*ResGetCluster) Descriptor() ([]byte, []int) {
	return file_proto_services_auth_proto_rawDescGZIP(), []int{21}
}

func (x *ResGetCluster) GetCluster() *events.Cluster {
	if x != nil {
		return x.Cluster
	}
	return nil
}

type ReqAddResource struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Resource *events.Resource `protobuf:"bytes,1,opt,name=resource,proto3" json:"resource,omitempty"`
}

func (x *ReqAddResource) Reset() {
	*x = ReqAddResource{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_services_auth_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqAddResource) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqAddResource) ProtoMessage() {}

func (x *ReqAddResource) ProtoReflect() protoreflect.Message {
	mi := &file_proto_services_auth_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqAddResource.ProtoReflect.Descriptor instead.
func (*ReqAddResource) Descriptor() ([]byte, []int) {
	return file_proto_services_auth_proto_rawDescGZIP(), []int{22}
}

func (x *ReqAddResource) GetResource() *events.Resource {
	if x != nil {
		return x.Resource
	}
	return nil
}

type ResAddResource struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ResAddResource) Reset() {
	*x = ResAddResource{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_services_auth_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResAddResource) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResAddResource) ProtoMessage() {}

func (x *ResAddResource) ProtoReflect() protoreflect.Message {
	mi := &file_proto_services_auth_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResAddResource.ProtoReflect.Descriptor instead.
func (*ResAddResource) Descriptor() ([]byte, []int) {
	return file_proto_services_auth_proto_rawDescGZIP(), []int{23}
}

type ReqUpdateResource struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Resource *events.Resource `protobuf:"bytes,1,opt,name=resource,proto3" json:"resource,omitempty"`
}

func (x *ReqUpdateResource) Reset() {
	*x = ReqUpdateResource{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_services_auth_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqUpdateResource) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqUpdateResource) ProtoMessage() {}

func (x *ReqUpdateResource) ProtoReflect() protoreflect.Message {
	mi := &file_proto_services_auth_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqUpdateResource.ProtoReflect.Descriptor instead.
func (*ReqUpdateResource) Descriptor() ([]byte, []int) {
	return file_proto_services_auth_proto_rawDescGZIP(), []int{24}
}

func (x *ReqUpdateResource) GetResource() *events.Resource {
	if x != nil {
		return x.Resource
	}
	return nil
}

type ResUpdateResource struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ResUpdateResource) Reset() {
	*x = ResUpdateResource{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_services_auth_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResUpdateResource) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResUpdateResource) ProtoMessage() {}

func (x *ResUpdateResource) ProtoReflect() protoreflect.Message {
	mi := &file_proto_services_auth_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResUpdateResource.ProtoReflect.Descriptor instead.
func (*ResUpdateResource) Descriptor() ([]byte, []int) {
	return file_proto_services_auth_proto_rawDescGZIP(), []int{25}
}

type ReqDeleteResource struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TargetRef  *ReqDeleteResource_ResourceData `protobuf:"bytes,4,opt,name=target_ref,json=targetRef,proto3" json:"target_ref,omitempty" validate:"required"`                           // @gotags: validate:"required"
	DeleteType enums.DeleteType                `protobuf:"varint,5,opt,name=delete_type,json=deleteType,proto3,enum=enums.DeleteType" json:"delete_type,omitempty" validate:"required"` // @gotags: validate:"required"
}

func (x *ReqDeleteResource) Reset() {
	*x = ReqDeleteResource{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_services_auth_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqDeleteResource) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqDeleteResource) ProtoMessage() {}

func (x *ReqDeleteResource) ProtoReflect() protoreflect.Message {
	mi := &file_proto_services_auth_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqDeleteResource.ProtoReflect.Descriptor instead.
func (*ReqDeleteResource) Descriptor() ([]byte, []int) {
	return file_proto_services_auth_proto_rawDescGZIP(), []int{26}
}

func (x *ReqDeleteResource) GetTargetRef() *ReqDeleteResource_ResourceData {
	if x != nil {
		return x.TargetRef
	}
	return nil
}

func (x *ReqDeleteResource) GetDeleteType() enums.DeleteType {
	if x != nil {
		return x.DeleteType
	}
	return enums.DeleteType_Soft
}

type ResDeleteResource struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ResDeleteResource) Reset() {
	*x = ResDeleteResource{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_services_auth_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResDeleteResource) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResDeleteResource) ProtoMessage() {}

func (x *ResDeleteResource) ProtoReflect() protoreflect.Message {
	mi := &file_proto_services_auth_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResDeleteResource.ProtoReflect.Descriptor instead.
func (*ResDeleteResource) Descriptor() ([]byte, []int) {
	return file_proto_services_auth_proto_rawDescGZIP(), []int{27}
}

type ReqGetResources struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to ResourceData:
	//	*ReqGetResources_Name
	//	*ReqGetResources_ClusterId
	//	*ReqGetResources_Namespace
	ResourceData isReqGetResources_ResourceData `protobuf_oneof:"ResourceData"`
}

func (x *ReqGetResources) Reset() {
	*x = ReqGetResources{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_services_auth_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqGetResources) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqGetResources) ProtoMessage() {}

func (x *ReqGetResources) ProtoReflect() protoreflect.Message {
	mi := &file_proto_services_auth_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqGetResources.ProtoReflect.Descriptor instead.
func (*ReqGetResources) Descriptor() ([]byte, []int) {
	return file_proto_services_auth_proto_rawDescGZIP(), []int{28}
}

func (m *ReqGetResources) GetResourceData() isReqGetResources_ResourceData {
	if m != nil {
		return m.ResourceData
	}
	return nil
}

func (x *ReqGetResources) GetName() string {
	if x, ok := x.GetResourceData().(*ReqGetResources_Name); ok {
		return x.Name
	}
	return ""
}

func (x *ReqGetResources) GetClusterId() string {
	if x, ok := x.GetResourceData().(*ReqGetResources_ClusterId); ok {
		return x.ClusterId
	}
	return ""
}

func (x *ReqGetResources) GetNamespace() string {
	if x, ok := x.GetResourceData().(*ReqGetResources_Namespace); ok {
		return x.Namespace
	}
	return ""
}

type isReqGetResources_ResourceData interface {
	isReqGetResources_ResourceData()
}

type ReqGetResources_Name struct {
	Name string `protobuf:"bytes,1,opt,name=name,proto3,oneof"`
}

type ReqGetResources_ClusterId struct {
	ClusterId string `protobuf:"bytes,2,opt,name=cluster_id,json=clusterId,proto3,oneof"`
}

type ReqGetResources_Namespace struct {
	Namespace string `protobuf:"bytes,3,opt,name=namespace,proto3,oneof"`
}

func (*ReqGetResources_Name) isReqGetResources_ResourceData() {}

func (*ReqGetResources_ClusterId) isReqGetResources_ResourceData() {}

func (*ReqGetResources_Namespace) isReqGetResources_ResourceData() {}

type ResGetResources struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Resources []*events.Resource `protobuf:"bytes,1,rep,name=resources,proto3" json:"resources,omitempty"`
}

func (x *ResGetResources) Reset() {
	*x = ResGetResources{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_services_auth_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResGetResources) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResGetResources) ProtoMessage() {}

func (x *ResGetResources) ProtoReflect() protoreflect.Message {
	mi := &file_proto_services_auth_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResGetResources.ProtoReflect.Descriptor instead.
func (*ResGetResources) Descriptor() ([]byte, []int) {
	return file_proto_services_auth_proto_rawDescGZIP(), []int{29}
}

func (x *ResGetResources) GetResources() []*events.Resource {
	if x != nil {
		return x.Resources
	}
	return nil
}

type ReqDeleteResource_ResourceData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name      string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty" validate:"required,ascii"`                            // @gotags: validate:"required,ascii"
	ClusterId string `protobuf:"bytes,2,opt,name=cluster_id,json=clusterId,proto3" json:"cluster_id,omitempty" validate:"required,ascii"` // @gotags: validate:"required,ascii"
	Namespace string `protobuf:"bytes,3,opt,name=namespace,proto3" json:"namespace,omitempty" validate:"required,ascii"`                  // @gotags: validate:"required,ascii"
}

func (x *ReqDeleteResource_ResourceData) Reset() {
	*x = ReqDeleteResource_ResourceData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_services_auth_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqDeleteResource_ResourceData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqDeleteResource_ResourceData) ProtoMessage() {}

func (x *ReqDeleteResource_ResourceData) ProtoReflect() protoreflect.Message {
	mi := &file_proto_services_auth_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqDeleteResource_ResourceData.ProtoReflect.Descriptor instead.
func (*ReqDeleteResource_ResourceData) Descriptor() ([]byte, []int) {
	return file_proto_services_auth_proto_rawDescGZIP(), []int{26, 0}
}

func (x *ReqDeleteResource_ResourceData) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ReqDeleteResource_ResourceData) GetClusterId() string {
	if x != nil {
		return x.ClusterId
	}
	return ""
}

func (x *ReqDeleteResource_ResourceData) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

var File_proto_services_auth_proto protoreflect.FileDescriptor

var file_proto_services_auth_proto_rawDesc = []byte{
	0x0a, 0x19, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x2f, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x1a, 0x17, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x73, 0x2f, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f,
	0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x16,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x65, 0x6e, 0x75, 0x6d, 0x73, 0x2f, 0x61, 0x75, 0x74, 0x68,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x39, 0x0a, 0x0f, 0x52, 0x65, 0x71, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x12, 0x26, 0x0a, 0x06, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x65, 0x76, 0x65, 0x6e,
	0x74, 0x73, 0x2e, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x52, 0x06, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x22, 0x2e, 0x0a, 0x0f, 0x52, 0x65, 0x73, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x49,
	0x64, 0x22, 0x92, 0x01, 0x0a, 0x16, 0x52, 0x65, 0x71, 0x49, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64,
	0x61, 0x74, 0x65, 0x41, 0x6c, 0x6c, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x12, 0x14, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x09, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x08, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x49,
	0x64, 0x12, 0x1f, 0x0a, 0x0a, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x09, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x62, 0x69, 0x74, 0x65, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x05, 0x62, 0x69, 0x74, 0x65, 0x73, 0x42, 0x0c, 0x0a, 0x0a, 0x43, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x22, 0x31, 0x0a, 0x16, 0x52, 0x65, 0x73, 0x49, 0x6e, 0x76,
	0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x41, 0x6c, 0x6c, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x73,
	0x12, 0x17, 0x0a, 0x07, 0x72, 0x73, 0x61, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x06, 0x72, 0x73, 0x61, 0x4b, 0x65, 0x79, 0x22, 0x39, 0x0a, 0x0f, 0x52, 0x65, 0x71,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x12, 0x26, 0x0a, 0x06,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x52, 0x06, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x22, 0x11, 0x0a, 0x0f, 0x52, 0x65, 0x73, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x22, 0xc4, 0x01, 0x0a, 0x0f, 0x52, 0x65, 0x71, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x1d, 0x0a, 0x09, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x08, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x49, 0x64,
	0x12, 0x1f, 0x0a, 0x0a, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x09, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x19, 0x0a, 0x07, 0x61, 0x70, 0x69, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x00, 0x52, 0x06, 0x61, 0x70, 0x69, 0x4b, 0x65, 0x79, 0x12, 0x32, 0x0a, 0x0b,
	0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x11, 0x2e, 0x65, 0x6e, 0x75, 0x6d, 0x73, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x0a, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x42, 0x0c, 0x0a, 0x0a, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x22, 0x11,
	0x0a, 0x0f, 0x52, 0x65, 0x73, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x22, 0xb4, 0x01, 0x0a, 0x10, 0x52, 0x65, 0x71, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74,
	0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x14, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x09,
	0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x00, 0x52, 0x08, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0a, 0x63,
	0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x00, 0x52, 0x09, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x49, 0x64, 0x12, 0x3c, 0x0a, 0x0c,
	0x65, 0x78, 0x74, 0x5f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0b, 0x65,
	0x78, 0x74, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x0c, 0x0a, 0x0a, 0x43, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x22, 0x28, 0x0a, 0x10, 0x52, 0x65, 0x73, 0x47,
	0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x14, 0x0a, 0x05,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x22, 0xc9, 0x01, 0x0a, 0x0f, 0x52, 0x65, 0x71, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73,
	0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x14, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x09,
	0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x00, 0x52, 0x08, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0a, 0x63,
	0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x00, 0x52, 0x09, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x12, 0x3c, 0x0a, 0x0c, 0x65, 0x78, 0x74, 0x5f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x0b, 0x65, 0x78, 0x74, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x42, 0x0c, 0x0a, 0x0a, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x22, 0x27,
	0x0a, 0x0f, 0x52, 0x65, 0x73, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x91, 0x01, 0x0a, 0x10, 0x52, 0x65, 0x71, 0x47,
	0x65, 0x74, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x14, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x09, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x08, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x49,
	0x64, 0x12, 0x1f, 0x0a, 0x0a, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x09, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x19, 0x0a, 0x07, 0x61, 0x70, 0x69, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x06, 0x61, 0x70, 0x69, 0x4b, 0x65, 0x79, 0x42, 0x0c, 0x0a,
	0x0a, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x22, 0x3a, 0x0a, 0x10, 0x52,
	0x65, 0x73, 0x47, 0x65, 0x74, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12,
	0x26, 0x0a, 0x06, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0e, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x52,
	0x06, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x22, 0x5b, 0x0a, 0x0d, 0x52, 0x65, 0x71, 0x41, 0x64,
	0x64, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x12, 0x29, 0x0a, 0x07, 0x63, 0x6c, 0x75, 0x73,
	0x74, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x65, 0x76, 0x65, 0x6e,
	0x74, 0x73, 0x2e, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x52, 0x07, 0x63, 0x6c, 0x75, 0x73,
	0x74, 0x65, 0x72, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x4e, 0x61, 0x6d, 0x65, 0x22, 0x0f, 0x0a, 0x0d, 0x52, 0x65, 0x73, 0x41, 0x64, 0x64, 0x43, 0x6c,
	0x75, 0x73, 0x74, 0x65, 0x72, 0x22, 0x5e, 0x0a, 0x10, 0x52, 0x65, 0x71, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x12, 0x29, 0x0a, 0x07, 0x63, 0x6c, 0x75,
	0x73, 0x74, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x73, 0x2e, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x52, 0x07, 0x63, 0x6c, 0x75,
	0x73, 0x74, 0x65, 0x72, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x12, 0x0a, 0x10, 0x52, 0x65, 0x73, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x22, 0x8c, 0x01, 0x0a, 0x10, 0x52, 0x65,
	0x71, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x12, 0x14,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0a, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x09, 0x63, 0x6c, 0x75, 0x73,
	0x74, 0x65, 0x72, 0x49, 0x64, 0x12, 0x32, 0x0a, 0x0b, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x11, 0x2e, 0x65, 0x6e, 0x75,
	0x6d, 0x73, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0a, 0x64,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x42, 0x0d, 0x0a, 0x0b, 0x43, 0x6c, 0x75,
	0x73, 0x74, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x22, 0x12, 0x0a, 0x10, 0x52, 0x65, 0x73, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x22, 0x55, 0x0a, 0x0d,
	0x52, 0x65, 0x71, 0x47, 0x65, 0x74, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x12, 0x14, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0a, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x09, 0x63, 0x6c, 0x75, 0x73, 0x74,
	0x65, 0x72, 0x49, 0x64, 0x42, 0x0d, 0x0a, 0x0b, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x44,
	0x61, 0x74, 0x61, 0x22, 0x3a, 0x0a, 0x0d, 0x52, 0x65, 0x73, 0x47, 0x65, 0x74, 0x43, 0x6c, 0x75,
	0x73, 0x74, 0x65, 0x72, 0x12, 0x29, 0x0a, 0x07, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x43,
	0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x52, 0x07, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x22,
	0x3e, 0x0a, 0x0e, 0x52, 0x65, 0x71, 0x41, 0x64, 0x64, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x12, 0x2c, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x52, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x08, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x22,
	0x10, 0x0a, 0x0e, 0x52, 0x65, 0x73, 0x41, 0x64, 0x64, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x22, 0x41, 0x0a, 0x11, 0x52, 0x65, 0x71, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x2c, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74,
	0x73, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x08, 0x72, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x22, 0x13, 0x0a, 0x11, 0x52, 0x65, 0x73, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x22, 0xf1, 0x01, 0x0a, 0x11, 0x52, 0x65,
	0x71, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12,
	0x47, 0x0a, 0x0a, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x72, 0x65, 0x66, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x52,
	0x65, 0x71, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x09, 0x74,
	0x61, 0x72, 0x67, 0x65, 0x74, 0x52, 0x65, 0x66, 0x12, 0x32, 0x0a, 0x0b, 0x64, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x11, 0x2e,
	0x65, 0x6e, 0x75, 0x6d, 0x73, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x0a, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x1a, 0x5f, 0x0a, 0x0c,
	0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x22, 0x13, 0x0a,
	0x11, 0x52, 0x65, 0x73, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x22, 0x78, 0x0a, 0x0f, 0x52, 0x65, 0x71, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x73, 0x12, 0x14, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0a, 0x63,
	0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x00, 0x52, 0x09, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x09,
	0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x00, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x42, 0x0e, 0x0a, 0x0c,
	0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x44, 0x61, 0x74, 0x61, 0x22, 0x41, 0x0a, 0x0f,
	0x52, 0x65, 0x73, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x12,
	0x2e, 0x0a, 0x09, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x10, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x52, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x52, 0x09, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x32,
	0xe3, 0x08, 0x0a, 0x0b, 0x41, 0x75, 0x74, 0x68, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12,
	0x46, 0x0a, 0x0c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x12,
	0x19, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x52, 0x65, 0x71, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x1a, 0x19, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x52, 0x65, 0x73, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x22, 0x00, 0x12, 0x46, 0x0a, 0x0c, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x12, 0x19, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x2e, 0x52, 0x65, 0x71, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x1a, 0x19, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x52, 0x65,
	0x73, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x22, 0x00, 0x12,
	0x46, 0x0a, 0x0c, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x12,
	0x19, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x52, 0x65, 0x71, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x1a, 0x19, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x52, 0x65, 0x73, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x22, 0x00, 0x12, 0x49, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x43, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1a, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x2e, 0x52, 0x65, 0x71, 0x47, 0x65, 0x74, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x44, 0x61, 0x74, 0x61, 0x1a, 0x1a, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e,
	0x52, 0x65, 0x73, 0x47, 0x65, 0x74, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61,
	0x22, 0x00, 0x12, 0x40, 0x0a, 0x0a, 0x41, 0x64, 0x64, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72,
	0x12, 0x17, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x52, 0x65, 0x71, 0x41,
	0x64, 0x64, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x1a, 0x17, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x73, 0x2e, 0x52, 0x65, 0x73, 0x41, 0x64, 0x64, 0x43, 0x6c, 0x75, 0x73, 0x74,
	0x65, 0x72, 0x22, 0x00, 0x12, 0x49, 0x0a, 0x0d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6c,
	0x75, 0x73, 0x74, 0x65, 0x72, 0x12, 0x1a, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x2e, 0x52, 0x65, 0x71, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65,
	0x72, 0x1a, 0x1a, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x52, 0x65, 0x73,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x22, 0x00, 0x12,
	0x49, 0x0a, 0x0d, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72,
	0x12, 0x1a, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x52, 0x65, 0x71, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x1a, 0x1a, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x52, 0x65, 0x73, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x22, 0x00, 0x12, 0x40, 0x0a, 0x0a, 0x47, 0x65,
	0x74, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x12, 0x17, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x2e, 0x52, 0x65, 0x71, 0x47, 0x65, 0x74, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65,
	0x72, 0x1a, 0x17, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x52, 0x65, 0x73,
	0x47, 0x65, 0x74, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x22, 0x00, 0x12, 0x43, 0x0a, 0x0b,
	0x41, 0x64, 0x64, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x18, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x52, 0x65, 0x71, 0x41, 0x64, 0x64, 0x52, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x1a, 0x18, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x2e, 0x52, 0x65, 0x73, 0x41, 0x64, 0x64, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x22,
	0x00, 0x12, 0x4c, 0x0a, 0x0e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x12, 0x1b, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x52,
	0x65, 0x71, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x1a, 0x1b, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x52, 0x65, 0x73, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x22, 0x00, 0x12,
	0x4c, 0x0a, 0x0e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x12, 0x1b, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x52, 0x65, 0x71,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x1a, 0x1b,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x52, 0x65, 0x73, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x22, 0x00, 0x12, 0x46, 0x0a,
	0x0c, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x12, 0x19, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x52, 0x65, 0x71, 0x47, 0x65, 0x74, 0x52,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x1a, 0x19, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x2e, 0x52, 0x65, 0x73, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x73, 0x22, 0x00, 0x12, 0x49, 0x0a, 0x0d, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74,
	0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1a, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x2e, 0x52, 0x65, 0x71, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x1a, 0x1a, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x52, 0x65,
	0x73, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x00,
	0x12, 0x46, 0x0a, 0x0c, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x12, 0x19, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x52, 0x65, 0x71, 0x52,
	0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x1a, 0x19, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x52, 0x65, 0x73, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73,
	0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x00, 0x12, 0x5b, 0x0a, 0x13, 0x49, 0x6e, 0x76, 0x61,
	0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x41, 0x6c, 0x6c, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x12,
	0x20, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x52, 0x65, 0x71, 0x49, 0x6e,
	0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x41, 0x6c, 0x6c, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x73, 0x1a, 0x20, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x52, 0x65, 0x73,
	0x49, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x41, 0x6c, 0x6c, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x73, 0x22, 0x00, 0x42, 0x3d, 0x5a, 0x3b, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x64, 0x79, 0x73, 0x6e, 0x69, 0x78, 0x2f, 0x70, 0x72, 0x65, 0x64, 0x69,
	0x63, 0x74, 0x6b, 0x75, 0x62, 0x65, 0x2d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x65, 0x78, 0x74,
	0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_services_auth_proto_rawDescOnce sync.Once
	file_proto_services_auth_proto_rawDescData = file_proto_services_auth_proto_rawDesc
)

func file_proto_services_auth_proto_rawDescGZIP() []byte {
	file_proto_services_auth_proto_rawDescOnce.Do(func() {
		file_proto_services_auth_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_services_auth_proto_rawDescData)
	})
	return file_proto_services_auth_proto_rawDescData
}

var file_proto_services_auth_proto_msgTypes = make([]protoimpl.MessageInfo, 31)
var file_proto_services_auth_proto_goTypes = []interface{}{
	(*ReqCreateClient)(nil),                // 0: services.ReqCreateClient
	(*ResCreateClient)(nil),                // 1: services.ResCreateClient
	(*ReqInvalidateAllTokens)(nil),         // 2: services.ReqInvalidateAllTokens
	(*ResInvalidateAllTokens)(nil),         // 3: services.ResInvalidateAllTokens
	(*ReqUpdateClient)(nil),                // 4: services.ReqUpdateClient
	(*ResUpdateClient)(nil),                // 5: services.ResUpdateClient
	(*ReqDeleteClient)(nil),                // 6: services.ReqDeleteClient
	(*ResDeleteClient)(nil),                // 7: services.ResDeleteClient
	(*ReqGenerateToken)(nil),               // 8: services.ReqGenerateToken
	(*ResGenerateToken)(nil),               // 9: services.ResGenerateToken
	(*ReqRefreshToken)(nil),                // 10: services.ReqRefreshToken
	(*ResRefreshToken)(nil),                // 11: services.ResRefreshToken
	(*ReqGetClientData)(nil),               // 12: services.ReqGetClientData
	(*ResGetClientData)(nil),               // 13: services.ResGetClientData
	(*ReqAddCluster)(nil),                  // 14: services.ReqAddCluster
	(*ResAddCluster)(nil),                  // 15: services.ResAddCluster
	(*ReqUpdateCluster)(nil),               // 16: services.ReqUpdateCluster
	(*ResUpdateCluster)(nil),               // 17: services.ResUpdateCluster
	(*ReqDeleteCluster)(nil),               // 18: services.ReqDeleteCluster
	(*ResDeleteCluster)(nil),               // 19: services.ResDeleteCluster
	(*ReqGetCluster)(nil),                  // 20: services.ReqGetCluster
	(*ResGetCluster)(nil),                  // 21: services.ResGetCluster
	(*ReqAddResource)(nil),                 // 22: services.ReqAddResource
	(*ResAddResource)(nil),                 // 23: services.ResAddResource
	(*ReqUpdateResource)(nil),              // 24: services.ReqUpdateResource
	(*ResUpdateResource)(nil),              // 25: services.ResUpdateResource
	(*ReqDeleteResource)(nil),              // 26: services.ReqDeleteResource
	(*ResDeleteResource)(nil),              // 27: services.ResDeleteResource
	(*ReqGetResources)(nil),                // 28: services.ReqGetResources
	(*ResGetResources)(nil),                // 29: services.ResGetResources
	(*ReqDeleteResource_ResourceData)(nil), // 30: services.ReqDeleteResource.ResourceData
	(*events.Client)(nil),                  // 31: events.Client
	(enums.DeleteType)(0),                  // 32: enums.DeleteType
	(*duration.Duration)(nil),              // 33: google.protobuf.Duration
	(*events.Cluster)(nil),                 // 34: events.Cluster
	(*events.Resource)(nil),                // 35: events.Resource
}
var file_proto_services_auth_proto_depIdxs = []int32{
	31, // 0: services.ReqCreateClient.client:type_name -> events.Client
	31, // 1: services.ReqUpdateClient.client:type_name -> events.Client
	32, // 2: services.ReqDeleteClient.delete_type:type_name -> enums.DeleteType
	33, // 3: services.ReqGenerateToken.ext_duration:type_name -> google.protobuf.Duration
	33, // 4: services.ReqRefreshToken.ext_duration:type_name -> google.protobuf.Duration
	31, // 5: services.ResGetClientData.client:type_name -> events.Client
	34, // 6: services.ReqAddCluster.cluster:type_name -> events.Cluster
	34, // 7: services.ReqUpdateCluster.cluster:type_name -> events.Cluster
	32, // 8: services.ReqDeleteCluster.delete_type:type_name -> enums.DeleteType
	34, // 9: services.ResGetCluster.cluster:type_name -> events.Cluster
	35, // 10: services.ReqAddResource.resource:type_name -> events.Resource
	35, // 11: services.ReqUpdateResource.resource:type_name -> events.Resource
	30, // 12: services.ReqDeleteResource.target_ref:type_name -> services.ReqDeleteResource.ResourceData
	32, // 13: services.ReqDeleteResource.delete_type:type_name -> enums.DeleteType
	35, // 14: services.ResGetResources.resources:type_name -> events.Resource
	0,  // 15: services.AuthService.CreateClient:input_type -> services.ReqCreateClient
	4,  // 16: services.AuthService.UpdateClient:input_type -> services.ReqUpdateClient
	6,  // 17: services.AuthService.DeleteClient:input_type -> services.ReqDeleteClient
	12, // 18: services.AuthService.GetClientData:input_type -> services.ReqGetClientData
	14, // 19: services.AuthService.AddCluster:input_type -> services.ReqAddCluster
	16, // 20: services.AuthService.UpdateCluster:input_type -> services.ReqUpdateCluster
	18, // 21: services.AuthService.DeleteCluster:input_type -> services.ReqDeleteCluster
	20, // 22: services.AuthService.GetCluster:input_type -> services.ReqGetCluster
	22, // 23: services.AuthService.AddResource:input_type -> services.ReqAddResource
	24, // 24: services.AuthService.UpdateResource:input_type -> services.ReqUpdateResource
	26, // 25: services.AuthService.DeleteResource:input_type -> services.ReqDeleteResource
	28, // 26: services.AuthService.GetResources:input_type -> services.ReqGetResources
	8,  // 27: services.AuthService.GenerateToken:input_type -> services.ReqGenerateToken
	10, // 28: services.AuthService.RefreshToken:input_type -> services.ReqRefreshToken
	2,  // 29: services.AuthService.InvalidateAllTokens:input_type -> services.ReqInvalidateAllTokens
	1,  // 30: services.AuthService.CreateClient:output_type -> services.ResCreateClient
	5,  // 31: services.AuthService.UpdateClient:output_type -> services.ResUpdateClient
	7,  // 32: services.AuthService.DeleteClient:output_type -> services.ResDeleteClient
	13, // 33: services.AuthService.GetClientData:output_type -> services.ResGetClientData
	15, // 34: services.AuthService.AddCluster:output_type -> services.ResAddCluster
	17, // 35: services.AuthService.UpdateCluster:output_type -> services.ResUpdateCluster
	19, // 36: services.AuthService.DeleteCluster:output_type -> services.ResDeleteCluster
	21, // 37: services.AuthService.GetCluster:output_type -> services.ResGetCluster
	23, // 38: services.AuthService.AddResource:output_type -> services.ResAddResource
	25, // 39: services.AuthService.UpdateResource:output_type -> services.ResUpdateResource
	27, // 40: services.AuthService.DeleteResource:output_type -> services.ResDeleteResource
	29, // 41: services.AuthService.GetResources:output_type -> services.ResGetResources
	9,  // 42: services.AuthService.GenerateToken:output_type -> services.ResGenerateToken
	11, // 43: services.AuthService.RefreshToken:output_type -> services.ResRefreshToken
	3,  // 44: services.AuthService.InvalidateAllTokens:output_type -> services.ResInvalidateAllTokens
	30, // [30:45] is the sub-list for method output_type
	15, // [15:30] is the sub-list for method input_type
	15, // [15:15] is the sub-list for extension type_name
	15, // [15:15] is the sub-list for extension extendee
	0,  // [0:15] is the sub-list for field type_name
}

func init() { file_proto_services_auth_proto_init() }
func file_proto_services_auth_proto_init() {
	if File_proto_services_auth_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_services_auth_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqCreateClient); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_services_auth_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResCreateClient); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_services_auth_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqInvalidateAllTokens); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_services_auth_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResInvalidateAllTokens); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_services_auth_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqUpdateClient); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_services_auth_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResUpdateClient); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_services_auth_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqDeleteClient); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_services_auth_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResDeleteClient); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_services_auth_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqGenerateToken); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_services_auth_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResGenerateToken); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_services_auth_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqRefreshToken); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_services_auth_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResRefreshToken); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_services_auth_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqGetClientData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_services_auth_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResGetClientData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_services_auth_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqAddCluster); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_services_auth_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResAddCluster); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_services_auth_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqUpdateCluster); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_services_auth_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResUpdateCluster); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_services_auth_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqDeleteCluster); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_services_auth_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResDeleteCluster); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_services_auth_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqGetCluster); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_services_auth_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResGetCluster); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_services_auth_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqAddResource); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_services_auth_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResAddResource); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_services_auth_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqUpdateResource); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_services_auth_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResUpdateResource); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_services_auth_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqDeleteResource); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_services_auth_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResDeleteResource); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_services_auth_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqGetResources); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_services_auth_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResGetResources); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_services_auth_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqDeleteResource_ResourceData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_proto_services_auth_proto_msgTypes[2].OneofWrappers = []interface{}{
		(*ReqInvalidateAllTokens_Name)(nil),
		(*ReqInvalidateAllTokens_PublicId)(nil),
		(*ReqInvalidateAllTokens_ClusterId)(nil),
	}
	file_proto_services_auth_proto_msgTypes[6].OneofWrappers = []interface{}{
		(*ReqDeleteClient_Name)(nil),
		(*ReqDeleteClient_PublicId)(nil),
		(*ReqDeleteClient_ClusterId)(nil),
		(*ReqDeleteClient_ApiKey)(nil),
	}
	file_proto_services_auth_proto_msgTypes[8].OneofWrappers = []interface{}{
		(*ReqGenerateToken_Name)(nil),
		(*ReqGenerateToken_PublicId)(nil),
		(*ReqGenerateToken_ClusterId)(nil),
	}
	file_proto_services_auth_proto_msgTypes[10].OneofWrappers = []interface{}{
		(*ReqRefreshToken_Name)(nil),
		(*ReqRefreshToken_PublicId)(nil),
		(*ReqRefreshToken_ClusterId)(nil),
	}
	file_proto_services_auth_proto_msgTypes[12].OneofWrappers = []interface{}{
		(*ReqGetClientData_Name)(nil),
		(*ReqGetClientData_PublicId)(nil),
		(*ReqGetClientData_ClusterId)(nil),
		(*ReqGetClientData_ApiKey)(nil),
	}
	file_proto_services_auth_proto_msgTypes[18].OneofWrappers = []interface{}{
		(*ReqDeleteCluster_Name)(nil),
		(*ReqDeleteCluster_ClusterId)(nil),
	}
	file_proto_services_auth_proto_msgTypes[20].OneofWrappers = []interface{}{
		(*ReqGetCluster_Name)(nil),
		(*ReqGetCluster_ClusterId)(nil),
	}
	file_proto_services_auth_proto_msgTypes[28].OneofWrappers = []interface{}{
		(*ReqGetResources_Name)(nil),
		(*ReqGetResources_ClusterId)(nil),
		(*ReqGetResources_Namespace)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_services_auth_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   31,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_services_auth_proto_goTypes,
		DependencyIndexes: file_proto_services_auth_proto_depIdxs,
		MessageInfos:      file_proto_services_auth_proto_msgTypes,
	}.Build()
	File_proto_services_auth_proto = out.File
	file_proto_services_auth_proto_rawDesc = nil
	file_proto_services_auth_proto_goTypes = nil
	file_proto_services_auth_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// AuthServiceClient is the client API for AuthService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type AuthServiceClient interface {
	// TODO: add methods for get lists of any objects with optional filters and pagination...
	// client API
	CreateClient(ctx context.Context, in *ReqCreateClient, opts ...grpc.CallOption) (*ResCreateClient, error)
	UpdateClient(ctx context.Context, in *ReqUpdateClient, opts ...grpc.CallOption) (*ResUpdateClient, error)
	DeleteClient(ctx context.Context, in *ReqDeleteClient, opts ...grpc.CallOption) (*ResDeleteClient, error)
	GetClientData(ctx context.Context, in *ReqGetClientData, opts ...grpc.CallOption) (*ResGetClientData, error)
	// cluster API
	AddCluster(ctx context.Context, in *ReqAddCluster, opts ...grpc.CallOption) (*ResAddCluster, error)
	UpdateCluster(ctx context.Context, in *ReqUpdateCluster, opts ...grpc.CallOption) (*ResUpdateCluster, error)
	DeleteCluster(ctx context.Context, in *ReqDeleteCluster, opts ...grpc.CallOption) (*ResDeleteCluster, error)
	GetCluster(ctx context.Context, in *ReqGetCluster, opts ...grpc.CallOption) (*ResGetCluster, error)
	// resource API
	AddResource(ctx context.Context, in *ReqAddResource, opts ...grpc.CallOption) (*ResAddResource, error)
	UpdateResource(ctx context.Context, in *ReqUpdateResource, opts ...grpc.CallOption) (*ResUpdateResource, error)
	DeleteResource(ctx context.Context, in *ReqDeleteResource, opts ...grpc.CallOption) (*ResDeleteResource, error)
	GetResources(ctx context.Context, in *ReqGetResources, opts ...grpc.CallOption) (*ResGetResources, error)
	// token API
	GenerateToken(ctx context.Context, in *ReqGenerateToken, opts ...grpc.CallOption) (*ResGenerateToken, error)
	RefreshToken(ctx context.Context, in *ReqRefreshToken, opts ...grpc.CallOption) (*ResRefreshToken, error)
	InvalidateAllTokens(ctx context.Context, in *ReqInvalidateAllTokens, opts ...grpc.CallOption) (*ResInvalidateAllTokens, error)
}

type authServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewAuthServiceClient(cc grpc.ClientConnInterface) AuthServiceClient {
	return &authServiceClient{cc}
}

func (c *authServiceClient) CreateClient(ctx context.Context, in *ReqCreateClient, opts ...grpc.CallOption) (*ResCreateClient, error) {
	out := new(ResCreateClient)
	err := c.cc.Invoke(ctx, "/services.AuthService/CreateClient", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authServiceClient) UpdateClient(ctx context.Context, in *ReqUpdateClient, opts ...grpc.CallOption) (*ResUpdateClient, error) {
	out := new(ResUpdateClient)
	err := c.cc.Invoke(ctx, "/services.AuthService/UpdateClient", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authServiceClient) DeleteClient(ctx context.Context, in *ReqDeleteClient, opts ...grpc.CallOption) (*ResDeleteClient, error) {
	out := new(ResDeleteClient)
	err := c.cc.Invoke(ctx, "/services.AuthService/DeleteClient", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authServiceClient) GetClientData(ctx context.Context, in *ReqGetClientData, opts ...grpc.CallOption) (*ResGetClientData, error) {
	out := new(ResGetClientData)
	err := c.cc.Invoke(ctx, "/services.AuthService/GetClientData", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authServiceClient) AddCluster(ctx context.Context, in *ReqAddCluster, opts ...grpc.CallOption) (*ResAddCluster, error) {
	out := new(ResAddCluster)
	err := c.cc.Invoke(ctx, "/services.AuthService/AddCluster", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authServiceClient) UpdateCluster(ctx context.Context, in *ReqUpdateCluster, opts ...grpc.CallOption) (*ResUpdateCluster, error) {
	out := new(ResUpdateCluster)
	err := c.cc.Invoke(ctx, "/services.AuthService/UpdateCluster", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authServiceClient) DeleteCluster(ctx context.Context, in *ReqDeleteCluster, opts ...grpc.CallOption) (*ResDeleteCluster, error) {
	out := new(ResDeleteCluster)
	err := c.cc.Invoke(ctx, "/services.AuthService/DeleteCluster", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authServiceClient) GetCluster(ctx context.Context, in *ReqGetCluster, opts ...grpc.CallOption) (*ResGetCluster, error) {
	out := new(ResGetCluster)
	err := c.cc.Invoke(ctx, "/services.AuthService/GetCluster", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authServiceClient) AddResource(ctx context.Context, in *ReqAddResource, opts ...grpc.CallOption) (*ResAddResource, error) {
	out := new(ResAddResource)
	err := c.cc.Invoke(ctx, "/services.AuthService/AddResource", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authServiceClient) UpdateResource(ctx context.Context, in *ReqUpdateResource, opts ...grpc.CallOption) (*ResUpdateResource, error) {
	out := new(ResUpdateResource)
	err := c.cc.Invoke(ctx, "/services.AuthService/UpdateResource", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authServiceClient) DeleteResource(ctx context.Context, in *ReqDeleteResource, opts ...grpc.CallOption) (*ResDeleteResource, error) {
	out := new(ResDeleteResource)
	err := c.cc.Invoke(ctx, "/services.AuthService/DeleteResource", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authServiceClient) GetResources(ctx context.Context, in *ReqGetResources, opts ...grpc.CallOption) (*ResGetResources, error) {
	out := new(ResGetResources)
	err := c.cc.Invoke(ctx, "/services.AuthService/GetResources", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authServiceClient) GenerateToken(ctx context.Context, in *ReqGenerateToken, opts ...grpc.CallOption) (*ResGenerateToken, error) {
	out := new(ResGenerateToken)
	err := c.cc.Invoke(ctx, "/services.AuthService/GenerateToken", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authServiceClient) RefreshToken(ctx context.Context, in *ReqRefreshToken, opts ...grpc.CallOption) (*ResRefreshToken, error) {
	out := new(ResRefreshToken)
	err := c.cc.Invoke(ctx, "/services.AuthService/RefreshToken", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authServiceClient) InvalidateAllTokens(ctx context.Context, in *ReqInvalidateAllTokens, opts ...grpc.CallOption) (*ResInvalidateAllTokens, error) {
	out := new(ResInvalidateAllTokens)
	err := c.cc.Invoke(ctx, "/services.AuthService/InvalidateAllTokens", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// AuthServiceServer is the server API for AuthService service.
type AuthServiceServer interface {
	// TODO: add methods for get lists of any objects with optional filters and pagination...
	// client API
	CreateClient(context.Context, *ReqCreateClient) (*ResCreateClient, error)
	UpdateClient(context.Context, *ReqUpdateClient) (*ResUpdateClient, error)
	DeleteClient(context.Context, *ReqDeleteClient) (*ResDeleteClient, error)
	GetClientData(context.Context, *ReqGetClientData) (*ResGetClientData, error)
	// cluster API
	AddCluster(context.Context, *ReqAddCluster) (*ResAddCluster, error)
	UpdateCluster(context.Context, *ReqUpdateCluster) (*ResUpdateCluster, error)
	DeleteCluster(context.Context, *ReqDeleteCluster) (*ResDeleteCluster, error)
	GetCluster(context.Context, *ReqGetCluster) (*ResGetCluster, error)
	// resource API
	AddResource(context.Context, *ReqAddResource) (*ResAddResource, error)
	UpdateResource(context.Context, *ReqUpdateResource) (*ResUpdateResource, error)
	DeleteResource(context.Context, *ReqDeleteResource) (*ResDeleteResource, error)
	GetResources(context.Context, *ReqGetResources) (*ResGetResources, error)
	// token API
	GenerateToken(context.Context, *ReqGenerateToken) (*ResGenerateToken, error)
	RefreshToken(context.Context, *ReqRefreshToken) (*ResRefreshToken, error)
	InvalidateAllTokens(context.Context, *ReqInvalidateAllTokens) (*ResInvalidateAllTokens, error)
}

// UnimplementedAuthServiceServer can be embedded to have forward compatible implementations.
type UnimplementedAuthServiceServer struct {
}

func (*UnimplementedAuthServiceServer) CreateClient(context.Context, *ReqCreateClient) (*ResCreateClient, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateClient not implemented")
}
func (*UnimplementedAuthServiceServer) UpdateClient(context.Context, *ReqUpdateClient) (*ResUpdateClient, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateClient not implemented")
}
func (*UnimplementedAuthServiceServer) DeleteClient(context.Context, *ReqDeleteClient) (*ResDeleteClient, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteClient not implemented")
}
func (*UnimplementedAuthServiceServer) GetClientData(context.Context, *ReqGetClientData) (*ResGetClientData, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetClientData not implemented")
}
func (*UnimplementedAuthServiceServer) AddCluster(context.Context, *ReqAddCluster) (*ResAddCluster, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddCluster not implemented")
}
func (*UnimplementedAuthServiceServer) UpdateCluster(context.Context, *ReqUpdateCluster) (*ResUpdateCluster, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateCluster not implemented")
}
func (*UnimplementedAuthServiceServer) DeleteCluster(context.Context, *ReqDeleteCluster) (*ResDeleteCluster, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteCluster not implemented")
}
func (*UnimplementedAuthServiceServer) GetCluster(context.Context, *ReqGetCluster) (*ResGetCluster, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetCluster not implemented")
}
func (*UnimplementedAuthServiceServer) AddResource(context.Context, *ReqAddResource) (*ResAddResource, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddResource not implemented")
}
func (*UnimplementedAuthServiceServer) UpdateResource(context.Context, *ReqUpdateResource) (*ResUpdateResource, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateResource not implemented")
}
func (*UnimplementedAuthServiceServer) DeleteResource(context.Context, *ReqDeleteResource) (*ResDeleteResource, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteResource not implemented")
}
func (*UnimplementedAuthServiceServer) GetResources(context.Context, *ReqGetResources) (*ResGetResources, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetResources not implemented")
}
func (*UnimplementedAuthServiceServer) GenerateToken(context.Context, *ReqGenerateToken) (*ResGenerateToken, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GenerateToken not implemented")
}
func (*UnimplementedAuthServiceServer) RefreshToken(context.Context, *ReqRefreshToken) (*ResRefreshToken, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RefreshToken not implemented")
}
func (*UnimplementedAuthServiceServer) InvalidateAllTokens(context.Context, *ReqInvalidateAllTokens) (*ResInvalidateAllTokens, error) {
	return nil, status.Errorf(codes.Unimplemented, "method InvalidateAllTokens not implemented")
}

func RegisterAuthServiceServer(s *grpc.Server, srv AuthServiceServer) {
	s.RegisterService(&_AuthService_serviceDesc, srv)
}

func _AuthService_CreateClient_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqCreateClient)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthServiceServer).CreateClient(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/services.AuthService/CreateClient",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthServiceServer).CreateClient(ctx, req.(*ReqCreateClient))
	}
	return interceptor(ctx, in, info, handler)
}

func _AuthService_UpdateClient_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqUpdateClient)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthServiceServer).UpdateClient(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/services.AuthService/UpdateClient",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthServiceServer).UpdateClient(ctx, req.(*ReqUpdateClient))
	}
	return interceptor(ctx, in, info, handler)
}

func _AuthService_DeleteClient_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqDeleteClient)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthServiceServer).DeleteClient(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/services.AuthService/DeleteClient",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthServiceServer).DeleteClient(ctx, req.(*ReqDeleteClient))
	}
	return interceptor(ctx, in, info, handler)
}

func _AuthService_GetClientData_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqGetClientData)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthServiceServer).GetClientData(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/services.AuthService/GetClientData",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthServiceServer).GetClientData(ctx, req.(*ReqGetClientData))
	}
	return interceptor(ctx, in, info, handler)
}

func _AuthService_AddCluster_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqAddCluster)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthServiceServer).AddCluster(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/services.AuthService/AddCluster",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthServiceServer).AddCluster(ctx, req.(*ReqAddCluster))
	}
	return interceptor(ctx, in, info, handler)
}

func _AuthService_UpdateCluster_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqUpdateCluster)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthServiceServer).UpdateCluster(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/services.AuthService/UpdateCluster",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthServiceServer).UpdateCluster(ctx, req.(*ReqUpdateCluster))
	}
	return interceptor(ctx, in, info, handler)
}

func _AuthService_DeleteCluster_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqDeleteCluster)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthServiceServer).DeleteCluster(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/services.AuthService/DeleteCluster",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthServiceServer).DeleteCluster(ctx, req.(*ReqDeleteCluster))
	}
	return interceptor(ctx, in, info, handler)
}

func _AuthService_GetCluster_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqGetCluster)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthServiceServer).GetCluster(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/services.AuthService/GetCluster",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthServiceServer).GetCluster(ctx, req.(*ReqGetCluster))
	}
	return interceptor(ctx, in, info, handler)
}

func _AuthService_AddResource_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqAddResource)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthServiceServer).AddResource(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/services.AuthService/AddResource",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthServiceServer).AddResource(ctx, req.(*ReqAddResource))
	}
	return interceptor(ctx, in, info, handler)
}

func _AuthService_UpdateResource_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqUpdateResource)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthServiceServer).UpdateResource(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/services.AuthService/UpdateResource",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthServiceServer).UpdateResource(ctx, req.(*ReqUpdateResource))
	}
	return interceptor(ctx, in, info, handler)
}

func _AuthService_DeleteResource_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqDeleteResource)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthServiceServer).DeleteResource(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/services.AuthService/DeleteResource",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthServiceServer).DeleteResource(ctx, req.(*ReqDeleteResource))
	}
	return interceptor(ctx, in, info, handler)
}

func _AuthService_GetResources_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqGetResources)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthServiceServer).GetResources(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/services.AuthService/GetResources",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthServiceServer).GetResources(ctx, req.(*ReqGetResources))
	}
	return interceptor(ctx, in, info, handler)
}

func _AuthService_GenerateToken_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqGenerateToken)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthServiceServer).GenerateToken(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/services.AuthService/GenerateToken",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthServiceServer).GenerateToken(ctx, req.(*ReqGenerateToken))
	}
	return interceptor(ctx, in, info, handler)
}

func _AuthService_RefreshToken_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqRefreshToken)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthServiceServer).RefreshToken(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/services.AuthService/RefreshToken",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthServiceServer).RefreshToken(ctx, req.(*ReqRefreshToken))
	}
	return interceptor(ctx, in, info, handler)
}

func _AuthService_InvalidateAllTokens_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqInvalidateAllTokens)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthServiceServer).InvalidateAllTokens(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/services.AuthService/InvalidateAllTokens",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthServiceServer).InvalidateAllTokens(ctx, req.(*ReqInvalidateAllTokens))
	}
	return interceptor(ctx, in, info, handler)
}

var _AuthService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "services.AuthService",
	HandlerType: (*AuthServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateClient",
			Handler:    _AuthService_CreateClient_Handler,
		},
		{
			MethodName: "UpdateClient",
			Handler:    _AuthService_UpdateClient_Handler,
		},
		{
			MethodName: "DeleteClient",
			Handler:    _AuthService_DeleteClient_Handler,
		},
		{
			MethodName: "GetClientData",
			Handler:    _AuthService_GetClientData_Handler,
		},
		{
			MethodName: "AddCluster",
			Handler:    _AuthService_AddCluster_Handler,
		},
		{
			MethodName: "UpdateCluster",
			Handler:    _AuthService_UpdateCluster_Handler,
		},
		{
			MethodName: "DeleteCluster",
			Handler:    _AuthService_DeleteCluster_Handler,
		},
		{
			MethodName: "GetCluster",
			Handler:    _AuthService_GetCluster_Handler,
		},
		{
			MethodName: "AddResource",
			Handler:    _AuthService_AddResource_Handler,
		},
		{
			MethodName: "UpdateResource",
			Handler:    _AuthService_UpdateResource_Handler,
		},
		{
			MethodName: "DeleteResource",
			Handler:    _AuthService_DeleteResource_Handler,
		},
		{
			MethodName: "GetResources",
			Handler:    _AuthService_GetResources_Handler,
		},
		{
			MethodName: "GenerateToken",
			Handler:    _AuthService_GenerateToken_Handler,
		},
		{
			MethodName: "RefreshToken",
			Handler:    _AuthService_RefreshToken_Handler,
		},
		{
			MethodName: "InvalidateAllTokens",
			Handler:    _AuthService_InvalidateAllTokens_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/services/auth.proto",
}
