// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"encoding/json"
	"fmt"
)

type CommonDefaultErrorCode string

const (
	CommonDefaultErrorCodeAccessForbidden    CommonDefaultErrorCode = "AccessForbidden"
	CommonDefaultErrorCodeInternalError      CommonDefaultErrorCode = "InternalError"
	CommonDefaultErrorCodeInvalidRequest     CommonDefaultErrorCode = "InvalidRequest"
	CommonDefaultErrorCodeResourceNotFound   CommonDefaultErrorCode = "ResourceNotFound"
	CommonDefaultErrorCodeServiceUnavailable CommonDefaultErrorCode = "ServiceUnavailable"
	CommonDefaultErrorCodeUnauthorized       CommonDefaultErrorCode = "Unauthorized"
)

func (e CommonDefaultErrorCode) ToPointer() *CommonDefaultErrorCode {
	return &e
}
func (e *CommonDefaultErrorCode) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "AccessForbidden":
		fallthrough
	case "InternalError":
		fallthrough
	case "InvalidRequest":
		fallthrough
	case "ResourceNotFound":
		fallthrough
	case "ServiceUnavailable":
		fallthrough
	case "Unauthorized":
		*e = CommonDefaultErrorCode(v)
		return nil
	default:
		return fmt.Errorf("invalid value for CommonDefaultErrorCode: %v", v)
	}
}
