// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"encoding/json"
	"fmt"
	"github.com/solarwinds/swo-sdk-go/swov1/internal/utils"
	"time"
)

type Status string

const (
	StatusUp          Status = "up"
	StatusDown        Status = "down"
	StatusPaused      Status = "paused"
	StatusMaintenance Status = "maintenance"
	StatusUnknown     Status = "unknown"
)

func (e Status) ToPointer() *Status {
	return &e
}
func (e *Status) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "up":
		fallthrough
	case "down":
		fallthrough
	case "paused":
		fallthrough
	case "maintenance":
		fallthrough
	case "unknown":
		*e = Status(v)
		return nil
	default:
		return fmt.Errorf("invalid value for Status: %v", v)
	}
}

type DemGetTransactionResponse struct {
	ID     string `json:"id"`
	Type   string `json:"type"`
	Status Status `json:"status"`
	// Name of the transaction, which must be unique within the organization. The name must not contain any control characters, any white space other than space (U+0020), or any consecutive, leading or trailing spaces.
	Name string `json:"name"`
	// Description of the transaction.
	Description *string `json:"description,omitempty"`
	// Id of an entity to which the transaction is connected.
	RelatedEntityID *string `json:"relatedEntityId,omitempty"`
	// Test definition for the transaction.
	TestDefinition DemTransactionTestDefinition `json:"testDefinition"`
	// Entity tags. Tag is a key-value pair, where there may be only single tag value for the same key.
	Tags []CommonTag `json:"tags,omitempty"`
	// Time when the last outage started.
	LastOutageStartTime *time.Time `json:"lastOutageStartTime,omitempty"`
	// Time when the last outage ended.
	LastOutageEndTime *time.Time `json:"lastOutageEndTime,omitempty"`
	// Time when the last test was performed.
	LastTestTime *time.Time `json:"lastTestTime,omitempty"`
	// Last time when a synthetic test failed.
	LastErrorTime *time.Time `json:"lastErrorTime,omitempty"`
}

func (d DemGetTransactionResponse) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(d, "", false)
}

func (d *DemGetTransactionResponse) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &d, "", false, []string{"id", "type", "status", "name", "testDefinition"}); err != nil {
		return err
	}
	return nil
}

func (d *DemGetTransactionResponse) GetID() string {
	if d == nil {
		return ""
	}
	return d.ID
}

func (d *DemGetTransactionResponse) GetType() string {
	if d == nil {
		return ""
	}
	return d.Type
}

func (d *DemGetTransactionResponse) GetStatus() Status {
	if d == nil {
		return Status("")
	}
	return d.Status
}

func (d *DemGetTransactionResponse) GetName() string {
	if d == nil {
		return ""
	}
	return d.Name
}

func (d *DemGetTransactionResponse) GetDescription() *string {
	if d == nil {
		return nil
	}
	return d.Description
}

func (d *DemGetTransactionResponse) GetRelatedEntityID() *string {
	if d == nil {
		return nil
	}
	return d.RelatedEntityID
}

func (d *DemGetTransactionResponse) GetTestDefinition() DemTransactionTestDefinition {
	if d == nil {
		return DemTransactionTestDefinition{}
	}
	return d.TestDefinition
}

func (d *DemGetTransactionResponse) GetTags() []CommonTag {
	if d == nil {
		return nil
	}
	return d.Tags
}

func (d *DemGetTransactionResponse) GetLastOutageStartTime() *time.Time {
	if d == nil {
		return nil
	}
	return d.LastOutageStartTime
}

func (d *DemGetTransactionResponse) GetLastOutageEndTime() *time.Time {
	if d == nil {
		return nil
	}
	return d.LastOutageEndTime
}

func (d *DemGetTransactionResponse) GetLastTestTime() *time.Time {
	if d == nil {
		return nil
	}
	return d.LastTestTime
}

func (d *DemGetTransactionResponse) GetLastErrorTime() *time.Time {
	if d == nil {
		return nil
	}
	return d.LastErrorTime
}
