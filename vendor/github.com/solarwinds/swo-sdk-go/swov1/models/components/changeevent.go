// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

type ChangeEvent struct {
	// Optional ID of the event. It is recommended to leave this empty when creating a new event so that a unique ID will be generated
	ID *int64 `json:"id,omitempty"`
	// The name of the event. Can be used as a category or type of event. Does not need to be unique.
	Name string `json:"name"`
	// A short, high-level summary of the event.
	Title string `json:"title"`
	// Timestamp of the event in seconds since the epoch. Defaults to the current time.
	Timestamp *int64 `json:"timestamp,omitempty"`
	// Description of the event's origination. For example, a hostname, user, or application name.
	Source *string `json:"source,omitempty"`
	// Extra metadata about the event describing the specifics of the event.
	Description *string `json:"description,omitempty"`
	// The id of the parent event
	ParentEventID *int64 `json:"parentEventId,omitempty"`
	// A set of key-value pairs that describe the event
	Tags map[string]string `json:"tags,omitempty"`
	// A set of links to related resources
	Links []CommonLink `json:"links,omitempty"`
}

func (o *ChangeEvent) GetID() *int64 {
	if o == nil {
		return nil
	}
	return o.ID
}

func (o *ChangeEvent) GetName() string {
	if o == nil {
		return ""
	}
	return o.Name
}

func (o *ChangeEvent) GetTitle() string {
	if o == nil {
		return ""
	}
	return o.Title
}

func (o *ChangeEvent) GetTimestamp() *int64 {
	if o == nil {
		return nil
	}
	return o.Timestamp
}

func (o *ChangeEvent) GetSource() *string {
	if o == nil {
		return nil
	}
	return o.Source
}

func (o *ChangeEvent) GetDescription() *string {
	if o == nil {
		return nil
	}
	return o.Description
}

func (o *ChangeEvent) GetParentEventID() *int64 {
	if o == nil {
		return nil
	}
	return o.ParentEventID
}

func (o *ChangeEvent) GetTags() map[string]string {
	if o == nil {
		return nil
	}
	return o.Tags
}

func (o *ChangeEvent) GetLinks() []CommonLink {
	if o == nil {
		return nil
	}
	return o.Links
}
