// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"github.com/solarwinds/swo-sdk-go/swov1/internal/utils"
)

type DboDatabaseConnectionOptions struct {
	// Database server host
	Host string `json:"host"`
	// Database server port
	Port *string `default:"" json:"port"`
	// Database schema name
	Dbname *string `default:"" json:"dbname"`
	// Encrypted credentials for connecting to the database server when using basic authentication (username, password)
	// can be generated using this command:
	// ./dbo-headless-installer -swoparams=<SwoParamasJsonFile> --encrypt-creds --user=<USERNAME> --password=<PASSWORD>
	// Use the dbo-headless-installer binary located at:
	// https://agent-binaries.cloud.solarwinds.com/?prefix=dbo-headless-installer/latest/
	EncryptedCredentials *string `default:"" json:"encryptedCredentials"`
	// Username for connecting to database server needed only for auth methods other than basic auth
	User *string `default:"" json:"user"`
	// Enable ssl when agent connects to database server
	SslEnabled *bool `default:"false" json:"sslEnabled"`
	// SSL connection options, when sslEnabled is true
	SslOptions *DboDatabaseSslOptions `json:"sslOptions,omitempty"`
	// Cloud region in case of database managed by cloud provider, required for IAM authentication
	CloudRegion *string `default:"" json:"cloudRegion"`
	// binding for packet sniffing for sniffer captureMethod (on-host), example: 0.0.0.0:6379,[::]:6379
	Bindings *string `default:"" json:"bindings"`
}

func (d DboDatabaseConnectionOptions) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(d, "", false)
}

func (d *DboDatabaseConnectionOptions) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &d, "", false, []string{"host"}); err != nil {
		return err
	}
	return nil
}

func (d *DboDatabaseConnectionOptions) GetHost() string {
	if d == nil {
		return ""
	}
	return d.Host
}

func (d *DboDatabaseConnectionOptions) GetPort() *string {
	if d == nil {
		return nil
	}
	return d.Port
}

func (d *DboDatabaseConnectionOptions) GetDbname() *string {
	if d == nil {
		return nil
	}
	return d.Dbname
}

func (d *DboDatabaseConnectionOptions) GetEncryptedCredentials() *string {
	if d == nil {
		return nil
	}
	return d.EncryptedCredentials
}

func (d *DboDatabaseConnectionOptions) GetUser() *string {
	if d == nil {
		return nil
	}
	return d.User
}

func (d *DboDatabaseConnectionOptions) GetSslEnabled() *bool {
	if d == nil {
		return nil
	}
	return d.SslEnabled
}

func (d *DboDatabaseConnectionOptions) GetSslOptions() *DboDatabaseSslOptions {
	if d == nil {
		return nil
	}
	return d.SslOptions
}

func (d *DboDatabaseConnectionOptions) GetCloudRegion() *string {
	if d == nil {
		return nil
	}
	return d.CloudRegion
}

func (d *DboDatabaseConnectionOptions) GetBindings() *string {
	if d == nil {
		return nil
	}
	return d.Bindings
}
