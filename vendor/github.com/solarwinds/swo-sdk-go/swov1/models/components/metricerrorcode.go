// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"encoding/json"
	"fmt"
)

type MetricErrorCode string

const (
	MetricErrorCodeAccessForbidden    MetricErrorCode = "AccessForbidden"
	MetricErrorCodeInternalError      MetricErrorCode = "InternalError"
	MetricErrorCodeInvalidRequest     MetricErrorCode = "InvalidRequest"
	MetricErrorCodeResourceNotFound   MetricErrorCode = "ResourceNotFound"
	MetricErrorCodeServiceUnavailable MetricErrorCode = "ServiceUnavailable"
	MetricErrorCodeUnauthorized       MetricErrorCode = "Unauthorized"
	MetricErrorCodeCannotModifyMetric MetricErrorCode = "CannotModifyMetric"
	MetricErrorCodeMetricNameExists   MetricErrorCode = "MetricNameExists"
)

func (e MetricErrorCode) ToPointer() *MetricErrorCode {
	return &e
}
func (e *MetricErrorCode) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "AccessForbidden":
		fallthrough
	case "InternalError":
		fallthrough
	case "InvalidRequest":
		fallthrough
	case "ResourceNotFound":
		fallthrough
	case "ServiceUnavailable":
		fallthrough
	case "Unauthorized":
		fallthrough
	case "CannotModifyMetric":
		fallthrough
	case "MetricNameExists":
		*e = MetricErrorCode(v)
		return nil
	default:
		return fmt.Errorf("invalid value for MetricErrorCode: %v", v)
	}
}
