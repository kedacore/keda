// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

type DboObserveDatabaseRequest struct {
	// Name for the observed database entity
	Name string `json:"name"`
	// Swo Agent ID where the plugin(s) for observing database server should run
	AgentID string `json:"agentId"`
	// Database server type: mysql/mongo/mssql/pgsql/redis
	DbType DboDatabaseType `json:"dbType"`
	// Auth method to be used by the agent to connect to database server
	AuthMethod DboDatabaseAuthMethod `json:"authMethod"`
	// Method for capturing metrics from database server: sniffer/poll/profiler/slow-log, ignored for SqlServer and Redis
	// Sniffer is supported for mysql, mongo, redis and pgsql.
	// Poll is supported for mysql, mssql, pgsql.
	// profiler and slow-log are supported for mongo.
	CaptureMethod *DboDatabaseMetricsCaptureMethod `json:"captureMethod,omitempty"`
	// Optional advanced configuration options for plugins, e.g. disable-sampling set to true
	ConfigOptions []CommonKeyValuePair `json:"configOptions,omitempty"`
	// Options specifying how plugins connect to database server
	DbConnOptions DboDatabaseConnectionOptions `json:"dbConnOptions"`
	// Tags for observed database entity
	Tags []CommonKeyValuePair `json:"tags,omitempty"`
}

func (d *DboObserveDatabaseRequest) GetName() string {
	if d == nil {
		return ""
	}
	return d.Name
}

func (d *DboObserveDatabaseRequest) GetAgentID() string {
	if d == nil {
		return ""
	}
	return d.AgentID
}

func (d *DboObserveDatabaseRequest) GetDbType() DboDatabaseType {
	if d == nil {
		return DboDatabaseType("")
	}
	return d.DbType
}

func (d *DboObserveDatabaseRequest) GetAuthMethod() DboDatabaseAuthMethod {
	if d == nil {
		return DboDatabaseAuthMethod("")
	}
	return d.AuthMethod
}

func (d *DboObserveDatabaseRequest) GetCaptureMethod() *DboDatabaseMetricsCaptureMethod {
	if d == nil {
		return nil
	}
	return d.CaptureMethod
}

func (d *DboObserveDatabaseRequest) GetConfigOptions() []CommonKeyValuePair {
	if d == nil {
		return nil
	}
	return d.ConfigOptions
}

func (d *DboObserveDatabaseRequest) GetDbConnOptions() DboDatabaseConnectionOptions {
	if d == nil {
		return DboDatabaseConnectionOptions{}
	}
	return d.DbConnOptions
}

func (d *DboObserveDatabaseRequest) GetTags() []CommonKeyValuePair {
	if d == nil {
		return nil
	}
	return d.Tags
}
