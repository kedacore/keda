// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package apierrors

import (
	"encoding/json"
	"fmt"
)

// CommonInternalErrorResponseCode - Uniquely identifies an error condition.
type CommonInternalErrorResponseCode string

const (
	CommonInternalErrorResponseCodeAccessForbidden    CommonInternalErrorResponseCode = "AccessForbidden"
	CommonInternalErrorResponseCodeInternalError      CommonInternalErrorResponseCode = "InternalError"
	CommonInternalErrorResponseCodeInvalidRequest     CommonInternalErrorResponseCode = "InvalidRequest"
	CommonInternalErrorResponseCodeResourceConflict   CommonInternalErrorResponseCode = "ResourceConflict"
	CommonInternalErrorResponseCodeResourceNotFound   CommonInternalErrorResponseCode = "ResourceNotFound"
	CommonInternalErrorResponseCodeServiceUnavailable CommonInternalErrorResponseCode = "ServiceUnavailable"
	CommonInternalErrorResponseCodeUnauthorized       CommonInternalErrorResponseCode = "Unauthorized"
)

func (e CommonInternalErrorResponseCode) ToPointer() *CommonInternalErrorResponseCode {
	return &e
}
func (e *CommonInternalErrorResponseCode) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "AccessForbidden":
		fallthrough
	case "InternalError":
		fallthrough
	case "InvalidRequest":
		fallthrough
	case "ResourceConflict":
		fallthrough
	case "ResourceNotFound":
		fallthrough
	case "ServiceUnavailable":
		fallthrough
	case "Unauthorized":
		*e = CommonInternalErrorResponseCode(v)
		return nil
	default:
		return fmt.Errorf("invalid value for CommonInternalErrorResponseCode: %v", v)
	}
}

type CommonInternalErrorResponse struct {
	// Supporting description of the error.
	Message string `json:"message"`
	// Uniquely identifies an error condition.
	Code *CommonInternalErrorResponseCode `json:"code,omitempty"`
}

var _ error = &CommonInternalErrorResponse{}

func (e *CommonInternalErrorResponse) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}
